ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPIM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SPIM_initVar
  18              		.bss
  19              		.type	SPIM_initVar, %object
  20              		.size	SPIM_initVar, 1
  21              	SPIM_initVar:
  22 0000 00       		.space	1
  23              		.comm	SPIM_swStatusTx,1,1
  24              		.comm	SPIM_swStatusRx,1,1
  25              		.section	.text.SPIM_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SPIM_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	SPIM_Init, %function
  31              	SPIM_Init:
  32              	.LFB0:
  33              		.file 1 ".\\Generated_Source\\PSoC4\\SPIM.c"
   1:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SPIM.c **** * File Name: SPIM.c
   3:.\Generated_Source\PSoC4/SPIM.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/SPIM.c **** *
   5:.\Generated_Source\PSoC4/SPIM.c **** * Description:
   6:.\Generated_Source\PSoC4/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:.\Generated_Source\PSoC4/SPIM.c **** *
   8:.\Generated_Source\PSoC4/SPIM.c **** * Note:
   9:.\Generated_Source\PSoC4/SPIM.c **** *  None.
  10:.\Generated_Source\PSoC4/SPIM.c **** *
  11:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/SPIM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/SPIM.c **** 
  18:.\Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:.\Generated_Source\PSoC4/SPIM.c **** 
  20:.\Generated_Source\PSoC4/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] = {0u};
  22:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 2


  25:.\Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:.\Generated_Source\PSoC4/SPIM.c **** 
  27:.\Generated_Source\PSoC4/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] = {0u};
  29:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:.\Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:.\Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:.\Generated_Source\PSoC4/SPIM.c **** 
  34:.\Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:.\Generated_Source\PSoC4/SPIM.c **** 
  36:.\Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:.\Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:.\Generated_Source\PSoC4/SPIM.c **** 
  39:.\Generated_Source\PSoC4/SPIM.c **** 
  40:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
  41:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
  42:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  43:.\Generated_Source\PSoC4/SPIM.c **** *
  44:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
  45:.\Generated_Source\PSoC4/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:.\Generated_Source\PSoC4/SPIM.c **** *
  47:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
  48:.\Generated_Source\PSoC4/SPIM.c **** *  None.
  49:.\Generated_Source\PSoC4/SPIM.c **** *
  50:.\Generated_Source\PSoC4/SPIM.c **** * Return:
  51:.\Generated_Source\PSoC4/SPIM.c **** *  None.
  52:.\Generated_Source\PSoC4/SPIM.c **** *
  53:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
  54:.\Generated_Source\PSoC4/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:.\Generated_Source\PSoC4/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:.\Generated_Source\PSoC4/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:.\Generated_Source\PSoC4/SPIM.c **** *  clearing the FIFO and Status Register.
  58:.\Generated_Source\PSoC4/SPIM.c **** *
  59:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
  60:.\Generated_Source\PSoC4/SPIM.c **** *  No.
  61:.\Generated_Source\PSoC4/SPIM.c **** *
  62:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void) 
  64:.\Generated_Source\PSoC4/SPIM.c **** {
  34              		.loc 1 64 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
  66:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  42              		.loc 1 66 0
  43 0004 084B     		ldr	r3, .L2
  44 0006 0F22     		mov	r2, #15
  45 0008 1A70     		strb	r2, [r3]
  67:.\Generated_Source\PSoC4/SPIM.c **** 
  68:.\Generated_Source\PSoC4/SPIM.c ****     /* Init TX ISR  */
  69:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 3


  70:.\Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:.\Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:.\Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:.\Generated_Source\PSoC4/SPIM.c **** 
  75:.\Generated_Source\PSoC4/SPIM.c ****     /* Init RX ISR  */
  76:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:.\Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:.\Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:.\Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:.\Generated_Source\PSoC4/SPIM.c **** 
  82:.\Generated_Source\PSoC4/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearFIFO();
  46              		.loc 1 83 0
  47 000a FFF7FEFF 		bl	SPIM_ClearFIFO
  84:.\Generated_Source\PSoC4/SPIM.c **** 
  85:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:.\Generated_Source\PSoC4/SPIM.c **** 
  91:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:.\Generated_Source\PSoC4/SPIM.c **** 
  97:.\Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  48              		.loc 1 97 0
  49 000e FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:.\Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  50              		.loc 1 98 0
  51 0012 FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:.\Generated_Source\PSoC4/SPIM.c **** 
 100:.\Generated_Source\PSoC4/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  52              		.loc 1 101 0
  53 0016 054B     		ldr	r3, .L2+4
  54 0018 0022     		mov	r2, #0
  55 001a 1A70     		strb	r2, [r3]
 102:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 102 0
  57 001c 044B     		ldr	r3, .L2+8
  58 001e 0022     		mov	r2, #0
  59 0020 1A70     		strb	r2, [r3]
 103:.\Generated_Source\PSoC4/SPIM.c **** }
  60              		.loc 1 103 0
  61 0022 BD46     		mov	sp, r7
  62              		@ sp needed
  63 0024 80BD     		pop	{r7, pc}
  64              	.L3:
  65 0026 C046     		.align	2
  66              	.L2:
  67 0028 80000F40 		.word	1074724992
  68 002c 81000F40 		.word	1074724993
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 4


  69 0030 83000F40 		.word	1074724995
  70              		.cfi_endproc
  71              	.LFE0:
  72              		.size	SPIM_Init, .-SPIM_Init
  73              		.section	.text.SPIM_Enable,"ax",%progbits
  74              		.align	2
  75              		.global	SPIM_Enable
  76              		.code	16
  77              		.thumb_func
  78              		.type	SPIM_Enable, %function
  79              	SPIM_Enable:
  80              	.LFB1:
 104:.\Generated_Source\PSoC4/SPIM.c **** 
 105:.\Generated_Source\PSoC4/SPIM.c **** 
 106:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 108:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 109:.\Generated_Source\PSoC4/SPIM.c **** *
 110:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 111:.\Generated_Source\PSoC4/SPIM.c **** *  Enable SPIM component.
 112:.\Generated_Source\PSoC4/SPIM.c **** *
 113:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 114:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 115:.\Generated_Source\PSoC4/SPIM.c **** *
 116:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 117:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 118:.\Generated_Source\PSoC4/SPIM.c **** *
 119:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void) 
 121:.\Generated_Source\PSoC4/SPIM.c **** {
  81              		.loc 1 121 0
  82              		.cfi_startproc
  83 0000 90B5     		push	{r4, r7, lr}
  84              		.cfi_def_cfa_offset 12
  85              		.cfi_offset 4, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 123:.\Generated_Source\PSoC4/SPIM.c **** 
 124:.\Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  92              		.loc 1 124 0
  93 0006 FC1D     		add	r4, r7, #7
  94 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  95 000c 031C     		mov	r3, r0
  96 000e 2370     		strb	r3, [r4]
 125:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  97              		.loc 1 125 0
  98 0010 124B     		ldr	r3, .L5
  99 0012 124A     		ldr	r2, .L5
 100 0014 1278     		ldrb	r2, [r2]
 101 0016 D2B2     		uxtb	r2, r2
 102 0018 2021     		mov	r1, #32
 103 001a 0A43     		orr	r2, r1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 5


 104 001c D2B2     		uxtb	r2, r2
 105 001e 1A70     		strb	r2, [r3]
 126:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 106              		.loc 1 126 0
 107 0020 0F4B     		ldr	r3, .L5+4
 108 0022 0F4A     		ldr	r2, .L5+4
 109 0024 1278     		ldrb	r2, [r2]
 110 0026 D2B2     		uxtb	r2, r2
 111 0028 1021     		mov	r1, #16
 112 002a 0A43     		orr	r2, r1
 113 002c D2B2     		uxtb	r2, r2
 114 002e 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 115              		.loc 1 127 0
 116 0030 0C4B     		ldr	r3, .L5+8
 117 0032 0C4A     		ldr	r2, .L5+8
 118 0034 1278     		ldrb	r2, [r2]
 119 0036 D2B2     		uxtb	r2, r2
 120 0038 1021     		mov	r1, #16
 121 003a 0A43     		orr	r2, r1
 122 003c D2B2     		uxtb	r2, r2
 123 003e 1A70     		strb	r2, [r3]
 128:.\Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 0040 FB1D     		add	r3, r7, #7
 126 0042 1B78     		ldrb	r3, [r3]
 127 0044 181C     		mov	r0, r3
 128 0046 FFF7FEFF 		bl	CyExitCriticalSection
 129:.\Generated_Source\PSoC4/SPIM.c **** 
 130:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Enable();
 129              		.loc 1 131 0
 130 004a FFF7FEFF 		bl	SPIM_IntClock_Start
 132:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:.\Generated_Source\PSoC4/SPIM.c **** 
 134:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 131              		.loc 1 134 0
 132 004e FFF7FEFF 		bl	SPIM_EnableTxInt
 135:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 133              		.loc 1 135 0
 134 0052 FFF7FEFF 		bl	SPIM_EnableRxInt
 136:.\Generated_Source\PSoC4/SPIM.c **** }
 135              		.loc 1 136 0
 136 0056 BD46     		mov	sp, r7
 137 0058 03B0     		add	sp, sp, #12
 138              		@ sp needed
 139 005a 90BD     		pop	{r4, r7, pc}
 140              	.L6:
 141              		.align	2
 142              	.L5:
 143 005c 90000F40 		.word	1074725008
 144 0060 91000F40 		.word	1074725009
 145 0064 93000F40 		.word	1074725011
 146              		.cfi_endproc
 147              	.LFE1:
 148              		.size	SPIM_Enable, .-SPIM_Enable
 149              		.section	.text.SPIM_Start,"ax",%progbits
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 6


 150              		.align	2
 151              		.global	SPIM_Start
 152              		.code	16
 153              		.thumb_func
 154              		.type	SPIM_Start, %function
 155              	SPIM_Start:
 156              	.LFB2:
 137:.\Generated_Source\PSoC4/SPIM.c **** 
 138:.\Generated_Source\PSoC4/SPIM.c **** 
 139:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 140:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 141:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 142:.\Generated_Source\PSoC4/SPIM.c **** *
 143:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 144:.\Generated_Source\PSoC4/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:.\Generated_Source\PSoC4/SPIM.c **** *
 146:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 147:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 148:.\Generated_Source\PSoC4/SPIM.c **** *
 149:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 150:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 151:.\Generated_Source\PSoC4/SPIM.c **** *
 152:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 153:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:.\Generated_Source\PSoC4/SPIM.c **** *  first function call.
 155:.\Generated_Source\PSoC4/SPIM.c **** *
 156:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 157:.\Generated_Source\PSoC4/SPIM.c **** *  Enable the clock input to enable operation.
 158:.\Generated_Source\PSoC4/SPIM.c **** *
 159:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 160:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 161:.\Generated_Source\PSoC4/SPIM.c **** *
 162:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 163:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void) 
 164:.\Generated_Source\PSoC4/SPIM.c **** {
 157              		.loc 1 164 0
 158              		.cfi_startproc
 159 0000 80B5     		push	{r7, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165:.\Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 165              		.loc 1 165 0
 166 0004 064B     		ldr	r3, .L9
 167 0006 1B78     		ldrb	r3, [r3]
 168 0008 002B     		cmp	r3, #0
 169 000a 04D1     		bne	.L8
 166:.\Generated_Source\PSoC4/SPIM.c ****     {
 167:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 170              		.loc 1 167 0
 171 000c FFF7FEFF 		bl	SPIM_Init
 168:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 172              		.loc 1 168 0
 173 0010 034B     		ldr	r3, .L9
 174 0012 0122     		mov	r2, #1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 7


 175 0014 1A70     		strb	r2, [r3]
 176              	.L8:
 169:.\Generated_Source\PSoC4/SPIM.c ****     }
 170:.\Generated_Source\PSoC4/SPIM.c **** 
 171:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 177              		.loc 1 171 0
 178 0016 FFF7FEFF 		bl	SPIM_Enable
 172:.\Generated_Source\PSoC4/SPIM.c **** }
 179              		.loc 1 172 0
 180 001a BD46     		mov	sp, r7
 181              		@ sp needed
 182 001c 80BD     		pop	{r7, pc}
 183              	.L10:
 184 001e C046     		.align	2
 185              	.L9:
 186 0020 00000000 		.word	SPIM_initVar
 187              		.cfi_endproc
 188              	.LFE2:
 189              		.size	SPIM_Start, .-SPIM_Start
 190              		.section	.text.SPIM_Stop,"ax",%progbits
 191              		.align	2
 192              		.global	SPIM_Stop
 193              		.code	16
 194              		.thumb_func
 195              		.type	SPIM_Stop, %function
 196              	SPIM_Stop:
 197              	.LFB3:
 173:.\Generated_Source\PSoC4/SPIM.c **** 
 174:.\Generated_Source\PSoC4/SPIM.c **** 
 175:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 176:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 177:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 178:.\Generated_Source\PSoC4/SPIM.c **** *
 179:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 180:.\Generated_Source\PSoC4/SPIM.c **** *  Disable the SPI Master component.
 181:.\Generated_Source\PSoC4/SPIM.c **** *
 182:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 183:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 184:.\Generated_Source\PSoC4/SPIM.c **** *
 185:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 186:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 187:.\Generated_Source\PSoC4/SPIM.c **** *
 188:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 189:.\Generated_Source\PSoC4/SPIM.c **** *  Disable the clock input to enable operation.
 190:.\Generated_Source\PSoC4/SPIM.c **** *
 191:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void) 
 193:.\Generated_Source\PSoC4/SPIM.c **** {
 198              		.loc 1 193 0
 199              		.cfi_startproc
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 8


 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 194:.\Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 195:.\Generated_Source\PSoC4/SPIM.c **** 
 196:.\Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 209              		.loc 1 196 0
 210 0006 FC1D     		add	r4, r7, #7
 211 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 212 000c 031C     		mov	r3, r0
 213 000e 2370     		strb	r3, [r4]
 197:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 214              		.loc 1 197 0
 215 0010 0E4B     		ldr	r3, .L12
 216 0012 0E4A     		ldr	r2, .L12
 217 0014 1278     		ldrb	r2, [r2]
 218 0016 D2B2     		uxtb	r2, r2
 219 0018 1021     		mov	r1, #16
 220 001a 8A43     		bic	r2, r1
 221 001c D2B2     		uxtb	r2, r2
 222 001e 1A70     		strb	r2, [r3]
 198:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 223              		.loc 1 198 0
 224 0020 0B4B     		ldr	r3, .L12+4
 225 0022 0B4A     		ldr	r2, .L12+4
 226 0024 1278     		ldrb	r2, [r2]
 227 0026 D2B2     		uxtb	r2, r2
 228 0028 1021     		mov	r1, #16
 229 002a 8A43     		bic	r2, r1
 230 002c D2B2     		uxtb	r2, r2
 231 002e 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 232              		.loc 1 199 0
 233 0030 FB1D     		add	r3, r7, #7
 234 0032 1B78     		ldrb	r3, [r3]
 235 0034 181C     		mov	r0, r3
 236 0036 FFF7FEFF 		bl	CyExitCriticalSection
 200:.\Generated_Source\PSoC4/SPIM.c **** 
 201:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Disable();
 237              		.loc 1 202 0
 238 003a FFF7FEFF 		bl	SPIM_IntClock_Stop
 203:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:.\Generated_Source\PSoC4/SPIM.c **** 
 205:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 239              		.loc 1 205 0
 240 003e FFF7FEFF 		bl	SPIM_DisableTxInt
 206:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 241              		.loc 1 206 0
 242 0042 FFF7FEFF 		bl	SPIM_DisableRxInt
 207:.\Generated_Source\PSoC4/SPIM.c **** }
 243              		.loc 1 207 0
 244 0046 BD46     		mov	sp, r7
 245 0048 03B0     		add	sp, sp, #12
 246              		@ sp needed
 247 004a 90BD     		pop	{r4, r7, pc}
 248              	.L13:
 249              		.align	2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 9


 250              	.L12:
 251 004c 91000F40 		.word	1074725009
 252 0050 93000F40 		.word	1074725011
 253              		.cfi_endproc
 254              	.LFE3:
 255              		.size	SPIM_Stop, .-SPIM_Stop
 256              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 257              		.align	2
 258              		.global	SPIM_EnableTxInt
 259              		.code	16
 260              		.thumb_func
 261              		.type	SPIM_EnableTxInt, %function
 262              	SPIM_EnableTxInt:
 263              	.LFB4:
 208:.\Generated_Source\PSoC4/SPIM.c **** 
 209:.\Generated_Source\PSoC4/SPIM.c **** 
 210:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 213:.\Generated_Source\PSoC4/SPIM.c **** *
 214:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 215:.\Generated_Source\PSoC4/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:.\Generated_Source\PSoC4/SPIM.c **** *
 217:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 218:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 219:.\Generated_Source\PSoC4/SPIM.c **** *
 220:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 221:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 222:.\Generated_Source\PSoC4/SPIM.c **** *
 223:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 224:.\Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:.\Generated_Source\PSoC4/SPIM.c **** *
 226:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:.\Generated_Source\PSoC4/SPIM.c **** {
 264              		.loc 1 228 0
 265              		.cfi_startproc
 266 0000 80B5     		push	{r7, lr}
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 7, -8
 269              		.cfi_offset 14, -4
 270 0002 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:.\Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:.\Generated_Source\PSoC4/SPIM.c **** }
 272              		.loc 1 232 0
 273 0004 BD46     		mov	sp, r7
 274              		@ sp needed
 275 0006 80BD     		pop	{r7, pc}
 276              		.cfi_endproc
 277              	.LFE4:
 278              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 279              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 280              		.align	2
 281              		.global	SPIM_EnableRxInt
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 10


 282              		.code	16
 283              		.thumb_func
 284              		.type	SPIM_EnableRxInt, %function
 285              	SPIM_EnableRxInt:
 286              	.LFB5:
 233:.\Generated_Source\PSoC4/SPIM.c **** 
 234:.\Generated_Source\PSoC4/SPIM.c **** 
 235:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 236:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 238:.\Generated_Source\PSoC4/SPIM.c **** *
 239:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 240:.\Generated_Source\PSoC4/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:.\Generated_Source\PSoC4/SPIM.c **** *
 242:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 243:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 244:.\Generated_Source\PSoC4/SPIM.c **** *
 245:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 246:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 247:.\Generated_Source\PSoC4/SPIM.c **** *
 248:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 249:.\Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:.\Generated_Source\PSoC4/SPIM.c **** *
 251:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 252:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:.\Generated_Source\PSoC4/SPIM.c **** {
 287              		.loc 1 253 0
 288              		.cfi_startproc
 289 0000 80B5     		push	{r7, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 254:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:.\Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:.\Generated_Source\PSoC4/SPIM.c **** }
 295              		.loc 1 257 0
 296 0004 BD46     		mov	sp, r7
 297              		@ sp needed
 298 0006 80BD     		pop	{r7, pc}
 299              		.cfi_endproc
 300              	.LFE5:
 301              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 302              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 303              		.align	2
 304              		.global	SPIM_DisableTxInt
 305              		.code	16
 306              		.thumb_func
 307              		.type	SPIM_DisableTxInt, %function
 308              	SPIM_DisableTxInt:
 309              	.LFB6:
 258:.\Generated_Source\PSoC4/SPIM.c **** 
 259:.\Generated_Source\PSoC4/SPIM.c **** 
 260:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableTxInt
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 11


 262:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/SPIM.c **** *
 264:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 265:.\Generated_Source\PSoC4/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:.\Generated_Source\PSoC4/SPIM.c **** *
 267:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 268:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 269:.\Generated_Source\PSoC4/SPIM.c **** *
 270:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 271:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 272:.\Generated_Source\PSoC4/SPIM.c **** *
 273:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 274:.\Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:.\Generated_Source\PSoC4/SPIM.c **** *
 276:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:.\Generated_Source\PSoC4/SPIM.c **** {
 310              		.loc 1 278 0
 311              		.cfi_startproc
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 279:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:.\Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:.\Generated_Source\PSoC4/SPIM.c **** }
 318              		.loc 1 282 0
 319 0004 BD46     		mov	sp, r7
 320              		@ sp needed
 321 0006 80BD     		pop	{r7, pc}
 322              		.cfi_endproc
 323              	.LFE6:
 324              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 325              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 326              		.align	2
 327              		.global	SPIM_DisableRxInt
 328              		.code	16
 329              		.thumb_func
 330              		.type	SPIM_DisableRxInt, %function
 331              	SPIM_DisableRxInt:
 332              	.LFB7:
 283:.\Generated_Source\PSoC4/SPIM.c **** 
 284:.\Generated_Source\PSoC4/SPIM.c **** 
 285:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/SPIM.c **** *
 289:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 290:.\Generated_Source\PSoC4/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:.\Generated_Source\PSoC4/SPIM.c **** *
 292:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 293:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 294:.\Generated_Source\PSoC4/SPIM.c **** *
 295:.\Generated_Source\PSoC4/SPIM.c **** * Return:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 12


 296:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 297:.\Generated_Source\PSoC4/SPIM.c **** *
 298:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 299:.\Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:.\Generated_Source\PSoC4/SPIM.c **** *
 301:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:.\Generated_Source\PSoC4/SPIM.c **** {
 333              		.loc 1 303 0
 334              		.cfi_startproc
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:.\Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:.\Generated_Source\PSoC4/SPIM.c **** }
 341              		.loc 1 307 0
 342 0004 BD46     		mov	sp, r7
 343              		@ sp needed
 344 0006 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE7:
 347              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 348              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 349              		.align	2
 350              		.global	SPIM_SetTxInterruptMode
 351              		.code	16
 352              		.thumb_func
 353              		.type	SPIM_SetTxInterruptMode, %function
 354              	SPIM_SetTxInterruptMode:
 355              	.LFB8:
 308:.\Generated_Source\PSoC4/SPIM.c **** 
 309:.\Generated_Source\PSoC4/SPIM.c **** 
 310:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 313:.\Generated_Source\PSoC4/SPIM.c **** *
 314:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 315:.\Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:.\Generated_Source\PSoC4/SPIM.c **** *
 317:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 318:.\Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:.\Generated_Source\PSoC4/SPIM.c **** *  header file).
 320:.\Generated_Source\PSoC4/SPIM.c **** *
 321:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 322:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 323:.\Generated_Source\PSoC4/SPIM.c **** *
 324:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 325:.\Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:.\Generated_Source\PSoC4/SPIM.c **** *
 327:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:.\Generated_Source\PSoC4/SPIM.c **** {
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 13


 356              		.loc 1 329 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 021C     		mov	r2, r0
 367 0008 FB1D     		add	r3, r7, #7
 368 000a 1A70     		strb	r2, [r3]
 330:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 369              		.loc 1 330 0
 370 000c 034B     		ldr	r3, .L19
 371 000e FA1D     		add	r2, r7, #7
 372 0010 1278     		ldrb	r2, [r2]
 373 0012 1A70     		strb	r2, [r3]
 331:.\Generated_Source\PSoC4/SPIM.c **** }
 374              		.loc 1 331 0
 375 0014 BD46     		mov	sp, r7
 376 0016 02B0     		add	sp, sp, #8
 377              		@ sp needed
 378 0018 80BD     		pop	{r7, pc}
 379              	.L20:
 380 001a C046     		.align	2
 381              	.L19:
 382 001c 81000F40 		.word	1074724993
 383              		.cfi_endproc
 384              	.LFE8:
 385              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 386              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 387              		.align	2
 388              		.global	SPIM_SetRxInterruptMode
 389              		.code	16
 390              		.thumb_func
 391              		.type	SPIM_SetRxInterruptMode, %function
 392              	SPIM_SetRxInterruptMode:
 393              	.LFB9:
 332:.\Generated_Source\PSoC4/SPIM.c **** 
 333:.\Generated_Source\PSoC4/SPIM.c **** 
 334:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 335:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 337:.\Generated_Source\PSoC4/SPIM.c **** *
 338:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 339:.\Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:.\Generated_Source\PSoC4/SPIM.c **** *
 341:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:.\Generated_Source\PSoC4/SPIM.c **** *  header file).
 344:.\Generated_Source\PSoC4/SPIM.c **** *
 345:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 346:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 347:.\Generated_Source\PSoC4/SPIM.c **** *
 348:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 14


 349:.\Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:.\Generated_Source\PSoC4/SPIM.c **** *
 351:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:.\Generated_Source\PSoC4/SPIM.c **** {
 394              		.loc 1 353 0
 395              		.cfi_startproc
 396 0000 80B5     		push	{r7, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 7, -8
 399              		.cfi_offset 14, -4
 400 0002 82B0     		sub	sp, sp, #8
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 404 0006 021C     		mov	r2, r0
 405 0008 FB1D     		add	r3, r7, #7
 406 000a 1A70     		strb	r2, [r3]
 354:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 407              		.loc 1 354 0
 408 000c 034B     		ldr	r3, .L22
 409 000e FA1D     		add	r2, r7, #7
 410 0010 1278     		ldrb	r2, [r2]
 411 0012 1A70     		strb	r2, [r3]
 355:.\Generated_Source\PSoC4/SPIM.c **** }
 412              		.loc 1 355 0
 413 0014 BD46     		mov	sp, r7
 414 0016 02B0     		add	sp, sp, #8
 415              		@ sp needed
 416 0018 80BD     		pop	{r7, pc}
 417              	.L23:
 418 001a C046     		.align	2
 419              	.L22:
 420 001c 83000F40 		.word	1074724995
 421              		.cfi_endproc
 422              	.LFE9:
 423              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 424              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 425              		.align	2
 426              		.global	SPIM_ReadTxStatus
 427              		.code	16
 428              		.thumb_func
 429              		.type	SPIM_ReadTxStatus, %function
 430              	SPIM_ReadTxStatus:
 431              	.LFB10:
 356:.\Generated_Source\PSoC4/SPIM.c **** 
 357:.\Generated_Source\PSoC4/SPIM.c **** 
 358:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 359:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 361:.\Generated_Source\PSoC4/SPIM.c **** *
 362:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 363:.\Generated_Source\PSoC4/SPIM.c **** *  Read the Tx status register for the component.
 364:.\Generated_Source\PSoC4/SPIM.c **** *
 365:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 366:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 367:.\Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 15


 368:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 369:.\Generated_Source\PSoC4/SPIM.c **** *  Contents of the Tx status register.
 370:.\Generated_Source\PSoC4/SPIM.c **** *
 371:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 372:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:.\Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 374:.\Generated_Source\PSoC4/SPIM.c **** *
 375:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 376:.\Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:.\Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 378:.\Generated_Source\PSoC4/SPIM.c **** *
 379:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 380:.\Generated_Source\PSoC4/SPIM.c **** *  Clear Tx status register of the component.
 381:.\Generated_Source\PSoC4/SPIM.c **** *
 382:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 383:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 384:.\Generated_Source\PSoC4/SPIM.c **** *
 385:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 386:.\Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:.\Generated_Source\PSoC4/SPIM.c **** {
 432              		.loc 1 387 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 82B0     		sub	sp, sp, #8
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 388:.\Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 389:.\Generated_Source\PSoC4/SPIM.c **** 
 390:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 393:.\Generated_Source\PSoC4/SPIM.c **** 
 394:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:.\Generated_Source\PSoC4/SPIM.c **** 
 397:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 398:.\Generated_Source\PSoC4/SPIM.c **** 
 399:.\Generated_Source\PSoC4/SPIM.c ****     #else
 400:.\Generated_Source\PSoC4/SPIM.c **** 
 401:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 442              		.loc 1 401 0
 443 0006 054A     		ldr	r2, .L26
 444 0008 FB1D     		add	r3, r7, #7
 445 000a 1278     		ldrb	r2, [r2]
 446 000c 1A70     		strb	r2, [r3]
 402:.\Generated_Source\PSoC4/SPIM.c **** 
 403:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:.\Generated_Source\PSoC4/SPIM.c **** 
 405:.\Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 447              		.loc 1 405 0
 448 000e FB1D     		add	r3, r7, #7
 449 0010 1B78     		ldrb	r3, [r3]
 406:.\Generated_Source\PSoC4/SPIM.c **** }
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 16


 450              		.loc 1 406 0
 451 0012 181C     		mov	r0, r3
 452 0014 BD46     		mov	sp, r7
 453 0016 02B0     		add	sp, sp, #8
 454              		@ sp needed
 455 0018 80BD     		pop	{r7, pc}
 456              	.L27:
 457 001a C046     		.align	2
 458              	.L26:
 459 001c 61000F40 		.word	1074724961
 460              		.cfi_endproc
 461              	.LFE10:
 462              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 463              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 464              		.align	2
 465              		.global	SPIM_ReadRxStatus
 466              		.code	16
 467              		.thumb_func
 468              		.type	SPIM_ReadRxStatus, %function
 469              	SPIM_ReadRxStatus:
 470              	.LFB11:
 407:.\Generated_Source\PSoC4/SPIM.c **** 
 408:.\Generated_Source\PSoC4/SPIM.c **** 
 409:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/SPIM.c **** *
 413:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 414:.\Generated_Source\PSoC4/SPIM.c **** *  Read the Rx status register for the component.
 415:.\Generated_Source\PSoC4/SPIM.c **** *
 416:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 417:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 418:.\Generated_Source\PSoC4/SPIM.c **** *
 419:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 420:.\Generated_Source\PSoC4/SPIM.c **** *  Contents of the Rx status register.
 421:.\Generated_Source\PSoC4/SPIM.c **** *
 422:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 423:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:.\Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 425:.\Generated_Source\PSoC4/SPIM.c **** *
 426:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 427:.\Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:.\Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 429:.\Generated_Source\PSoC4/SPIM.c **** *
 430:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 431:.\Generated_Source\PSoC4/SPIM.c **** *  Clear Rx status register of the component.
 432:.\Generated_Source\PSoC4/SPIM.c **** *
 433:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 434:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 435:.\Generated_Source\PSoC4/SPIM.c **** *
 436:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 437:.\Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:.\Generated_Source\PSoC4/SPIM.c **** {
 471              		.loc 1 438 0
 472              		.cfi_startproc
 473 0000 80B5     		push	{r7, lr}
 474              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 17


 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 82B0     		sub	sp, sp, #8
 478              		.cfi_def_cfa_offset 16
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 439:.\Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 440:.\Generated_Source\PSoC4/SPIM.c **** 
 441:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 444:.\Generated_Source\PSoC4/SPIM.c **** 
 445:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:.\Generated_Source\PSoC4/SPIM.c **** 
 448:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 449:.\Generated_Source\PSoC4/SPIM.c **** 
 450:.\Generated_Source\PSoC4/SPIM.c ****     #else
 451:.\Generated_Source\PSoC4/SPIM.c **** 
 452:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 481              		.loc 1 452 0
 482 0006 054A     		ldr	r2, .L30
 483 0008 FB1D     		add	r3, r7, #7
 484 000a 1278     		ldrb	r2, [r2]
 485 000c 1A70     		strb	r2, [r3]
 453:.\Generated_Source\PSoC4/SPIM.c **** 
 454:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:.\Generated_Source\PSoC4/SPIM.c **** 
 456:.\Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 486              		.loc 1 456 0
 487 000e FB1D     		add	r3, r7, #7
 488 0010 1B78     		ldrb	r3, [r3]
 457:.\Generated_Source\PSoC4/SPIM.c **** }
 489              		.loc 1 457 0
 490 0012 181C     		mov	r0, r3
 491 0014 BD46     		mov	sp, r7
 492 0016 02B0     		add	sp, sp, #8
 493              		@ sp needed
 494 0018 80BD     		pop	{r7, pc}
 495              	.L31:
 496 001a C046     		.align	2
 497              	.L30:
 498 001c 63000F40 		.word	1074724963
 499              		.cfi_endproc
 500              	.LFE11:
 501              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 502              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 503              		.align	2
 504              		.global	SPIM_WriteTxData
 505              		.code	16
 506              		.thumb_func
 507              		.type	SPIM_WriteTxData, %function
 508              	SPIM_WriteTxData:
 509              	.LFB12:
 458:.\Generated_Source\PSoC4/SPIM.c **** 
 459:.\Generated_Source\PSoC4/SPIM.c **** 
 460:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 18


 461:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 463:.\Generated_Source\PSoC4/SPIM.c **** *
 464:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 465:.\Generated_Source\PSoC4/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:.\Generated_Source\PSoC4/SPIM.c **** *
 467:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 468:.\Generated_Source\PSoC4/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:.\Generated_Source\PSoC4/SPIM.c **** *
 470:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 471:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 472:.\Generated_Source\PSoC4/SPIM.c **** *
 473:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 474:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:.\Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:.\Generated_Source\PSoC4/SPIM.c **** *  call if TX Software Buffer is used.
 477:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:.\Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 479:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:.\Generated_Source\PSoC4/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:.\Generated_Source\PSoC4/SPIM.c **** *
 482:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 483:.\Generated_Source\PSoC4/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:.\Generated_Source\PSoC4/SPIM.c **** *
 485:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 486:.\Generated_Source\PSoC4/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:.\Generated_Source\PSoC4/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:.\Generated_Source\PSoC4/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:.\Generated_Source\PSoC4/SPIM.c **** *
 490:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 491:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 492:.\Generated_Source\PSoC4/SPIM.c **** *
 493:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:.\Generated_Source\PSoC4/SPIM.c **** {
 510              		.loc 1 495 0
 511              		.cfi_startproc
 512 0000 80B5     		push	{r7, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 82B0     		sub	sp, sp, #8
 517              		.cfi_def_cfa_offset 16
 518 0004 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 520 0006 021C     		mov	r2, r0
 521 0008 FB1D     		add	r3, r7, #7
 522 000a 1A70     		strb	r2, [r3]
 496:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:.\Generated_Source\PSoC4/SPIM.c **** 
 498:.\Generated_Source\PSoC4/SPIM.c ****         uint8 tempStatus;
 499:.\Generated_Source\PSoC4/SPIM.c ****         uint8 tmpTxBufferRead;
 500:.\Generated_Source\PSoC4/SPIM.c **** 
 501:.\Generated_Source\PSoC4/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:.\Generated_Source\PSoC4/SPIM.c ****         do
 503:.\Generated_Source\PSoC4/SPIM.c ****         {
 504:.\Generated_Source\PSoC4/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 19


 505:.\Generated_Source\PSoC4/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:.\Generated_Source\PSoC4/SPIM.c ****             {
 507:.\Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:.\Generated_Source\PSoC4/SPIM.c ****             }
 509:.\Generated_Source\PSoC4/SPIM.c ****             else
 510:.\Generated_Source\PSoC4/SPIM.c ****             {
 511:.\Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead--;
 512:.\Generated_Source\PSoC4/SPIM.c ****             }
 513:.\Generated_Source\PSoC4/SPIM.c **** 
 514:.\Generated_Source\PSoC4/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:.\Generated_Source\PSoC4/SPIM.c **** 
 516:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 518:.\Generated_Source\PSoC4/SPIM.c **** 
 519:.\Generated_Source\PSoC4/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:.\Generated_Source\PSoC4/SPIM.c **** 
 522:.\Generated_Source\PSoC4/SPIM.c **** 
 523:.\Generated_Source\PSoC4/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:.\Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:.\Generated_Source\PSoC4/SPIM.c ****         {
 526:.\Generated_Source\PSoC4/SPIM.c ****             /* Add directly to the TX FIFO */
 527:.\Generated_Source\PSoC4/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 528:.\Generated_Source\PSoC4/SPIM.c ****         }
 529:.\Generated_Source\PSoC4/SPIM.c ****         else
 530:.\Generated_Source\PSoC4/SPIM.c ****         {
 531:.\Generated_Source\PSoC4/SPIM.c ****             /* Add to the TX software buffer */
 532:.\Generated_Source\PSoC4/SPIM.c ****             SPIM_txBufferWrite++;
 533:.\Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:.\Generated_Source\PSoC4/SPIM.c ****             {
 535:.\Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:.\Generated_Source\PSoC4/SPIM.c ****             }
 537:.\Generated_Source\PSoC4/SPIM.c **** 
 538:.\Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:.\Generated_Source\PSoC4/SPIM.c ****             {
 540:.\Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferRead++;
 541:.\Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:.\Generated_Source\PSoC4/SPIM.c ****                 {
 543:.\Generated_Source\PSoC4/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:.\Generated_Source\PSoC4/SPIM.c ****                 }
 545:.\Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:.\Generated_Source\PSoC4/SPIM.c ****             }
 547:.\Generated_Source\PSoC4/SPIM.c **** 
 548:.\Generated_Source\PSoC4/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:.\Generated_Source\PSoC4/SPIM.c **** 
 550:.\Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:.\Generated_Source\PSoC4/SPIM.c ****         }
 552:.\Generated_Source\PSoC4/SPIM.c **** 
 553:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 554:.\Generated_Source\PSoC4/SPIM.c **** 
 555:.\Generated_Source\PSoC4/SPIM.c ****     #else
 556:.\Generated_Source\PSoC4/SPIM.c **** 
 557:.\Generated_Source\PSoC4/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 523              		.loc 1 557 0
 524 000c C046     		mov	r8, r8
 525              	.L33:
 526              		.loc 1 557 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 20


 527 000e 074B     		ldr	r3, .L34
 528 0010 1B78     		ldrb	r3, [r3]
 529 0012 DBB2     		uxtb	r3, r3
 530 0014 1A1C     		mov	r2, r3
 531 0016 0423     		mov	r3, #4
 532 0018 1340     		and	r3, r2
 533 001a F8D0     		beq	.L33
 558:.\Generated_Source\PSoC4/SPIM.c ****         {
 559:.\Generated_Source\PSoC4/SPIM.c ****             ; /* Wait for room in FIFO */
 560:.\Generated_Source\PSoC4/SPIM.c ****         }
 561:.\Generated_Source\PSoC4/SPIM.c **** 
 562:.\Generated_Source\PSoC4/SPIM.c ****         /* Put byte in TX FIFO */
 563:.\Generated_Source\PSoC4/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 534              		.loc 1 563 0 is_stmt 1
 535 001c 044B     		ldr	r3, .L34+4
 536 001e FA1D     		add	r2, r7, #7
 537 0020 1278     		ldrb	r2, [r2]
 538 0022 1A70     		strb	r2, [r3]
 564:.\Generated_Source\PSoC4/SPIM.c **** 
 565:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 566:.\Generated_Source\PSoC4/SPIM.c **** }
 539              		.loc 1 566 0
 540 0024 BD46     		mov	sp, r7
 541 0026 02B0     		add	sp, sp, #8
 542              		@ sp needed
 543 0028 80BD     		pop	{r7, pc}
 544              	.L35:
 545 002a C046     		.align	2
 546              	.L34:
 547 002c 61000F40 		.word	1074724961
 548 0030 40000F40 		.word	1074724928
 549              		.cfi_endproc
 550              	.LFE12:
 551              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 552              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 553              		.align	2
 554              		.global	SPIM_ReadRxData
 555              		.code	16
 556              		.thumb_func
 557              		.type	SPIM_ReadRxData, %function
 558              	SPIM_ReadRxData:
 559              	.LFB13:
 567:.\Generated_Source\PSoC4/SPIM.c **** 
 568:.\Generated_Source\PSoC4/SPIM.c **** 
 569:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxData
 571:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/SPIM.c **** *
 573:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 574:.\Generated_Source\PSoC4/SPIM.c **** *  Read the next byte of data received across the SPI.
 575:.\Generated_Source\PSoC4/SPIM.c **** *
 576:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 577:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 578:.\Generated_Source\PSoC4/SPIM.c **** *
 579:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 580:.\Generated_Source\PSoC4/SPIM.c **** *  The next byte of data read from the FIFO.
 581:.\Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 21


 582:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 583:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 584:.\Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 585:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 586:.\Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function
 587:.\Generated_Source\PSoC4/SPIM.c **** *  call if RX Software Buffer is used.
 588:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 589:.\Generated_Source\PSoC4/SPIM.c **** *  received data.
 590:.\Generated_Source\PSoC4/SPIM.c **** *
 591:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 592:.\Generated_Source\PSoC4/SPIM.c **** *  Allows the user to read a byte of data received.
 593:.\Generated_Source\PSoC4/SPIM.c **** *
 594:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 595:.\Generated_Source\PSoC4/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 596:.\Generated_Source\PSoC4/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 597:.\Generated_Source\PSoC4/SPIM.c **** *  ReadByte() function.
 598:.\Generated_Source\PSoC4/SPIM.c **** *
 599:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 600:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 601:.\Generated_Source\PSoC4/SPIM.c **** *
 602:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 604:.\Generated_Source\PSoC4/SPIM.c **** {
 560              		.loc 1 604 0
 561              		.cfi_startproc
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 82B0     		sub	sp, sp, #8
 567              		.cfi_def_cfa_offset 16
 568 0004 00AF     		add	r7, sp, #0
 569              		.cfi_def_cfa_register 7
 605:.\Generated_Source\PSoC4/SPIM.c ****     uint8 rxData;
 606:.\Generated_Source\PSoC4/SPIM.c **** 
 607:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 608:.\Generated_Source\PSoC4/SPIM.c **** 
 609:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 610:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 611:.\Generated_Source\PSoC4/SPIM.c **** 
 612:.\Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 613:.\Generated_Source\PSoC4/SPIM.c ****         {
 614:.\Generated_Source\PSoC4/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 615:.\Generated_Source\PSoC4/SPIM.c ****             {
 616:.\Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferRead++;
 617:.\Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 618:.\Generated_Source\PSoC4/SPIM.c ****                 {
 619:.\Generated_Source\PSoC4/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 620:.\Generated_Source\PSoC4/SPIM.c ****                 }
 621:.\Generated_Source\PSoC4/SPIM.c ****             }
 622:.\Generated_Source\PSoC4/SPIM.c ****             else
 623:.\Generated_Source\PSoC4/SPIM.c ****             {
 624:.\Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 625:.\Generated_Source\PSoC4/SPIM.c ****             }
 626:.\Generated_Source\PSoC4/SPIM.c ****         }
 627:.\Generated_Source\PSoC4/SPIM.c **** 
 628:.\Generated_Source\PSoC4/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 22


 629:.\Generated_Source\PSoC4/SPIM.c **** 
 630:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 631:.\Generated_Source\PSoC4/SPIM.c **** 
 632:.\Generated_Source\PSoC4/SPIM.c ****     #else
 633:.\Generated_Source\PSoC4/SPIM.c **** 
 634:.\Generated_Source\PSoC4/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 570              		.loc 1 634 0
 571 0006 054A     		ldr	r2, .L38
 572 0008 FB1D     		add	r3, r7, #7
 573 000a 1278     		ldrb	r2, [r2]
 574 000c 1A70     		strb	r2, [r3]
 635:.\Generated_Source\PSoC4/SPIM.c **** 
 636:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 637:.\Generated_Source\PSoC4/SPIM.c **** 
 638:.\Generated_Source\PSoC4/SPIM.c ****     return(rxData);
 575              		.loc 1 638 0
 576 000e FB1D     		add	r3, r7, #7
 577 0010 1B78     		ldrb	r3, [r3]
 639:.\Generated_Source\PSoC4/SPIM.c **** }
 578              		.loc 1 639 0
 579 0012 181C     		mov	r0, r3
 580 0014 BD46     		mov	sp, r7
 581 0016 02B0     		add	sp, sp, #8
 582              		@ sp needed
 583 0018 80BD     		pop	{r7, pc}
 584              	.L39:
 585 001a C046     		.align	2
 586              	.L38:
 587 001c 50000F40 		.word	1074724944
 588              		.cfi_endproc
 589              	.LFE13:
 590              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 591              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 592              		.align	2
 593              		.global	SPIM_GetRxBufferSize
 594              		.code	16
 595              		.thumb_func
 596              		.type	SPIM_GetRxBufferSize, %function
 597              	SPIM_GetRxBufferSize:
 598              	.LFB14:
 640:.\Generated_Source\PSoC4/SPIM.c **** 
 641:.\Generated_Source\PSoC4/SPIM.c **** 
 642:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 643:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 644:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 645:.\Generated_Source\PSoC4/SPIM.c **** *
 646:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 647:.\Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 648:.\Generated_Source\PSoC4/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 649:.\Generated_Source\PSoC4/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 650:.\Generated_Source\PSoC4/SPIM.c **** *
 651:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 652:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 653:.\Generated_Source\PSoC4/SPIM.c **** *
 654:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 655:.\Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 656:.\Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 23


 657:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 658:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 659:.\Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 660:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 661:.\Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer.
 662:.\Generated_Source\PSoC4/SPIM.c **** *
 663:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 664:.\Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 665:.\Generated_Source\PSoC4/SPIM.c **** *
 666:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 667:.\Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 668:.\Generated_Source\PSoC4/SPIM.c **** {
 599              		.loc 1 668 0
 600              		.cfi_startproc
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 82B0     		sub	sp, sp, #8
 606              		.cfi_def_cfa_offset 16
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 669:.\Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 670:.\Generated_Source\PSoC4/SPIM.c **** 
 671:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 672:.\Generated_Source\PSoC4/SPIM.c **** 
 673:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 674:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 675:.\Generated_Source\PSoC4/SPIM.c **** 
 676:.\Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 677:.\Generated_Source\PSoC4/SPIM.c ****         {
 678:.\Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 679:.\Generated_Source\PSoC4/SPIM.c ****         }
 680:.\Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 681:.\Generated_Source\PSoC4/SPIM.c ****         {
 682:.\Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 683:.\Generated_Source\PSoC4/SPIM.c ****         }
 684:.\Generated_Source\PSoC4/SPIM.c ****         else
 685:.\Generated_Source\PSoC4/SPIM.c ****         {
 686:.\Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 687:.\Generated_Source\PSoC4/SPIM.c ****         }
 688:.\Generated_Source\PSoC4/SPIM.c **** 
 689:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 690:.\Generated_Source\PSoC4/SPIM.c **** 
 691:.\Generated_Source\PSoC4/SPIM.c ****     #else
 692:.\Generated_Source\PSoC4/SPIM.c **** 
 693:.\Generated_Source\PSoC4/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 694:.\Generated_Source\PSoC4/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 609              		.loc 1 694 0
 610 0006 094B     		ldr	r3, .L44
 611 0008 1B78     		ldrb	r3, [r3]
 612 000a DBB2     		uxtb	r3, r3
 613 000c 1A1C     		mov	r2, r3
 614 000e 2023     		mov	r3, #32
 615 0010 1340     		and	r3, r2
 616 0012 01D0     		beq	.L41
 617              		.loc 1 694 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 24


 618 0014 0123     		mov	r3, #1
 619 0016 00E0     		b	.L42
 620              	.L41:
 621              		.loc 1 694 0 discriminator 2
 622 0018 0023     		mov	r3, #0
 623              	.L42:
 624              		.loc 1 694 0 discriminator 3
 625 001a FA1D     		add	r2, r7, #7
 626 001c 1370     		strb	r3, [r2]
 695:.\Generated_Source\PSoC4/SPIM.c **** 
 696:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 697:.\Generated_Source\PSoC4/SPIM.c **** 
 698:.\Generated_Source\PSoC4/SPIM.c ****     return(size);
 627              		.loc 1 698 0 is_stmt 1 discriminator 3
 628 001e FB1D     		add	r3, r7, #7
 629 0020 1B78     		ldrb	r3, [r3]
 699:.\Generated_Source\PSoC4/SPIM.c **** }
 630              		.loc 1 699 0 discriminator 3
 631 0022 181C     		mov	r0, r3
 632 0024 BD46     		mov	sp, r7
 633 0026 02B0     		add	sp, sp, #8
 634              		@ sp needed
 635 0028 80BD     		pop	{r7, pc}
 636              	.L45:
 637 002a C046     		.align	2
 638              	.L44:
 639 002c 63000F40 		.word	1074724963
 640              		.cfi_endproc
 641              	.LFE14:
 642              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 643              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 644              		.align	2
 645              		.global	SPIM_GetTxBufferSize
 646              		.code	16
 647              		.thumb_func
 648              		.type	SPIM_GetTxBufferSize, %function
 649              	SPIM_GetTxBufferSize:
 650              	.LFB15:
 700:.\Generated_Source\PSoC4/SPIM.c **** 
 701:.\Generated_Source\PSoC4/SPIM.c **** 
 702:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 704:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 705:.\Generated_Source\PSoC4/SPIM.c **** *
 706:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 707:.\Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 708:.\Generated_Source\PSoC4/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 709:.\Generated_Source\PSoC4/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 710:.\Generated_Source\PSoC4/SPIM.c **** *  Software Buffer.
 711:.\Generated_Source\PSoC4/SPIM.c **** *
 712:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 713:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 714:.\Generated_Source\PSoC4/SPIM.c **** *
 715:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 716:.\Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 717:.\Generated_Source\PSoC4/SPIM.c **** *
 718:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 25


 719:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 720:.\Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer.
 721:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 722:.\Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 723:.\Generated_Source\PSoC4/SPIM.c **** *
 724:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 725:.\Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 726:.\Generated_Source\PSoC4/SPIM.c **** *
 727:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 728:.\Generated_Source\PSoC4/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 729:.\Generated_Source\PSoC4/SPIM.c **** {
 651              		.loc 1 729 0
 652              		.cfi_startproc
 653 0000 80B5     		push	{r7, lr}
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 82B0     		sub	sp, sp, #8
 658              		.cfi_def_cfa_offset 16
 659 0004 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 730:.\Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 731:.\Generated_Source\PSoC4/SPIM.c **** 
 732:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 733:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 734:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 735:.\Generated_Source\PSoC4/SPIM.c **** 
 736:.\Generated_Source\PSoC4/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 737:.\Generated_Source\PSoC4/SPIM.c ****         {
 738:.\Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 739:.\Generated_Source\PSoC4/SPIM.c ****         }
 740:.\Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 741:.\Generated_Source\PSoC4/SPIM.c ****         {
 742:.\Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 743:.\Generated_Source\PSoC4/SPIM.c ****         }
 744:.\Generated_Source\PSoC4/SPIM.c ****         else
 745:.\Generated_Source\PSoC4/SPIM.c ****         {
 746:.\Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 747:.\Generated_Source\PSoC4/SPIM.c ****         }
 748:.\Generated_Source\PSoC4/SPIM.c **** 
 749:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 750:.\Generated_Source\PSoC4/SPIM.c **** 
 751:.\Generated_Source\PSoC4/SPIM.c ****     #else
 752:.\Generated_Source\PSoC4/SPIM.c **** 
 753:.\Generated_Source\PSoC4/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 661              		.loc 1 753 0
 662 0006 0F4A     		ldr	r2, .L51
 663 0008 FB1D     		add	r3, r7, #7
 664 000a 1278     		ldrb	r2, [r2]
 665 000c 1A70     		strb	r2, [r3]
 754:.\Generated_Source\PSoC4/SPIM.c **** 
 755:.\Generated_Source\PSoC4/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 666              		.loc 1 755 0
 667 000e FB1D     		add	r3, r7, #7
 668 0010 1A78     		ldrb	r2, [r3]
 669 0012 0223     		mov	r3, #2
 670 0014 1340     		and	r3, r2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 26


 671 0016 03D0     		beq	.L47
 756:.\Generated_Source\PSoC4/SPIM.c ****         {
 757:.\Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 672              		.loc 1 757 0
 673 0018 FB1D     		add	r3, r7, #7
 674 001a 0022     		mov	r2, #0
 675 001c 1A70     		strb	r2, [r3]
 676 001e 0BE0     		b	.L48
 677              	.L47:
 758:.\Generated_Source\PSoC4/SPIM.c ****         }
 759:.\Generated_Source\PSoC4/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 678              		.loc 1 759 0
 679 0020 FB1D     		add	r3, r7, #7
 680 0022 1A78     		ldrb	r2, [r3]
 681 0024 0423     		mov	r3, #4
 682 0026 1340     		and	r3, r2
 683 0028 03D0     		beq	.L49
 760:.\Generated_Source\PSoC4/SPIM.c ****         {
 761:.\Generated_Source\PSoC4/SPIM.c ****             size = 1u;
 684              		.loc 1 761 0
 685 002a FB1D     		add	r3, r7, #7
 686 002c 0122     		mov	r2, #1
 687 002e 1A70     		strb	r2, [r3]
 688 0030 02E0     		b	.L48
 689              	.L49:
 762:.\Generated_Source\PSoC4/SPIM.c ****         }
 763:.\Generated_Source\PSoC4/SPIM.c ****         else
 764:.\Generated_Source\PSoC4/SPIM.c ****         {
 765:.\Generated_Source\PSoC4/SPIM.c ****             size = SPIM_FIFO_SIZE;
 690              		.loc 1 765 0
 691 0032 FB1D     		add	r3, r7, #7
 692 0034 0422     		mov	r2, #4
 693 0036 1A70     		strb	r2, [r3]
 694              	.L48:
 766:.\Generated_Source\PSoC4/SPIM.c ****         }
 767:.\Generated_Source\PSoC4/SPIM.c **** 
 768:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 769:.\Generated_Source\PSoC4/SPIM.c **** 
 770:.\Generated_Source\PSoC4/SPIM.c ****     return(size);
 695              		.loc 1 770 0
 696 0038 FB1D     		add	r3, r7, #7
 697 003a 1B78     		ldrb	r3, [r3]
 771:.\Generated_Source\PSoC4/SPIM.c **** }
 698              		.loc 1 771 0
 699 003c 181C     		mov	r0, r3
 700 003e BD46     		mov	sp, r7
 701 0040 02B0     		add	sp, sp, #8
 702              		@ sp needed
 703 0042 80BD     		pop	{r7, pc}
 704              	.L52:
 705              		.align	2
 706              	.L51:
 707 0044 61000F40 		.word	1074724961
 708              		.cfi_endproc
 709              	.LFE15:
 710              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 711              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 27


 712              		.align	2
 713              		.global	SPIM_ClearRxBuffer
 714              		.code	16
 715              		.thumb_func
 716              		.type	SPIM_ClearRxBuffer, %function
 717              	SPIM_ClearRxBuffer:
 718              	.LFB16:
 772:.\Generated_Source\PSoC4/SPIM.c **** 
 773:.\Generated_Source\PSoC4/SPIM.c **** 
 774:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 775:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 776:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 777:.\Generated_Source\PSoC4/SPIM.c **** *
 778:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 779:.\Generated_Source\PSoC4/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 780:.\Generated_Source\PSoC4/SPIM.c **** *
 781:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 782:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 783:.\Generated_Source\PSoC4/SPIM.c **** *
 784:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 785:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 786:.\Generated_Source\PSoC4/SPIM.c **** *
 787:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 788:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 789:.\Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 790:.\Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 791:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 792:.\Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 793:.\Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 794:.\Generated_Source\PSoC4/SPIM.c **** *
 795:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 796:.\Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 797:.\Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 798:.\Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 799:.\Generated_Source\PSoC4/SPIM.c **** *
 800:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 801:.\Generated_Source\PSoC4/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 802:.\Generated_Source\PSoC4/SPIM.c **** *
 803:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 804:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 805:.\Generated_Source\PSoC4/SPIM.c **** *
 806:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 807:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 808:.\Generated_Source\PSoC4/SPIM.c **** {
 719              		.loc 1 808 0
 720              		.cfi_startproc
 721 0000 80B5     		push	{r7, lr}
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 00AF     		add	r7, sp, #0
 726              		.cfi_def_cfa_register 7
 809:.\Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
 810:.\Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 727              		.loc 1 810 0
 728 0004 01E0     		b	.L54
 729              	.L55:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 28


 811:.\Generated_Source\PSoC4/SPIM.c ****     {
 812:.\Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 730              		.loc 1 812 0
 731 0006 054B     		ldr	r3, .L56
 732 0008 1B78     		ldrb	r3, [r3]
 733              	.L54:
 810:.\Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 734              		.loc 1 810 0 discriminator 1
 735 000a 054B     		ldr	r3, .L56+4
 736 000c 1B78     		ldrb	r3, [r3]
 737 000e DBB2     		uxtb	r3, r3
 738 0010 1A1C     		mov	r2, r3
 739 0012 2023     		mov	r3, #32
 740 0014 1340     		and	r3, r2
 741 0016 F6D1     		bne	.L55
 813:.\Generated_Source\PSoC4/SPIM.c ****     }
 814:.\Generated_Source\PSoC4/SPIM.c **** 
 815:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 816:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 817:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 818:.\Generated_Source\PSoC4/SPIM.c **** 
 819:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 820:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 821:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 822:.\Generated_Source\PSoC4/SPIM.c **** 
 823:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 824:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 825:.\Generated_Source\PSoC4/SPIM.c **** }
 742              		.loc 1 825 0
 743 0018 BD46     		mov	sp, r7
 744              		@ sp needed
 745 001a 80BD     		pop	{r7, pc}
 746              	.L57:
 747              		.align	2
 748              	.L56:
 749 001c 50000F40 		.word	1074724944
 750 0020 63000F40 		.word	1074724963
 751              		.cfi_endproc
 752              	.LFE16:
 753              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 754              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 755              		.align	2
 756              		.global	SPIM_ClearTxBuffer
 757              		.code	16
 758              		.thumb_func
 759              		.type	SPIM_ClearTxBuffer, %function
 760              	SPIM_ClearTxBuffer:
 761              	.LFB17:
 826:.\Generated_Source\PSoC4/SPIM.c **** 
 827:.\Generated_Source\PSoC4/SPIM.c **** 
 828:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 829:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 830:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 831:.\Generated_Source\PSoC4/SPIM.c **** *
 832:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 833:.\Generated_Source\PSoC4/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 834:.\Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 29


 835:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 836:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 837:.\Generated_Source\PSoC4/SPIM.c **** *
 838:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 839:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 840:.\Generated_Source\PSoC4/SPIM.c **** *
 841:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
 842:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 843:.\Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 844:.\Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 845:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 846:.\Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 847:.\Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 848:.\Generated_Source\PSoC4/SPIM.c **** *
 849:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
 850:.\Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 851:.\Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 852:.\Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 853:.\Generated_Source\PSoC4/SPIM.c **** *
 854:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 855:.\Generated_Source\PSoC4/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 856:.\Generated_Source\PSoC4/SPIM.c **** *  overwritten.
 857:.\Generated_Source\PSoC4/SPIM.c **** *
 858:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 859:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 860:.\Generated_Source\PSoC4/SPIM.c **** *
 861:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 862:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 863:.\Generated_Source\PSoC4/SPIM.c **** {
 762              		.loc 1 863 0
 763              		.cfi_startproc
 764 0000 90B5     		push	{r4, r7, lr}
 765              		.cfi_def_cfa_offset 12
 766              		.cfi_offset 4, -12
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 83B0     		sub	sp, sp, #12
 770              		.cfi_def_cfa_offset 24
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 865:.\Generated_Source\PSoC4/SPIM.c **** 
 866:.\Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 773              		.loc 1 866 0
 774 0006 FC1D     		add	r4, r7, #7
 775 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 776 000c 031C     		mov	r3, r0
 777 000e 2370     		strb	r3, [r4]
 867:.\Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
 868:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 778              		.loc 1 868 0
 779 0010 0B4B     		ldr	r3, .L59
 780 0012 0B4A     		ldr	r2, .L59
 781 0014 1278     		ldrb	r2, [r2]
 782 0016 D2B2     		uxtb	r2, r2
 783 0018 0121     		mov	r1, #1
 784 001a 0A43     		orr	r2, r1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 30


 785 001c D2B2     		uxtb	r2, r2
 786 001e 1A70     		strb	r2, [r3]
 869:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 787              		.loc 1 869 0
 788 0020 074B     		ldr	r3, .L59
 789 0022 074A     		ldr	r2, .L59
 790 0024 1278     		ldrb	r2, [r2]
 791 0026 D2B2     		uxtb	r2, r2
 792 0028 0121     		mov	r1, #1
 793 002a 8A43     		bic	r2, r1
 794 002c D2B2     		uxtb	r2, r2
 795 002e 1A70     		strb	r2, [r3]
 870:.\Generated_Source\PSoC4/SPIM.c **** 
 871:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 872:.\Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 873:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 874:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 875:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 876:.\Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 796              		.loc 1 876 0
 797 0030 FB1D     		add	r3, r7, #7
 798 0032 1B78     		ldrb	r3, [r3]
 799 0034 181C     		mov	r0, r3
 800 0036 FFF7FEFF 		bl	CyExitCriticalSection
 877:.\Generated_Source\PSoC4/SPIM.c **** 
 878:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 879:.\Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 880:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 881:.\Generated_Source\PSoC4/SPIM.c **** 
 882:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
 883:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 884:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 885:.\Generated_Source\PSoC4/SPIM.c **** 
 886:.\Generated_Source\PSoC4/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 887:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 888:.\Generated_Source\PSoC4/SPIM.c **** 
 889:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 890:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 891:.\Generated_Source\PSoC4/SPIM.c **** }
 801              		.loc 1 891 0
 802 003a BD46     		mov	sp, r7
 803 003c 03B0     		add	sp, sp, #12
 804              		@ sp needed
 805 003e 90BD     		pop	{r4, r7, pc}
 806              	.L60:
 807              		.align	2
 808              	.L59:
 809 0040 90000F40 		.word	1074725008
 810              		.cfi_endproc
 811              	.LFE17:
 812              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 813              		.section	.text.SPIM_PutArray,"ax",%progbits
 814              		.align	2
 815              		.global	SPIM_PutArray
 816              		.code	16
 817              		.thumb_func
 818              		.type	SPIM_PutArray, %function
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 31


 819              	SPIM_PutArray:
 820              	.LFB18:
 892:.\Generated_Source\PSoC4/SPIM.c **** 
 893:.\Generated_Source\PSoC4/SPIM.c **** 
 894:.\Generated_Source\PSoC4/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 895:.\Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 896:.\Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxEnable
 897:.\Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 898:.\Generated_Source\PSoC4/SPIM.c ****     *
 899:.\Generated_Source\PSoC4/SPIM.c ****     * Summary:
 900:.\Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 901:.\Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to transmit.
 902:.\Generated_Source\PSoC4/SPIM.c ****     *
 903:.\Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 904:.\Generated_Source\PSoC4/SPIM.c ****     *  None.
 905:.\Generated_Source\PSoC4/SPIM.c ****     *
 906:.\Generated_Source\PSoC4/SPIM.c ****     * Return:
 907:.\Generated_Source\PSoC4/SPIM.c ****     *  None.
 908:.\Generated_Source\PSoC4/SPIM.c ****     *
 909:.\Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 910:.\Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxEnable(void) 
 911:.\Generated_Source\PSoC4/SPIM.c ****     {
 912:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 913:.\Generated_Source\PSoC4/SPIM.c ****     }
 914:.\Generated_Source\PSoC4/SPIM.c **** 
 915:.\Generated_Source\PSoC4/SPIM.c **** 
 916:.\Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 917:.\Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxDisable
 918:.\Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 919:.\Generated_Source\PSoC4/SPIM.c ****     *
 920:.\Generated_Source\PSoC4/SPIM.c ****     * Summary:
 921:.\Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 922:.\Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to receive.
 923:.\Generated_Source\PSoC4/SPIM.c ****     *
 924:.\Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 925:.\Generated_Source\PSoC4/SPIM.c ****     *  None.
 926:.\Generated_Source\PSoC4/SPIM.c ****     *
 927:.\Generated_Source\PSoC4/SPIM.c ****     * Return:
 928:.\Generated_Source\PSoC4/SPIM.c ****     *  None.
 929:.\Generated_Source\PSoC4/SPIM.c ****     *
 930:.\Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 931:.\Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxDisable(void) 
 932:.\Generated_Source\PSoC4/SPIM.c ****     {
 933:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 934:.\Generated_Source\PSoC4/SPIM.c ****     }
 935:.\Generated_Source\PSoC4/SPIM.c **** 
 936:.\Generated_Source\PSoC4/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 937:.\Generated_Source\PSoC4/SPIM.c **** 
 938:.\Generated_Source\PSoC4/SPIM.c **** 
 939:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_PutArray
 941:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 942:.\Generated_Source\PSoC4/SPIM.c **** *
 943:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 944:.\Generated_Source\PSoC4/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 945:.\Generated_Source\PSoC4/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 946:.\Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 32


 947:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 948:.\Generated_Source\PSoC4/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 949:.\Generated_Source\PSoC4/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 950:.\Generated_Source\PSoC4/SPIM.c **** *
 951:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 952:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 953:.\Generated_Source\PSoC4/SPIM.c **** *
 954:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 955:.\Generated_Source\PSoC4/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 956:.\Generated_Source\PSoC4/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 957:.\Generated_Source\PSoC4/SPIM.c **** *  enough room in the TX FIFO.
 958:.\Generated_Source\PSoC4/SPIM.c **** *
 959:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 960:.\Generated_Source\PSoC4/SPIM.c **** *  No.
 961:.\Generated_Source\PSoC4/SPIM.c **** *
 962:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 963:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 964:.\Generated_Source\PSoC4/SPIM.c ****                                                                           
 965:.\Generated_Source\PSoC4/SPIM.c **** {
 821              		.loc 1 965 0
 822              		.cfi_startproc
 823 0000 80B5     		push	{r7, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 84B0     		sub	sp, sp, #16
 828              		.cfi_def_cfa_offset 24
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 831 0006 7860     		str	r0, [r7, #4]
 832 0008 0A1C     		mov	r2, r1
 833 000a FB1C     		add	r3, r7, #3
 834 000c 1A70     		strb	r2, [r3]
 966:.\Generated_Source\PSoC4/SPIM.c ****     uint8 bufIndex;
 967:.\Generated_Source\PSoC4/SPIM.c **** 
 968:.\Generated_Source\PSoC4/SPIM.c ****     bufIndex = 0u;
 835              		.loc 1 968 0
 836 000e 3B1C     		mov	r3, r7
 837 0010 0F33     		add	r3, r3, #15
 838 0012 0022     		mov	r2, #0
 839 0014 1A70     		strb	r2, [r3]
 969:.\Generated_Source\PSoC4/SPIM.c **** 
 970:.\Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 840              		.loc 1 970 0
 841 0016 14E0     		b	.L62
 842              	.L63:
 971:.\Generated_Source\PSoC4/SPIM.c ****     {
 972:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 843              		.loc 1 972 0
 844 0018 3B1C     		mov	r3, r7
 845 001a 0F33     		add	r3, r3, #15
 846 001c 1B78     		ldrb	r3, [r3]
 847 001e 7A68     		ldr	r2, [r7, #4]
 848 0020 D318     		add	r3, r2, r3
 849 0022 1B78     		ldrb	r3, [r3]
 850 0024 181C     		mov	r0, r3
 851 0026 FFF7FEFF 		bl	SPIM_WriteTxData
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 33


 973:.\Generated_Source\PSoC4/SPIM.c ****         bufIndex++;
 852              		.loc 1 973 0
 853 002a 3B1C     		mov	r3, r7
 854 002c 0F33     		add	r3, r3, #15
 855 002e 1A78     		ldrb	r2, [r3]
 856 0030 3B1C     		mov	r3, r7
 857 0032 0F33     		add	r3, r3, #15
 858 0034 0132     		add	r2, r2, #1
 859 0036 1A70     		strb	r2, [r3]
 974:.\Generated_Source\PSoC4/SPIM.c ****         byteCount--;
 860              		.loc 1 974 0
 861 0038 FB1C     		add	r3, r7, #3
 862 003a 1A78     		ldrb	r2, [r3]
 863 003c FB1C     		add	r3, r7, #3
 864 003e 013A     		sub	r2, r2, #1
 865 0040 1A70     		strb	r2, [r3]
 866              	.L62:
 970:.\Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 867              		.loc 1 970 0 discriminator 1
 868 0042 FB1C     		add	r3, r7, #3
 869 0044 1B78     		ldrb	r3, [r3]
 870 0046 002B     		cmp	r3, #0
 871 0048 E6D1     		bne	.L63
 975:.\Generated_Source\PSoC4/SPIM.c ****     }
 976:.\Generated_Source\PSoC4/SPIM.c **** }
 872              		.loc 1 976 0
 873 004a BD46     		mov	sp, r7
 874 004c 04B0     		add	sp, sp, #16
 875              		@ sp needed
 876 004e 80BD     		pop	{r7, pc}
 877              		.cfi_endproc
 878              	.LFE18:
 879              		.size	SPIM_PutArray, .-SPIM_PutArray
 880              		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 881              		.align	2
 882              		.global	SPIM_ClearFIFO
 883              		.code	16
 884              		.thumb_func
 885              		.type	SPIM_ClearFIFO, %function
 886              	SPIM_ClearFIFO:
 887              	.LFB19:
 977:.\Generated_Source\PSoC4/SPIM.c **** 
 978:.\Generated_Source\PSoC4/SPIM.c **** 
 979:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 980:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearFIFO
 981:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 982:.\Generated_Source\PSoC4/SPIM.c **** *
 983:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
 984:.\Generated_Source\PSoC4/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 985:.\Generated_Source\PSoC4/SPIM.c **** *
 986:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
 987:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 988:.\Generated_Source\PSoC4/SPIM.c **** *
 989:.\Generated_Source\PSoC4/SPIM.c **** * Return:
 990:.\Generated_Source\PSoC4/SPIM.c **** *  None.
 991:.\Generated_Source\PSoC4/SPIM.c **** *
 992:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 34


 993:.\Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 994:.\Generated_Source\PSoC4/SPIM.c **** *
 995:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 996:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearFIFO(void) 
 997:.\Generated_Source\PSoC4/SPIM.c **** {
 888              		.loc 1 997 0
 889              		.cfi_startproc
 890 0000 90B5     		push	{r4, r7, lr}
 891              		.cfi_def_cfa_offset 12
 892              		.cfi_offset 4, -12
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 83B0     		sub	sp, sp, #12
 896              		.cfi_def_cfa_offset 24
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 998:.\Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 999:.\Generated_Source\PSoC4/SPIM.c **** 
1000:.\Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
1001:.\Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 899              		.loc 1 1001 0
 900 0006 01E0     		b	.L65
 901              	.L66:
1002:.\Generated_Source\PSoC4/SPIM.c ****     {
1003:.\Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 902              		.loc 1 1003 0
 903 0008 124B     		ldr	r3, .L67
 904 000a 1B78     		ldrb	r3, [r3]
 905              	.L65:
1001:.\Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 906              		.loc 1 1001 0 discriminator 1
 907 000c 124B     		ldr	r3, .L67+4
 908 000e 1B78     		ldrb	r3, [r3]
 909 0010 DBB2     		uxtb	r3, r3
 910 0012 1A1C     		mov	r2, r3
 911 0014 2023     		mov	r3, #32
 912 0016 1340     		and	r3, r2
 913 0018 F6D1     		bne	.L66
1004:.\Generated_Source\PSoC4/SPIM.c ****     }
1005:.\Generated_Source\PSoC4/SPIM.c **** 
1006:.\Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 914              		.loc 1 1006 0
 915 001a FC1D     		add	r4, r7, #7
 916 001c FFF7FEFF 		bl	CyEnterCriticalSection
 917 0020 031C     		mov	r3, r0
 918 0022 2370     		strb	r3, [r4]
1007:.\Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
1008:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 919              		.loc 1 1008 0
 920 0024 0D4B     		ldr	r3, .L67+8
 921 0026 0D4A     		ldr	r2, .L67+8
 922 0028 1278     		ldrb	r2, [r2]
 923 002a D2B2     		uxtb	r2, r2
 924 002c 0121     		mov	r1, #1
 925 002e 0A43     		orr	r2, r1
 926 0030 D2B2     		uxtb	r2, r2
 927 0032 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 35


1009:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 928              		.loc 1 1009 0
 929 0034 094B     		ldr	r3, .L67+8
 930 0036 094A     		ldr	r2, .L67+8
 931 0038 1278     		ldrb	r2, [r2]
 932 003a D2B2     		uxtb	r2, r2
 933 003c 0121     		mov	r1, #1
 934 003e 8A43     		bic	r2, r1
 935 0040 D2B2     		uxtb	r2, r2
 936 0042 1A70     		strb	r2, [r3]
1010:.\Generated_Source\PSoC4/SPIM.c **** 
1011:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1012:.\Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1013:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1014:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1015:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1016:.\Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 937              		.loc 1 1016 0
 938 0044 FB1D     		add	r3, r7, #7
 939 0046 1B78     		ldrb	r3, [r3]
 940 0048 181C     		mov	r0, r3
 941 004a FFF7FEFF 		bl	CyExitCriticalSection
1017:.\Generated_Source\PSoC4/SPIM.c **** }
 942              		.loc 1 1017 0
 943 004e BD46     		mov	sp, r7
 944 0050 03B0     		add	sp, sp, #12
 945              		@ sp needed
 946 0052 90BD     		pop	{r4, r7, pc}
 947              	.L68:
 948              		.align	2
 949              	.L67:
 950 0054 50000F40 		.word	1074724944
 951 0058 63000F40 		.word	1074724963
 952 005c 90000F40 		.word	1074725008
 953              		.cfi_endproc
 954              	.LFE19:
 955              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 956              		.section	.text.SPIM_EnableInt,"ax",%progbits
 957              		.align	2
 958              		.global	SPIM_EnableInt
 959              		.code	16
 960              		.thumb_func
 961              		.type	SPIM_EnableInt, %function
 962              	SPIM_EnableInt:
 963              	.LFB20:
1018:.\Generated_Source\PSoC4/SPIM.c **** 
1019:.\Generated_Source\PSoC4/SPIM.c **** 
1020:.\Generated_Source\PSoC4/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1021:.\Generated_Source\PSoC4/SPIM.c **** *  Please do not use it in new projects.
1022:.\Generated_Source\PSoC4/SPIM.c **** */
1023:.\Generated_Source\PSoC4/SPIM.c **** 
1024:.\Generated_Source\PSoC4/SPIM.c **** 
1025:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1026:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableInt
1027:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1028:.\Generated_Source\PSoC4/SPIM.c **** *
1029:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 36


1030:.\Generated_Source\PSoC4/SPIM.c **** *  Enable internal interrupt generation.
1031:.\Generated_Source\PSoC4/SPIM.c **** *
1032:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
1033:.\Generated_Source\PSoC4/SPIM.c **** *  None.
1034:.\Generated_Source\PSoC4/SPIM.c **** *
1035:.\Generated_Source\PSoC4/SPIM.c **** * Return:
1036:.\Generated_Source\PSoC4/SPIM.c **** *  None.
1037:.\Generated_Source\PSoC4/SPIM.c **** *
1038:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
1039:.\Generated_Source\PSoC4/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1040:.\Generated_Source\PSoC4/SPIM.c **** *
1041:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1042:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableInt(void) 
1043:.\Generated_Source\PSoC4/SPIM.c **** {
 964              		.loc 1 1043 0
 965              		.cfi_startproc
 966 0000 80B5     		push	{r7, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 00AF     		add	r7, sp, #0
 971              		.cfi_def_cfa_register 7
1044:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 972              		.loc 1 1044 0
 973 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1045:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 974              		.loc 1 1045 0
 975 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1046:.\Generated_Source\PSoC4/SPIM.c **** }
 976              		.loc 1 1046 0
 977 000c BD46     		mov	sp, r7
 978              		@ sp needed
 979 000e 80BD     		pop	{r7, pc}
 980              		.cfi_endproc
 981              	.LFE20:
 982              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 983              		.section	.text.SPIM_DisableInt,"ax",%progbits
 984              		.align	2
 985              		.global	SPIM_DisableInt
 986              		.code	16
 987              		.thumb_func
 988              		.type	SPIM_DisableInt, %function
 989              	SPIM_DisableInt:
 990              	.LFB21:
1047:.\Generated_Source\PSoC4/SPIM.c **** 
1048:.\Generated_Source\PSoC4/SPIM.c **** 
1049:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1050:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableInt
1051:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1052:.\Generated_Source\PSoC4/SPIM.c **** *
1053:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
1054:.\Generated_Source\PSoC4/SPIM.c **** *  Disable internal interrupt generation.
1055:.\Generated_Source\PSoC4/SPIM.c **** *
1056:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
1057:.\Generated_Source\PSoC4/SPIM.c **** *  None.
1058:.\Generated_Source\PSoC4/SPIM.c **** *
1059:.\Generated_Source\PSoC4/SPIM.c **** * Return:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 37


1060:.\Generated_Source\PSoC4/SPIM.c **** *  None.
1061:.\Generated_Source\PSoC4/SPIM.c **** *
1062:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
1063:.\Generated_Source\PSoC4/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1064:.\Generated_Source\PSoC4/SPIM.c **** *
1065:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableInt(void) 
1067:.\Generated_Source\PSoC4/SPIM.c **** {
 991              		.loc 1 1067 0
 992              		.cfi_startproc
 993 0000 80B5     		push	{r7, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
1068:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 999              		.loc 1 1068 0
 1000 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1069:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 1001              		.loc 1 1069 0
 1002 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1070:.\Generated_Source\PSoC4/SPIM.c **** }
 1003              		.loc 1 1070 0
 1004 000c BD46     		mov	sp, r7
 1005              		@ sp needed
 1006 000e 80BD     		pop	{r7, pc}
 1007              		.cfi_endproc
 1008              	.LFE21:
 1009              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1010              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1011              		.align	2
 1012              		.global	SPIM_SetInterruptMode
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	SPIM_SetInterruptMode, %function
 1016              	SPIM_SetInterruptMode:
 1017              	.LFB22:
1071:.\Generated_Source\PSoC4/SPIM.c **** 
1072:.\Generated_Source\PSoC4/SPIM.c **** 
1073:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1075:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/SPIM.c **** *
1077:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
1078:.\Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1079:.\Generated_Source\PSoC4/SPIM.c **** *
1080:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1082:.\Generated_Source\PSoC4/SPIM.c **** *  header file).
1083:.\Generated_Source\PSoC4/SPIM.c **** *
1084:.\Generated_Source\PSoC4/SPIM.c **** * Return:
1085:.\Generated_Source\PSoC4/SPIM.c **** *  None.
1086:.\Generated_Source\PSoC4/SPIM.c **** *
1087:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
1088:.\Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1089:.\Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 38


1090:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1091:.\Generated_Source\PSoC4/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1092:.\Generated_Source\PSoC4/SPIM.c **** {
 1018              		.loc 1 1092 0
 1019              		.cfi_startproc
 1020 0000 80B5     		push	{r7, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 82B0     		sub	sp, sp, #8
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 021C     		mov	r2, r0
 1029 0008 FB1D     		add	r3, r7, #7
 1030 000a 1A70     		strb	r2, [r3]
1093:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1031              		.loc 1 1093 0
 1032 000c 064B     		ldr	r3, .L72
 1033 000e FA1D     		add	r2, r7, #7
 1034 0010 1278     		ldrb	r2, [r2]
 1035 0012 1021     		mov	r1, #16
 1036 0014 8A43     		bic	r2, r1
 1037 0016 D2B2     		uxtb	r2, r2
 1038 0018 1A70     		strb	r2, [r3]
1094:.\Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1039              		.loc 1 1094 0
 1040 001a 044B     		ldr	r3, .L72+4
 1041 001c FA1D     		add	r2, r7, #7
 1042 001e 1278     		ldrb	r2, [r2]
 1043 0020 1A70     		strb	r2, [r3]
1095:.\Generated_Source\PSoC4/SPIM.c **** }
 1044              		.loc 1 1095 0
 1045 0022 BD46     		mov	sp, r7
 1046 0024 02B0     		add	sp, sp, #8
 1047              		@ sp needed
 1048 0026 80BD     		pop	{r7, pc}
 1049              	.L73:
 1050              		.align	2
 1051              	.L72:
 1052 0028 81000F40 		.word	1074724993
 1053 002c 83000F40 		.word	1074724995
 1054              		.cfi_endproc
 1055              	.LFE22:
 1056              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1057              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1058              		.align	2
 1059              		.global	SPIM_ReadStatus
 1060              		.code	16
 1061              		.thumb_func
 1062              		.type	SPIM_ReadStatus, %function
 1063              	SPIM_ReadStatus:
 1064              	.LFB23:
1096:.\Generated_Source\PSoC4/SPIM.c **** 
1097:.\Generated_Source\PSoC4/SPIM.c **** 
1098:.\Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1099:.\Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadStatus
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 39


1100:.\Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1101:.\Generated_Source\PSoC4/SPIM.c **** *
1102:.\Generated_Source\PSoC4/SPIM.c **** * Summary:
1103:.\Generated_Source\PSoC4/SPIM.c **** *  Read the status register for the component.
1104:.\Generated_Source\PSoC4/SPIM.c **** *
1105:.\Generated_Source\PSoC4/SPIM.c **** * Parameters:
1106:.\Generated_Source\PSoC4/SPIM.c **** *  None.
1107:.\Generated_Source\PSoC4/SPIM.c **** *
1108:.\Generated_Source\PSoC4/SPIM.c **** * Return:
1109:.\Generated_Source\PSoC4/SPIM.c **** *  Contents of the status register.
1110:.\Generated_Source\PSoC4/SPIM.c **** *
1111:.\Generated_Source\PSoC4/SPIM.c **** * Global variables:
1112:.\Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1113:.\Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
1114:.\Generated_Source\PSoC4/SPIM.c **** *
1115:.\Generated_Source\PSoC4/SPIM.c **** * Theory:
1116:.\Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1117:.\Generated_Source\PSoC4/SPIM.c **** *  and flow control.
1118:.\Generated_Source\PSoC4/SPIM.c **** *
1119:.\Generated_Source\PSoC4/SPIM.c **** * Side Effects:
1120:.\Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
1121:.\Generated_Source\PSoC4/SPIM.c **** *
1122:.\Generated_Source\PSoC4/SPIM.c **** * Reentrant:
1123:.\Generated_Source\PSoC4/SPIM.c **** *  No.
1124:.\Generated_Source\PSoC4/SPIM.c **** *
1125:.\Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1126:.\Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1127:.\Generated_Source\PSoC4/SPIM.c **** {
 1065              		.loc 1 1127 0
 1066              		.cfi_startproc
 1067 0000 80B5     		push	{r7, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 82B0     		sub	sp, sp, #8
 1072              		.cfi_def_cfa_offset 16
 1073 0004 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
1128:.\Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
1129:.\Generated_Source\PSoC4/SPIM.c **** 
1130:.\Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1131:.\Generated_Source\PSoC4/SPIM.c **** 
1132:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableInt();
1133:.\Generated_Source\PSoC4/SPIM.c **** 
1134:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1135:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1136:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1137:.\Generated_Source\PSoC4/SPIM.c **** 
1138:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
1139:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
1140:.\Generated_Source\PSoC4/SPIM.c **** 
1141:.\Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
1142:.\Generated_Source\PSoC4/SPIM.c **** 
1143:.\Generated_Source\PSoC4/SPIM.c ****     #else
1144:.\Generated_Source\PSoC4/SPIM.c **** 
1145:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 1075              		.loc 1 1145 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 40


 1076 0006 0C4A     		ldr	r2, .L76
 1077 0008 FB1D     		add	r3, r7, #7
 1078 000a 1278     		ldrb	r2, [r2]
 1079 000c 1A70     		strb	r2, [r3]
1146:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 1080              		.loc 1 1146 0
 1081 000e 0B4B     		ldr	r3, .L76+4
 1082 0010 1B78     		ldrb	r3, [r3]
 1083 0012 D9B2     		uxtb	r1, r3
 1084 0014 FB1D     		add	r3, r7, #7
 1085 0016 FA1D     		add	r2, r7, #7
 1086 0018 1278     		ldrb	r2, [r2]
 1087 001a 0A43     		orr	r2, r1
 1088 001c 1A70     		strb	r2, [r3]
1147:.\Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1089              		.loc 1 1147 0
 1090 001e FB1D     		add	r3, r7, #7
 1091 0020 FA1D     		add	r2, r7, #7
 1092 0022 1278     		ldrb	r2, [r2]
 1093 0024 1021     		mov	r1, #16
 1094 0026 8A43     		bic	r2, r1
 1095 0028 1A70     		strb	r2, [r3]
1148:.\Generated_Source\PSoC4/SPIM.c **** 
1149:.\Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1150:.\Generated_Source\PSoC4/SPIM.c **** 
1151:.\Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 1096              		.loc 1 1151 0
 1097 002a FB1D     		add	r3, r7, #7
 1098 002c 1B78     		ldrb	r3, [r3]
1152:.\Generated_Source\PSoC4/SPIM.c **** }
 1099              		.loc 1 1152 0
 1100 002e 181C     		mov	r0, r3
 1101 0030 BD46     		mov	sp, r7
 1102 0032 02B0     		add	sp, sp, #8
 1103              		@ sp needed
 1104 0034 80BD     		pop	{r7, pc}
 1105              	.L77:
 1106 0036 C046     		.align	2
 1107              	.L76:
 1108 0038 63000F40 		.word	1074724963
 1109 003c 61000F40 		.word	1074724961
 1110              		.cfi_endproc
 1111              	.LFE23:
 1112              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1113              		.text
 1114              	.Letext0:
 1115              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1116              		.section	.debug_info,"",%progbits
 1117              	.Ldebug_info0:
 1118 0000 E8030000 		.4byte	0x3e8
 1119 0004 0400     		.2byte	0x4
 1120 0006 00000000 		.4byte	.Ldebug_abbrev0
 1121 000a 04       		.byte	0x4
 1122 000b 01       		.uleb128 0x1
 1123 000c E3000000 		.4byte	.LASF51
 1124 0010 01       		.byte	0x1
 1125 0011 43030000 		.4byte	.LASF52
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 41


 1126 0015 46000000 		.4byte	.LASF53
 1127 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1128 001d 00000000 		.4byte	0
 1129 0021 00000000 		.4byte	.Ldebug_line0
 1130 0025 02       		.uleb128 0x2
 1131 0026 01       		.byte	0x1
 1132 0027 06       		.byte	0x6
 1133 0028 87030000 		.4byte	.LASF0
 1134 002c 02       		.uleb128 0x2
 1135 002d 01       		.byte	0x1
 1136 002e 08       		.byte	0x8
 1137 002f F4010000 		.4byte	.LASF1
 1138 0033 02       		.uleb128 0x2
 1139 0034 02       		.byte	0x2
 1140 0035 05       		.byte	0x5
 1141 0036 FF020000 		.4byte	.LASF2
 1142 003a 02       		.uleb128 0x2
 1143 003b 02       		.byte	0x2
 1144 003c 07       		.byte	0x7
 1145 003d 2E000000 		.4byte	.LASF3
 1146 0041 02       		.uleb128 0x2
 1147 0042 04       		.byte	0x4
 1148 0043 05       		.byte	0x5
 1149 0044 74030000 		.4byte	.LASF4
 1150 0048 02       		.uleb128 0x2
 1151 0049 04       		.byte	0x4
 1152 004a 07       		.byte	0x7
 1153 004b AD010000 		.4byte	.LASF5
 1154 004f 02       		.uleb128 0x2
 1155 0050 08       		.byte	0x8
 1156 0051 05       		.byte	0x5
 1157 0052 D8020000 		.4byte	.LASF6
 1158 0056 02       		.uleb128 0x2
 1159 0057 08       		.byte	0x8
 1160 0058 07       		.byte	0x7
 1161 0059 84020000 		.4byte	.LASF7
 1162 005d 03       		.uleb128 0x3
 1163 005e 04       		.byte	0x4
 1164 005f 05       		.byte	0x5
 1165 0060 696E7400 		.ascii	"int\000"
 1166 0064 02       		.uleb128 0x2
 1167 0065 04       		.byte	0x4
 1168 0066 07       		.byte	0x7
 1169 0067 77020000 		.4byte	.LASF8
 1170 006b 04       		.uleb128 0x4
 1171 006c BF010000 		.4byte	.LASF12
 1172 0070 02       		.byte	0x2
 1173 0071 A1       		.byte	0xa1
 1174 0072 2C000000 		.4byte	0x2c
 1175 0076 02       		.uleb128 0x2
 1176 0077 04       		.byte	0x4
 1177 0078 04       		.byte	0x4
 1178 0079 DD000000 		.4byte	.LASF9
 1179 007d 02       		.uleb128 0x2
 1180 007e 08       		.byte	0x8
 1181 007f 04       		.byte	0x4
 1182 0080 14020000 		.4byte	.LASF10
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 42


 1183 0084 02       		.uleb128 0x2
 1184 0085 01       		.byte	0x1
 1185 0086 08       		.byte	0x8
 1186 0087 41000000 		.4byte	.LASF11
 1187 008b 05       		.uleb128 0x5
 1188 008c 97010000 		.4byte	.LASF13
 1189 0090 02       		.byte	0x2
 1190 0091 4B01     		.2byte	0x14b
 1191 0093 97000000 		.4byte	0x97
 1192 0097 06       		.uleb128 0x6
 1193 0098 6B000000 		.4byte	0x6b
 1194 009c 02       		.uleb128 0x2
 1195 009d 04       		.byte	0x4
 1196 009e 07       		.byte	0x7
 1197 009f CF020000 		.4byte	.LASF14
 1198 00a3 07       		.uleb128 0x7
 1199 00a4 E6020000 		.4byte	.LASF15
 1200 00a8 01       		.byte	0x1
 1201 00a9 3F       		.byte	0x3f
 1202 00aa 00000000 		.4byte	.LFB0
 1203 00ae 34000000 		.4byte	.LFE0-.LFB0
 1204 00b2 01       		.uleb128 0x1
 1205 00b3 9C       		.byte	0x9c
 1206 00b4 08       		.uleb128 0x8
 1207 00b5 11000000 		.4byte	.LASF17
 1208 00b9 01       		.byte	0x1
 1209 00ba 78       		.byte	0x78
 1210 00bb 00000000 		.4byte	.LFB1
 1211 00bf 68000000 		.4byte	.LFE1-.LFB1
 1212 00c3 01       		.uleb128 0x1
 1213 00c4 9C       		.byte	0x9c
 1214 00c5 D8000000 		.4byte	0xd8
 1215 00c9 09       		.uleb128 0x9
 1216 00ca D3010000 		.4byte	.LASF19
 1217 00ce 01       		.byte	0x1
 1218 00cf 7A       		.byte	0x7a
 1219 00d0 6B000000 		.4byte	0x6b
 1220 00d4 02       		.uleb128 0x2
 1221 00d5 91       		.byte	0x91
 1222 00d6 6F       		.sleb128 -17
 1223 00d7 00       		.byte	0
 1224 00d8 07       		.uleb128 0x7
 1225 00d9 93030000 		.4byte	.LASF16
 1226 00dd 01       		.byte	0x1
 1227 00de A3       		.byte	0xa3
 1228 00df 00000000 		.4byte	.LFB2
 1229 00e3 24000000 		.4byte	.LFE2-.LFB2
 1230 00e7 01       		.uleb128 0x1
 1231 00e8 9C       		.byte	0x9c
 1232 00e9 08       		.uleb128 0x8
 1233 00ea 1D000000 		.4byte	.LASF18
 1234 00ee 01       		.byte	0x1
 1235 00ef C0       		.byte	0xc0
 1236 00f0 00000000 		.4byte	.LFB3
 1237 00f4 54000000 		.4byte	.LFE3-.LFB3
 1238 00f8 01       		.uleb128 0x1
 1239 00f9 9C       		.byte	0x9c
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 43


 1240 00fa 0D010000 		.4byte	0x10d
 1241 00fe 09       		.uleb128 0x9
 1242 00ff D3010000 		.4byte	.LASF19
 1243 0103 01       		.byte	0x1
 1244 0104 C2       		.byte	0xc2
 1245 0105 6B000000 		.4byte	0x6b
 1246 0109 02       		.uleb128 0x2
 1247 010a 91       		.byte	0x91
 1248 010b 6F       		.sleb128 -17
 1249 010c 00       		.byte	0
 1250 010d 0A       		.uleb128 0xa
 1251 010e 9C010000 		.4byte	.LASF20
 1252 0112 01       		.byte	0x1
 1253 0113 E3       		.byte	0xe3
 1254 0114 00000000 		.4byte	.LFB4
 1255 0118 08000000 		.4byte	.LFE4-.LFB4
 1256 011c 01       		.uleb128 0x1
 1257 011d 9C       		.byte	0x9c
 1258 011e 0A       		.uleb128 0xa
 1259 011f 63030000 		.4byte	.LASF21
 1260 0123 01       		.byte	0x1
 1261 0124 FC       		.byte	0xfc
 1262 0125 00000000 		.4byte	.LFB5
 1263 0129 08000000 		.4byte	.LFE5-.LFB5
 1264 012d 01       		.uleb128 0x1
 1265 012e 9C       		.byte	0x9c
 1266 012f 0B       		.uleb128 0xb
 1267 0130 02020000 		.4byte	.LASF22
 1268 0134 01       		.byte	0x1
 1269 0135 1501     		.2byte	0x115
 1270 0137 00000000 		.4byte	.LFB6
 1271 013b 08000000 		.4byte	.LFE6-.LFB6
 1272 013f 01       		.uleb128 0x1
 1273 0140 9C       		.byte	0x9c
 1274 0141 0B       		.uleb128 0xb
 1275 0142 B0030000 		.4byte	.LASF23
 1276 0146 01       		.byte	0x1
 1277 0147 2E01     		.2byte	0x12e
 1278 0149 00000000 		.4byte	.LFB7
 1279 014d 08000000 		.4byte	.LFE7-.LFB7
 1280 0151 01       		.uleb128 0x1
 1281 0152 9C       		.byte	0x9c
 1282 0153 0C       		.uleb128 0xc
 1283 0154 47020000 		.4byte	.LASF24
 1284 0158 01       		.byte	0x1
 1285 0159 4801     		.2byte	0x148
 1286 015b 00000000 		.4byte	.LFB8
 1287 015f 20000000 		.4byte	.LFE8-.LFB8
 1288 0163 01       		.uleb128 0x1
 1289 0164 9C       		.byte	0x9c
 1290 0165 79010000 		.4byte	0x179
 1291 0169 0D       		.uleb128 0xd
 1292 016a 1B020000 		.4byte	.LASF26
 1293 016e 01       		.byte	0x1
 1294 016f 4801     		.2byte	0x148
 1295 0171 6B000000 		.4byte	0x6b
 1296 0175 02       		.uleb128 0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 44


 1297 0176 91       		.byte	0x91
 1298 0177 77       		.sleb128 -9
 1299 0178 00       		.byte	0
 1300 0179 0C       		.uleb128 0xc
 1301 017a 5F020000 		.4byte	.LASF25
 1302 017e 01       		.byte	0x1
 1303 017f 6001     		.2byte	0x160
 1304 0181 00000000 		.4byte	.LFB9
 1305 0185 20000000 		.4byte	.LFE9-.LFB9
 1306 0189 01       		.uleb128 0x1
 1307 018a 9C       		.byte	0x9c
 1308 018b 9F010000 		.4byte	0x19f
 1309 018f 0D       		.uleb128 0xd
 1310 0190 1B020000 		.4byte	.LASF26
 1311 0194 01       		.byte	0x1
 1312 0195 6001     		.2byte	0x160
 1313 0197 6B000000 		.4byte	0x6b
 1314 019b 02       		.uleb128 0x2
 1315 019c 91       		.byte	0x91
 1316 019d 77       		.sleb128 -9
 1317 019e 00       		.byte	0
 1318 019f 0E       		.uleb128 0xe
 1319 01a0 9E030000 		.4byte	.LASF28
 1320 01a4 01       		.byte	0x1
 1321 01a5 8201     		.2byte	0x182
 1322 01a7 6B000000 		.4byte	0x6b
 1323 01ab 00000000 		.4byte	.LFB10
 1324 01af 20000000 		.4byte	.LFE10-.LFB10
 1325 01b3 01       		.uleb128 0x1
 1326 01b4 9C       		.byte	0x9c
 1327 01b5 C9010000 		.4byte	0x1c9
 1328 01b9 0F       		.uleb128 0xf
 1329 01ba 7D030000 		.4byte	.LASF27
 1330 01be 01       		.byte	0x1
 1331 01bf 8401     		.2byte	0x184
 1332 01c1 6B000000 		.4byte	0x6b
 1333 01c5 02       		.uleb128 0x2
 1334 01c6 91       		.byte	0x91
 1335 01c7 77       		.sleb128 -9
 1336 01c8 00       		.byte	0
 1337 01c9 0E       		.uleb128 0xe
 1338 01ca A5020000 		.4byte	.LASF29
 1339 01ce 01       		.byte	0x1
 1340 01cf B501     		.2byte	0x1b5
 1341 01d1 6B000000 		.4byte	0x6b
 1342 01d5 00000000 		.4byte	.LFB11
 1343 01d9 20000000 		.4byte	.LFE11-.LFB11
 1344 01dd 01       		.uleb128 0x1
 1345 01de 9C       		.byte	0x9c
 1346 01df F3010000 		.4byte	0x1f3
 1347 01e3 0F       		.uleb128 0xf
 1348 01e4 7D030000 		.4byte	.LASF27
 1349 01e8 01       		.byte	0x1
 1350 01e9 B701     		.2byte	0x1b7
 1351 01eb 6B000000 		.4byte	0x6b
 1352 01ef 02       		.uleb128 0x2
 1353 01f0 91       		.byte	0x91
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 45


 1354 01f1 77       		.sleb128 -9
 1355 01f2 00       		.byte	0
 1356 01f3 0C       		.uleb128 0xc
 1357 01f4 00000000 		.4byte	.LASF30
 1358 01f8 01       		.byte	0x1
 1359 01f9 EE01     		.2byte	0x1ee
 1360 01fb 00000000 		.4byte	.LFB12
 1361 01ff 34000000 		.4byte	.LFE12-.LFB12
 1362 0203 01       		.uleb128 0x1
 1363 0204 9C       		.byte	0x9c
 1364 0205 19020000 		.4byte	0x219
 1365 0209 0D       		.uleb128 0xd
 1366 020a 27000000 		.4byte	.LASF31
 1367 020e 01       		.byte	0x1
 1368 020f EE01     		.2byte	0x1ee
 1369 0211 6B000000 		.4byte	0x6b
 1370 0215 02       		.uleb128 0x2
 1371 0216 91       		.byte	0x91
 1372 0217 77       		.sleb128 -9
 1373 0218 00       		.byte	0
 1374 0219 0E       		.uleb128 0xe
 1375 021a E4010000 		.4byte	.LASF32
 1376 021e 01       		.byte	0x1
 1377 021f 5B02     		.2byte	0x25b
 1378 0221 6B000000 		.4byte	0x6b
 1379 0225 00000000 		.4byte	.LFB13
 1380 0229 20000000 		.4byte	.LFE13-.LFB13
 1381 022d 01       		.uleb128 0x1
 1382 022e 9C       		.byte	0x9c
 1383 022f 43020000 		.4byte	0x243
 1384 0233 0F       		.uleb128 0xf
 1385 0234 C6000000 		.4byte	.LASF33
 1386 0238 01       		.byte	0x1
 1387 0239 5D02     		.2byte	0x25d
 1388 023b 6B000000 		.4byte	0x6b
 1389 023f 02       		.uleb128 0x2
 1390 0240 91       		.byte	0x91
 1391 0241 77       		.sleb128 -9
 1392 0242 00       		.byte	0
 1393 0243 0E       		.uleb128 0xe
 1394 0244 32020000 		.4byte	.LASF34
 1395 0248 01       		.byte	0x1
 1396 0249 9B02     		.2byte	0x29b
 1397 024b 6B000000 		.4byte	0x6b
 1398 024f 00000000 		.4byte	.LFB14
 1399 0253 30000000 		.4byte	.LFE14-.LFB14
 1400 0257 01       		.uleb128 0x1
 1401 0258 9C       		.byte	0x9c
 1402 0259 6D020000 		.4byte	0x26d
 1403 025d 0F       		.uleb128 0xf
 1404 025e 7D010000 		.4byte	.LASF35
 1405 0262 01       		.byte	0x1
 1406 0263 9D02     		.2byte	0x29d
 1407 0265 6B000000 		.4byte	0x6b
 1408 0269 02       		.uleb128 0x2
 1409 026a 91       		.byte	0x91
 1410 026b 77       		.sleb128 -9
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 46


 1411 026c 00       		.byte	0
 1412 026d 0E       		.uleb128 0xe
 1413 026e 82010000 		.4byte	.LASF36
 1414 0272 01       		.byte	0x1
 1415 0273 D802     		.2byte	0x2d8
 1416 0275 6B000000 		.4byte	0x6b
 1417 0279 00000000 		.4byte	.LFB15
 1418 027d 48000000 		.4byte	.LFE15-.LFB15
 1419 0281 01       		.uleb128 0x1
 1420 0282 9C       		.byte	0x9c
 1421 0283 97020000 		.4byte	0x297
 1422 0287 0F       		.uleb128 0xf
 1423 0288 7D010000 		.4byte	.LASF35
 1424 028c 01       		.byte	0x1
 1425 028d DA02     		.2byte	0x2da
 1426 028f 6B000000 		.4byte	0x6b
 1427 0293 02       		.uleb128 0x2
 1428 0294 91       		.byte	0x91
 1429 0295 77       		.sleb128 -9
 1430 0296 00       		.byte	0
 1431 0297 0B       		.uleb128 0xb
 1432 0298 6A010000 		.4byte	.LASF37
 1433 029c 01       		.byte	0x1
 1434 029d 2703     		.2byte	0x327
 1435 029f 00000000 		.4byte	.LFB16
 1436 02a3 24000000 		.4byte	.LFE16-.LFB16
 1437 02a7 01       		.uleb128 0x1
 1438 02a8 9C       		.byte	0x9c
 1439 02a9 10       		.uleb128 0x10
 1440 02aa 09030000 		.4byte	.LASF38
 1441 02ae 01       		.byte	0x1
 1442 02af 5E03     		.2byte	0x35e
 1443 02b1 00000000 		.4byte	.LFB17
 1444 02b5 44000000 		.4byte	.LFE17-.LFB17
 1445 02b9 01       		.uleb128 0x1
 1446 02ba 9C       		.byte	0x9c
 1447 02bb CF020000 		.4byte	0x2cf
 1448 02bf 0F       		.uleb128 0xf
 1449 02c0 D3010000 		.4byte	.LASF19
 1450 02c4 01       		.byte	0x1
 1451 02c5 6003     		.2byte	0x360
 1452 02c7 6B000000 		.4byte	0x6b
 1453 02cb 02       		.uleb128 0x2
 1454 02cc 91       		.byte	0x91
 1455 02cd 6F       		.sleb128 -17
 1456 02ce 00       		.byte	0
 1457 02cf 10       		.uleb128 0x10
 1458 02d0 C5010000 		.4byte	.LASF39
 1459 02d4 01       		.byte	0x1
 1460 02d5 C303     		.2byte	0x3c3
 1461 02d7 00000000 		.4byte	.LFB18
 1462 02db 50000000 		.4byte	.LFE18-.LFB18
 1463 02df 01       		.uleb128 0x1
 1464 02e0 9C       		.byte	0x9c
 1465 02e1 13030000 		.4byte	0x313
 1466 02e5 0D       		.uleb128 0xd
 1467 02e6 1C030000 		.4byte	.LASF40
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 47


 1468 02ea 01       		.byte	0x1
 1469 02eb C303     		.2byte	0x3c3
 1470 02ed 13030000 		.4byte	0x313
 1471 02f1 02       		.uleb128 0x2
 1472 02f2 91       		.byte	0x91
 1473 02f3 6C       		.sleb128 -20
 1474 02f4 0D       		.uleb128 0xd
 1475 02f5 9B020000 		.4byte	.LASF41
 1476 02f9 01       		.byte	0x1
 1477 02fa C303     		.2byte	0x3c3
 1478 02fc 6B000000 		.4byte	0x6b
 1479 0300 02       		.uleb128 0x2
 1480 0301 91       		.byte	0x91
 1481 0302 6B       		.sleb128 -21
 1482 0303 0F       		.uleb128 0xf
 1483 0304 B7020000 		.4byte	.LASF42
 1484 0308 01       		.byte	0x1
 1485 0309 C603     		.2byte	0x3c6
 1486 030b 6B000000 		.4byte	0x6b
 1487 030f 02       		.uleb128 0x2
 1488 0310 91       		.byte	0x91
 1489 0311 77       		.sleb128 -9
 1490 0312 00       		.byte	0
 1491 0313 11       		.uleb128 0x11
 1492 0314 04       		.byte	0x4
 1493 0315 19030000 		.4byte	0x319
 1494 0319 12       		.uleb128 0x12
 1495 031a 6B000000 		.4byte	0x6b
 1496 031e 10       		.uleb128 0x10
 1497 031f F0020000 		.4byte	.LASF43
 1498 0323 01       		.byte	0x1
 1499 0324 E403     		.2byte	0x3e4
 1500 0326 00000000 		.4byte	.LFB19
 1501 032a 60000000 		.4byte	.LFE19-.LFB19
 1502 032e 01       		.uleb128 0x1
 1503 032f 9C       		.byte	0x9c
 1504 0330 44030000 		.4byte	0x344
 1505 0334 0F       		.uleb128 0xf
 1506 0335 D3010000 		.4byte	.LASF19
 1507 0339 01       		.byte	0x1
 1508 033a E603     		.2byte	0x3e6
 1509 033c 6B000000 		.4byte	0x6b
 1510 0340 02       		.uleb128 0x2
 1511 0341 91       		.byte	0x91
 1512 0342 6F       		.sleb128 -17
 1513 0343 00       		.byte	0
 1514 0344 13       		.uleb128 0x13
 1515 0345 C0020000 		.4byte	.LASF44
 1516 0349 01       		.byte	0x1
 1517 034a 1204     		.2byte	0x412
 1518 034c 00000000 		.4byte	.LFB20
 1519 0350 10000000 		.4byte	.LFE20-.LFB20
 1520 0354 01       		.uleb128 0x1
 1521 0355 9C       		.byte	0x9c
 1522 0356 13       		.uleb128 0x13
 1523 0357 CD000000 		.4byte	.LASF45
 1524 035b 01       		.byte	0x1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 48


 1525 035c 2A04     		.2byte	0x42a
 1526 035e 00000000 		.4byte	.LFB21
 1527 0362 10000000 		.4byte	.LFE21-.LFB21
 1528 0366 01       		.uleb128 0x1
 1529 0367 9C       		.byte	0x9c
 1530 0368 0C       		.uleb128 0xc
 1531 0369 A3000000 		.4byte	.LASF46
 1532 036d 01       		.byte	0x1
 1533 036e 4304     		.2byte	0x443
 1534 0370 00000000 		.4byte	.LFB22
 1535 0374 30000000 		.4byte	.LFE22-.LFB22
 1536 0378 01       		.uleb128 0x1
 1537 0379 9C       		.byte	0x9c
 1538 037a 8E030000 		.4byte	0x38e
 1539 037e 0D       		.uleb128 0xd
 1540 037f 1B020000 		.4byte	.LASF26
 1541 0383 01       		.byte	0x1
 1542 0384 4304     		.2byte	0x443
 1543 0386 6B000000 		.4byte	0x6b
 1544 038a 02       		.uleb128 0x2
 1545 038b 91       		.byte	0x91
 1546 038c 77       		.sleb128 -9
 1547 038d 00       		.byte	0
 1548 038e 0E       		.uleb128 0xe
 1549 038f 23030000 		.4byte	.LASF47
 1550 0393 01       		.byte	0x1
 1551 0394 6604     		.2byte	0x466
 1552 0396 6B000000 		.4byte	0x6b
 1553 039a 00000000 		.4byte	.LFB23
 1554 039e 40000000 		.4byte	.LFE23-.LFB23
 1555 03a2 01       		.uleb128 0x1
 1556 03a3 9C       		.byte	0x9c
 1557 03a4 B8030000 		.4byte	0x3b8
 1558 03a8 0F       		.uleb128 0xf
 1559 03a9 7D030000 		.4byte	.LASF27
 1560 03ad 01       		.byte	0x1
 1561 03ae 6804     		.2byte	0x468
 1562 03b0 6B000000 		.4byte	0x6b
 1563 03b4 02       		.uleb128 0x2
 1564 03b5 91       		.byte	0x91
 1565 03b6 77       		.sleb128 -9
 1566 03b7 00       		.byte	0
 1567 03b8 14       		.uleb128 0x14
 1568 03b9 B9000000 		.4byte	.LASF48
 1569 03bd 01       		.byte	0x1
 1570 03be 22       		.byte	0x22
 1571 03bf 6B000000 		.4byte	0x6b
 1572 03c3 05       		.uleb128 0x5
 1573 03c4 03       		.byte	0x3
 1574 03c5 00000000 		.4byte	SPIM_initVar
 1575 03c9 14       		.uleb128 0x14
 1576 03ca 33030000 		.4byte	.LASF49
 1577 03ce 01       		.byte	0x1
 1578 03cf 24       		.byte	0x24
 1579 03d0 97000000 		.4byte	0x97
 1580 03d4 05       		.uleb128 0x5
 1581 03d5 03       		.byte	0x3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 49


 1582 03d6 00000000 		.4byte	SPIM_swStatusTx
 1583 03da 14       		.uleb128 0x14
 1584 03db 22020000 		.4byte	.LASF50
 1585 03df 01       		.byte	0x1
 1586 03e0 25       		.byte	0x25
 1587 03e1 97000000 		.4byte	0x97
 1588 03e5 05       		.uleb128 0x5
 1589 03e6 03       		.byte	0x3
 1590 03e7 00000000 		.4byte	SPIM_swStatusRx
 1591 03eb 00       		.byte	0
 1592              		.section	.debug_abbrev,"",%progbits
 1593              	.Ldebug_abbrev0:
 1594 0000 01       		.uleb128 0x1
 1595 0001 11       		.uleb128 0x11
 1596 0002 01       		.byte	0x1
 1597 0003 25       		.uleb128 0x25
 1598 0004 0E       		.uleb128 0xe
 1599 0005 13       		.uleb128 0x13
 1600 0006 0B       		.uleb128 0xb
 1601 0007 03       		.uleb128 0x3
 1602 0008 0E       		.uleb128 0xe
 1603 0009 1B       		.uleb128 0x1b
 1604 000a 0E       		.uleb128 0xe
 1605 000b 55       		.uleb128 0x55
 1606 000c 17       		.uleb128 0x17
 1607 000d 11       		.uleb128 0x11
 1608 000e 01       		.uleb128 0x1
 1609 000f 10       		.uleb128 0x10
 1610 0010 17       		.uleb128 0x17
 1611 0011 00       		.byte	0
 1612 0012 00       		.byte	0
 1613 0013 02       		.uleb128 0x2
 1614 0014 24       		.uleb128 0x24
 1615 0015 00       		.byte	0
 1616 0016 0B       		.uleb128 0xb
 1617 0017 0B       		.uleb128 0xb
 1618 0018 3E       		.uleb128 0x3e
 1619 0019 0B       		.uleb128 0xb
 1620 001a 03       		.uleb128 0x3
 1621 001b 0E       		.uleb128 0xe
 1622 001c 00       		.byte	0
 1623 001d 00       		.byte	0
 1624 001e 03       		.uleb128 0x3
 1625 001f 24       		.uleb128 0x24
 1626 0020 00       		.byte	0
 1627 0021 0B       		.uleb128 0xb
 1628 0022 0B       		.uleb128 0xb
 1629 0023 3E       		.uleb128 0x3e
 1630 0024 0B       		.uleb128 0xb
 1631 0025 03       		.uleb128 0x3
 1632 0026 08       		.uleb128 0x8
 1633 0027 00       		.byte	0
 1634 0028 00       		.byte	0
 1635 0029 04       		.uleb128 0x4
 1636 002a 16       		.uleb128 0x16
 1637 002b 00       		.byte	0
 1638 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 50


 1639 002d 0E       		.uleb128 0xe
 1640 002e 3A       		.uleb128 0x3a
 1641 002f 0B       		.uleb128 0xb
 1642 0030 3B       		.uleb128 0x3b
 1643 0031 0B       		.uleb128 0xb
 1644 0032 49       		.uleb128 0x49
 1645 0033 13       		.uleb128 0x13
 1646 0034 00       		.byte	0
 1647 0035 00       		.byte	0
 1648 0036 05       		.uleb128 0x5
 1649 0037 16       		.uleb128 0x16
 1650 0038 00       		.byte	0
 1651 0039 03       		.uleb128 0x3
 1652 003a 0E       		.uleb128 0xe
 1653 003b 3A       		.uleb128 0x3a
 1654 003c 0B       		.uleb128 0xb
 1655 003d 3B       		.uleb128 0x3b
 1656 003e 05       		.uleb128 0x5
 1657 003f 49       		.uleb128 0x49
 1658 0040 13       		.uleb128 0x13
 1659 0041 00       		.byte	0
 1660 0042 00       		.byte	0
 1661 0043 06       		.uleb128 0x6
 1662 0044 35       		.uleb128 0x35
 1663 0045 00       		.byte	0
 1664 0046 49       		.uleb128 0x49
 1665 0047 13       		.uleb128 0x13
 1666 0048 00       		.byte	0
 1667 0049 00       		.byte	0
 1668 004a 07       		.uleb128 0x7
 1669 004b 2E       		.uleb128 0x2e
 1670 004c 00       		.byte	0
 1671 004d 3F       		.uleb128 0x3f
 1672 004e 19       		.uleb128 0x19
 1673 004f 03       		.uleb128 0x3
 1674 0050 0E       		.uleb128 0xe
 1675 0051 3A       		.uleb128 0x3a
 1676 0052 0B       		.uleb128 0xb
 1677 0053 3B       		.uleb128 0x3b
 1678 0054 0B       		.uleb128 0xb
 1679 0055 27       		.uleb128 0x27
 1680 0056 19       		.uleb128 0x19
 1681 0057 11       		.uleb128 0x11
 1682 0058 01       		.uleb128 0x1
 1683 0059 12       		.uleb128 0x12
 1684 005a 06       		.uleb128 0x6
 1685 005b 40       		.uleb128 0x40
 1686 005c 18       		.uleb128 0x18
 1687 005d 9642     		.uleb128 0x2116
 1688 005f 19       		.uleb128 0x19
 1689 0060 00       		.byte	0
 1690 0061 00       		.byte	0
 1691 0062 08       		.uleb128 0x8
 1692 0063 2E       		.uleb128 0x2e
 1693 0064 01       		.byte	0x1
 1694 0065 3F       		.uleb128 0x3f
 1695 0066 19       		.uleb128 0x19
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 51


 1696 0067 03       		.uleb128 0x3
 1697 0068 0E       		.uleb128 0xe
 1698 0069 3A       		.uleb128 0x3a
 1699 006a 0B       		.uleb128 0xb
 1700 006b 3B       		.uleb128 0x3b
 1701 006c 0B       		.uleb128 0xb
 1702 006d 27       		.uleb128 0x27
 1703 006e 19       		.uleb128 0x19
 1704 006f 11       		.uleb128 0x11
 1705 0070 01       		.uleb128 0x1
 1706 0071 12       		.uleb128 0x12
 1707 0072 06       		.uleb128 0x6
 1708 0073 40       		.uleb128 0x40
 1709 0074 18       		.uleb128 0x18
 1710 0075 9642     		.uleb128 0x2116
 1711 0077 19       		.uleb128 0x19
 1712 0078 01       		.uleb128 0x1
 1713 0079 13       		.uleb128 0x13
 1714 007a 00       		.byte	0
 1715 007b 00       		.byte	0
 1716 007c 09       		.uleb128 0x9
 1717 007d 34       		.uleb128 0x34
 1718 007e 00       		.byte	0
 1719 007f 03       		.uleb128 0x3
 1720 0080 0E       		.uleb128 0xe
 1721 0081 3A       		.uleb128 0x3a
 1722 0082 0B       		.uleb128 0xb
 1723 0083 3B       		.uleb128 0x3b
 1724 0084 0B       		.uleb128 0xb
 1725 0085 49       		.uleb128 0x49
 1726 0086 13       		.uleb128 0x13
 1727 0087 02       		.uleb128 0x2
 1728 0088 18       		.uleb128 0x18
 1729 0089 00       		.byte	0
 1730 008a 00       		.byte	0
 1731 008b 0A       		.uleb128 0xa
 1732 008c 2E       		.uleb128 0x2e
 1733 008d 00       		.byte	0
 1734 008e 3F       		.uleb128 0x3f
 1735 008f 19       		.uleb128 0x19
 1736 0090 03       		.uleb128 0x3
 1737 0091 0E       		.uleb128 0xe
 1738 0092 3A       		.uleb128 0x3a
 1739 0093 0B       		.uleb128 0xb
 1740 0094 3B       		.uleb128 0x3b
 1741 0095 0B       		.uleb128 0xb
 1742 0096 27       		.uleb128 0x27
 1743 0097 19       		.uleb128 0x19
 1744 0098 11       		.uleb128 0x11
 1745 0099 01       		.uleb128 0x1
 1746 009a 12       		.uleb128 0x12
 1747 009b 06       		.uleb128 0x6
 1748 009c 40       		.uleb128 0x40
 1749 009d 18       		.uleb128 0x18
 1750 009e 9742     		.uleb128 0x2117
 1751 00a0 19       		.uleb128 0x19
 1752 00a1 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 52


 1753 00a2 00       		.byte	0
 1754 00a3 0B       		.uleb128 0xb
 1755 00a4 2E       		.uleb128 0x2e
 1756 00a5 00       		.byte	0
 1757 00a6 3F       		.uleb128 0x3f
 1758 00a7 19       		.uleb128 0x19
 1759 00a8 03       		.uleb128 0x3
 1760 00a9 0E       		.uleb128 0xe
 1761 00aa 3A       		.uleb128 0x3a
 1762 00ab 0B       		.uleb128 0xb
 1763 00ac 3B       		.uleb128 0x3b
 1764 00ad 05       		.uleb128 0x5
 1765 00ae 27       		.uleb128 0x27
 1766 00af 19       		.uleb128 0x19
 1767 00b0 11       		.uleb128 0x11
 1768 00b1 01       		.uleb128 0x1
 1769 00b2 12       		.uleb128 0x12
 1770 00b3 06       		.uleb128 0x6
 1771 00b4 40       		.uleb128 0x40
 1772 00b5 18       		.uleb128 0x18
 1773 00b6 9742     		.uleb128 0x2117
 1774 00b8 19       		.uleb128 0x19
 1775 00b9 00       		.byte	0
 1776 00ba 00       		.byte	0
 1777 00bb 0C       		.uleb128 0xc
 1778 00bc 2E       		.uleb128 0x2e
 1779 00bd 01       		.byte	0x1
 1780 00be 3F       		.uleb128 0x3f
 1781 00bf 19       		.uleb128 0x19
 1782 00c0 03       		.uleb128 0x3
 1783 00c1 0E       		.uleb128 0xe
 1784 00c2 3A       		.uleb128 0x3a
 1785 00c3 0B       		.uleb128 0xb
 1786 00c4 3B       		.uleb128 0x3b
 1787 00c5 05       		.uleb128 0x5
 1788 00c6 27       		.uleb128 0x27
 1789 00c7 19       		.uleb128 0x19
 1790 00c8 11       		.uleb128 0x11
 1791 00c9 01       		.uleb128 0x1
 1792 00ca 12       		.uleb128 0x12
 1793 00cb 06       		.uleb128 0x6
 1794 00cc 40       		.uleb128 0x40
 1795 00cd 18       		.uleb128 0x18
 1796 00ce 9742     		.uleb128 0x2117
 1797 00d0 19       		.uleb128 0x19
 1798 00d1 01       		.uleb128 0x1
 1799 00d2 13       		.uleb128 0x13
 1800 00d3 00       		.byte	0
 1801 00d4 00       		.byte	0
 1802 00d5 0D       		.uleb128 0xd
 1803 00d6 05       		.uleb128 0x5
 1804 00d7 00       		.byte	0
 1805 00d8 03       		.uleb128 0x3
 1806 00d9 0E       		.uleb128 0xe
 1807 00da 3A       		.uleb128 0x3a
 1808 00db 0B       		.uleb128 0xb
 1809 00dc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 53


 1810 00dd 05       		.uleb128 0x5
 1811 00de 49       		.uleb128 0x49
 1812 00df 13       		.uleb128 0x13
 1813 00e0 02       		.uleb128 0x2
 1814 00e1 18       		.uleb128 0x18
 1815 00e2 00       		.byte	0
 1816 00e3 00       		.byte	0
 1817 00e4 0E       		.uleb128 0xe
 1818 00e5 2E       		.uleb128 0x2e
 1819 00e6 01       		.byte	0x1
 1820 00e7 3F       		.uleb128 0x3f
 1821 00e8 19       		.uleb128 0x19
 1822 00e9 03       		.uleb128 0x3
 1823 00ea 0E       		.uleb128 0xe
 1824 00eb 3A       		.uleb128 0x3a
 1825 00ec 0B       		.uleb128 0xb
 1826 00ed 3B       		.uleb128 0x3b
 1827 00ee 05       		.uleb128 0x5
 1828 00ef 27       		.uleb128 0x27
 1829 00f0 19       		.uleb128 0x19
 1830 00f1 49       		.uleb128 0x49
 1831 00f2 13       		.uleb128 0x13
 1832 00f3 11       		.uleb128 0x11
 1833 00f4 01       		.uleb128 0x1
 1834 00f5 12       		.uleb128 0x12
 1835 00f6 06       		.uleb128 0x6
 1836 00f7 40       		.uleb128 0x40
 1837 00f8 18       		.uleb128 0x18
 1838 00f9 9742     		.uleb128 0x2117
 1839 00fb 19       		.uleb128 0x19
 1840 00fc 01       		.uleb128 0x1
 1841 00fd 13       		.uleb128 0x13
 1842 00fe 00       		.byte	0
 1843 00ff 00       		.byte	0
 1844 0100 0F       		.uleb128 0xf
 1845 0101 34       		.uleb128 0x34
 1846 0102 00       		.byte	0
 1847 0103 03       		.uleb128 0x3
 1848 0104 0E       		.uleb128 0xe
 1849 0105 3A       		.uleb128 0x3a
 1850 0106 0B       		.uleb128 0xb
 1851 0107 3B       		.uleb128 0x3b
 1852 0108 05       		.uleb128 0x5
 1853 0109 49       		.uleb128 0x49
 1854 010a 13       		.uleb128 0x13
 1855 010b 02       		.uleb128 0x2
 1856 010c 18       		.uleb128 0x18
 1857 010d 00       		.byte	0
 1858 010e 00       		.byte	0
 1859 010f 10       		.uleb128 0x10
 1860 0110 2E       		.uleb128 0x2e
 1861 0111 01       		.byte	0x1
 1862 0112 3F       		.uleb128 0x3f
 1863 0113 19       		.uleb128 0x19
 1864 0114 03       		.uleb128 0x3
 1865 0115 0E       		.uleb128 0xe
 1866 0116 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 54


 1867 0117 0B       		.uleb128 0xb
 1868 0118 3B       		.uleb128 0x3b
 1869 0119 05       		.uleb128 0x5
 1870 011a 27       		.uleb128 0x27
 1871 011b 19       		.uleb128 0x19
 1872 011c 11       		.uleb128 0x11
 1873 011d 01       		.uleb128 0x1
 1874 011e 12       		.uleb128 0x12
 1875 011f 06       		.uleb128 0x6
 1876 0120 40       		.uleb128 0x40
 1877 0121 18       		.uleb128 0x18
 1878 0122 9642     		.uleb128 0x2116
 1879 0124 19       		.uleb128 0x19
 1880 0125 01       		.uleb128 0x1
 1881 0126 13       		.uleb128 0x13
 1882 0127 00       		.byte	0
 1883 0128 00       		.byte	0
 1884 0129 11       		.uleb128 0x11
 1885 012a 0F       		.uleb128 0xf
 1886 012b 00       		.byte	0
 1887 012c 0B       		.uleb128 0xb
 1888 012d 0B       		.uleb128 0xb
 1889 012e 49       		.uleb128 0x49
 1890 012f 13       		.uleb128 0x13
 1891 0130 00       		.byte	0
 1892 0131 00       		.byte	0
 1893 0132 12       		.uleb128 0x12
 1894 0133 26       		.uleb128 0x26
 1895 0134 00       		.byte	0
 1896 0135 49       		.uleb128 0x49
 1897 0136 13       		.uleb128 0x13
 1898 0137 00       		.byte	0
 1899 0138 00       		.byte	0
 1900 0139 13       		.uleb128 0x13
 1901 013a 2E       		.uleb128 0x2e
 1902 013b 00       		.byte	0
 1903 013c 3F       		.uleb128 0x3f
 1904 013d 19       		.uleb128 0x19
 1905 013e 03       		.uleb128 0x3
 1906 013f 0E       		.uleb128 0xe
 1907 0140 3A       		.uleb128 0x3a
 1908 0141 0B       		.uleb128 0xb
 1909 0142 3B       		.uleb128 0x3b
 1910 0143 05       		.uleb128 0x5
 1911 0144 27       		.uleb128 0x27
 1912 0145 19       		.uleb128 0x19
 1913 0146 11       		.uleb128 0x11
 1914 0147 01       		.uleb128 0x1
 1915 0148 12       		.uleb128 0x12
 1916 0149 06       		.uleb128 0x6
 1917 014a 40       		.uleb128 0x40
 1918 014b 18       		.uleb128 0x18
 1919 014c 9642     		.uleb128 0x2116
 1920 014e 19       		.uleb128 0x19
 1921 014f 00       		.byte	0
 1922 0150 00       		.byte	0
 1923 0151 14       		.uleb128 0x14
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 55


 1924 0152 34       		.uleb128 0x34
 1925 0153 00       		.byte	0
 1926 0154 03       		.uleb128 0x3
 1927 0155 0E       		.uleb128 0xe
 1928 0156 3A       		.uleb128 0x3a
 1929 0157 0B       		.uleb128 0xb
 1930 0158 3B       		.uleb128 0x3b
 1931 0159 0B       		.uleb128 0xb
 1932 015a 49       		.uleb128 0x49
 1933 015b 13       		.uleb128 0x13
 1934 015c 3F       		.uleb128 0x3f
 1935 015d 19       		.uleb128 0x19
 1936 015e 02       		.uleb128 0x2
 1937 015f 18       		.uleb128 0x18
 1938 0160 00       		.byte	0
 1939 0161 00       		.byte	0
 1940 0162 00       		.byte	0
 1941              		.section	.debug_aranges,"",%progbits
 1942 0000 D4000000 		.4byte	0xd4
 1943 0004 0200     		.2byte	0x2
 1944 0006 00000000 		.4byte	.Ldebug_info0
 1945 000a 04       		.byte	0x4
 1946 000b 00       		.byte	0
 1947 000c 0000     		.2byte	0
 1948 000e 0000     		.2byte	0
 1949 0010 00000000 		.4byte	.LFB0
 1950 0014 34000000 		.4byte	.LFE0-.LFB0
 1951 0018 00000000 		.4byte	.LFB1
 1952 001c 68000000 		.4byte	.LFE1-.LFB1
 1953 0020 00000000 		.4byte	.LFB2
 1954 0024 24000000 		.4byte	.LFE2-.LFB2
 1955 0028 00000000 		.4byte	.LFB3
 1956 002c 54000000 		.4byte	.LFE3-.LFB3
 1957 0030 00000000 		.4byte	.LFB4
 1958 0034 08000000 		.4byte	.LFE4-.LFB4
 1959 0038 00000000 		.4byte	.LFB5
 1960 003c 08000000 		.4byte	.LFE5-.LFB5
 1961 0040 00000000 		.4byte	.LFB6
 1962 0044 08000000 		.4byte	.LFE6-.LFB6
 1963 0048 00000000 		.4byte	.LFB7
 1964 004c 08000000 		.4byte	.LFE7-.LFB7
 1965 0050 00000000 		.4byte	.LFB8
 1966 0054 20000000 		.4byte	.LFE8-.LFB8
 1967 0058 00000000 		.4byte	.LFB9
 1968 005c 20000000 		.4byte	.LFE9-.LFB9
 1969 0060 00000000 		.4byte	.LFB10
 1970 0064 20000000 		.4byte	.LFE10-.LFB10
 1971 0068 00000000 		.4byte	.LFB11
 1972 006c 20000000 		.4byte	.LFE11-.LFB11
 1973 0070 00000000 		.4byte	.LFB12
 1974 0074 34000000 		.4byte	.LFE12-.LFB12
 1975 0078 00000000 		.4byte	.LFB13
 1976 007c 20000000 		.4byte	.LFE13-.LFB13
 1977 0080 00000000 		.4byte	.LFB14
 1978 0084 30000000 		.4byte	.LFE14-.LFB14
 1979 0088 00000000 		.4byte	.LFB15
 1980 008c 48000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 56


 1981 0090 00000000 		.4byte	.LFB16
 1982 0094 24000000 		.4byte	.LFE16-.LFB16
 1983 0098 00000000 		.4byte	.LFB17
 1984 009c 44000000 		.4byte	.LFE17-.LFB17
 1985 00a0 00000000 		.4byte	.LFB18
 1986 00a4 50000000 		.4byte	.LFE18-.LFB18
 1987 00a8 00000000 		.4byte	.LFB19
 1988 00ac 60000000 		.4byte	.LFE19-.LFB19
 1989 00b0 00000000 		.4byte	.LFB20
 1990 00b4 10000000 		.4byte	.LFE20-.LFB20
 1991 00b8 00000000 		.4byte	.LFB21
 1992 00bc 10000000 		.4byte	.LFE21-.LFB21
 1993 00c0 00000000 		.4byte	.LFB22
 1994 00c4 30000000 		.4byte	.LFE22-.LFB22
 1995 00c8 00000000 		.4byte	.LFB23
 1996 00cc 40000000 		.4byte	.LFE23-.LFB23
 1997 00d0 00000000 		.4byte	0
 1998 00d4 00000000 		.4byte	0
 1999              		.section	.debug_ranges,"",%progbits
 2000              	.Ldebug_ranges0:
 2001 0000 00000000 		.4byte	.LFB0
 2002 0004 34000000 		.4byte	.LFE0
 2003 0008 00000000 		.4byte	.LFB1
 2004 000c 68000000 		.4byte	.LFE1
 2005 0010 00000000 		.4byte	.LFB2
 2006 0014 24000000 		.4byte	.LFE2
 2007 0018 00000000 		.4byte	.LFB3
 2008 001c 54000000 		.4byte	.LFE3
 2009 0020 00000000 		.4byte	.LFB4
 2010 0024 08000000 		.4byte	.LFE4
 2011 0028 00000000 		.4byte	.LFB5
 2012 002c 08000000 		.4byte	.LFE5
 2013 0030 00000000 		.4byte	.LFB6
 2014 0034 08000000 		.4byte	.LFE6
 2015 0038 00000000 		.4byte	.LFB7
 2016 003c 08000000 		.4byte	.LFE7
 2017 0040 00000000 		.4byte	.LFB8
 2018 0044 20000000 		.4byte	.LFE8
 2019 0048 00000000 		.4byte	.LFB9
 2020 004c 20000000 		.4byte	.LFE9
 2021 0050 00000000 		.4byte	.LFB10
 2022 0054 20000000 		.4byte	.LFE10
 2023 0058 00000000 		.4byte	.LFB11
 2024 005c 20000000 		.4byte	.LFE11
 2025 0060 00000000 		.4byte	.LFB12
 2026 0064 34000000 		.4byte	.LFE12
 2027 0068 00000000 		.4byte	.LFB13
 2028 006c 20000000 		.4byte	.LFE13
 2029 0070 00000000 		.4byte	.LFB14
 2030 0074 30000000 		.4byte	.LFE14
 2031 0078 00000000 		.4byte	.LFB15
 2032 007c 48000000 		.4byte	.LFE15
 2033 0080 00000000 		.4byte	.LFB16
 2034 0084 24000000 		.4byte	.LFE16
 2035 0088 00000000 		.4byte	.LFB17
 2036 008c 44000000 		.4byte	.LFE17
 2037 0090 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 57


 2038 0094 50000000 		.4byte	.LFE18
 2039 0098 00000000 		.4byte	.LFB19
 2040 009c 60000000 		.4byte	.LFE19
 2041 00a0 00000000 		.4byte	.LFB20
 2042 00a4 10000000 		.4byte	.LFE20
 2043 00a8 00000000 		.4byte	.LFB21
 2044 00ac 10000000 		.4byte	.LFE21
 2045 00b0 00000000 		.4byte	.LFB22
 2046 00b4 30000000 		.4byte	.LFE22
 2047 00b8 00000000 		.4byte	.LFB23
 2048 00bc 40000000 		.4byte	.LFE23
 2049 00c0 00000000 		.4byte	0
 2050 00c4 00000000 		.4byte	0
 2051              		.section	.debug_line,"",%progbits
 2052              	.Ldebug_line0:
 2053 0000 6C020000 		.section	.debug_str,"MS",%progbits,1
 2053      02004300 
 2053      00000201 
 2053      FB0E0D00 
 2053      01010101 
 2054              	.LASF30:
 2055 0000 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2055      5F577269 
 2055      74655478 
 2055      44617461 
 2055      00
 2056              	.LASF17:
 2057 0011 5350494D 		.ascii	"SPIM_Enable\000"
 2057      5F456E61 
 2057      626C6500 
 2058              	.LASF18:
 2059 001d 5350494D 		.ascii	"SPIM_Stop\000"
 2059      5F53746F 
 2059      7000
 2060              	.LASF31:
 2061 0027 74784461 		.ascii	"txData\000"
 2061      746100
 2062              	.LASF3:
 2063 002e 73686F72 		.ascii	"short unsigned int\000"
 2063      7420756E 
 2063      7369676E 
 2063      65642069 
 2063      6E7400
 2064              	.LASF11:
 2065 0041 63686172 		.ascii	"char\000"
 2065      00
 2066              	.LASF53:
 2067 0046 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\BYU-MarsRover"
 2067      73657273 
 2067      5C53616D 
 2067      75656C5C 
 2067      446F6375 
 2068 0074 5C41726D 		.ascii	"\\Arm\\arm_controller_v2\\arm_controller_v2.cydsn\000"
 2068      5C61726D 
 2068      5F636F6E 
 2068      74726F6C 
 2068      6C65725F 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 58


 2069              	.LASF46:
 2070 00a3 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2070      5F536574 
 2070      496E7465 
 2070      72727570 
 2070      744D6F64 
 2071              	.LASF48:
 2072 00b9 5350494D 		.ascii	"SPIM_initVar\000"
 2072      5F696E69 
 2072      74566172 
 2072      00
 2073              	.LASF33:
 2074 00c6 72784461 		.ascii	"rxData\000"
 2074      746100
 2075              	.LASF45:
 2076 00cd 5350494D 		.ascii	"SPIM_DisableInt\000"
 2076      5F446973 
 2076      61626C65 
 2076      496E7400 
 2077              	.LASF9:
 2078 00dd 666C6F61 		.ascii	"float\000"
 2078      7400
 2079              	.LASF51:
 2080 00e3 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2080      4320342E 
 2080      382E3420 
 2080      32303134 
 2080      30353236 
 2081 0116 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2081      20726576 
 2081      6973696F 
 2081      6E203231 
 2081      31333538 
 2082 0149 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 2082      74643D67 
 2082      6E753939 
 2082      202D6666 
 2082      756E6374 
 2083              	.LASF37:
 2084 016a 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2084      5F436C65 
 2084      61725278 
 2084      42756666 
 2084      657200
 2085              	.LASF35:
 2086 017d 73697A65 		.ascii	"size\000"
 2086      00
 2087              	.LASF36:
 2088 0182 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2088      5F476574 
 2088      54784275 
 2088      66666572 
 2088      53697A65 
 2089              	.LASF13:
 2090 0197 72656738 		.ascii	"reg8\000"
 2090      00
 2091              	.LASF20:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 59


 2092 019c 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2092      5F456E61 
 2092      626C6554 
 2092      78496E74 
 2092      00
 2093              	.LASF5:
 2094 01ad 6C6F6E67 		.ascii	"long unsigned int\000"
 2094      20756E73 
 2094      69676E65 
 2094      6420696E 
 2094      7400
 2095              	.LASF12:
 2096 01bf 75696E74 		.ascii	"uint8\000"
 2096      3800
 2097              	.LASF39:
 2098 01c5 5350494D 		.ascii	"SPIM_PutArray\000"
 2098      5F507574 
 2098      41727261 
 2098      7900
 2099              	.LASF19:
 2100 01d3 656E6162 		.ascii	"enableInterrupts\000"
 2100      6C65496E 
 2100      74657272 
 2100      75707473 
 2100      00
 2101              	.LASF32:
 2102 01e4 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2102      5F526561 
 2102      64527844 
 2102      61746100 
 2103              	.LASF1:
 2104 01f4 756E7369 		.ascii	"unsigned char\000"
 2104      676E6564 
 2104      20636861 
 2104      7200
 2105              	.LASF22:
 2106 0202 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2106      5F446973 
 2106      61626C65 
 2106      5478496E 
 2106      7400
 2107              	.LASF10:
 2108 0214 646F7562 		.ascii	"double\000"
 2108      6C6500
 2109              	.LASF26:
 2110 021b 696E7453 		.ascii	"intSrc\000"
 2110      726300
 2111              	.LASF50:
 2112 0222 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2112      5F737753 
 2112      74617475 
 2112      73527800 
 2113              	.LASF34:
 2114 0232 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2114      5F476574 
 2114      52784275 
 2114      66666572 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 60


 2114      53697A65 
 2115              	.LASF24:
 2116 0247 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2116      5F536574 
 2116      5478496E 
 2116      74657272 
 2116      7570744D 
 2117              	.LASF25:
 2118 025f 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2118      5F536574 
 2118      5278496E 
 2118      74657272 
 2118      7570744D 
 2119              	.LASF8:
 2120 0277 756E7369 		.ascii	"unsigned int\000"
 2120      676E6564 
 2120      20696E74 
 2120      00
 2121              	.LASF7:
 2122 0284 6C6F6E67 		.ascii	"long long unsigned int\000"
 2122      206C6F6E 
 2122      6720756E 
 2122      7369676E 
 2122      65642069 
 2123              	.LASF41:
 2124 029b 62797465 		.ascii	"byteCount\000"
 2124      436F756E 
 2124      7400
 2125              	.LASF29:
 2126 02a5 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2126      5F526561 
 2126      64527853 
 2126      74617475 
 2126      7300
 2127              	.LASF42:
 2128 02b7 62756649 		.ascii	"bufIndex\000"
 2128      6E646578 
 2128      00
 2129              	.LASF44:
 2130 02c0 5350494D 		.ascii	"SPIM_EnableInt\000"
 2130      5F456E61 
 2130      626C6549 
 2130      6E7400
 2131              	.LASF14:
 2132 02cf 73697A65 		.ascii	"sizetype\000"
 2132      74797065 
 2132      00
 2133              	.LASF6:
 2134 02d8 6C6F6E67 		.ascii	"long long int\000"
 2134      206C6F6E 
 2134      6720696E 
 2134      7400
 2135              	.LASF15:
 2136 02e6 5350494D 		.ascii	"SPIM_Init\000"
 2136      5F496E69 
 2136      7400
 2137              	.LASF43:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 61


 2138 02f0 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2138      5F436C65 
 2138      61724649 
 2138      464F00
 2139              	.LASF2:
 2140 02ff 73686F72 		.ascii	"short int\000"
 2140      7420696E 
 2140      7400
 2141              	.LASF38:
 2142 0309 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2142      5F436C65 
 2142      61725478 
 2142      42756666 
 2142      657200
 2143              	.LASF40:
 2144 031c 62756666 		.ascii	"buffer\000"
 2144      657200
 2145              	.LASF47:
 2146 0323 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2146      5F526561 
 2146      64537461 
 2146      74757300 
 2147              	.LASF49:
 2148 0333 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2148      5F737753 
 2148      74617475 
 2148      73547800 
 2149              	.LASF52:
 2150 0343 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SPIM.c\000"
 2150      6E657261 
 2150      7465645F 
 2150      536F7572 
 2150      63655C50 
 2151              	.LASF21:
 2152 0363 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2152      5F456E61 
 2152      626C6552 
 2152      78496E74 
 2152      00
 2153              	.LASF4:
 2154 0374 6C6F6E67 		.ascii	"long int\000"
 2154      20696E74 
 2154      00
 2155              	.LASF27:
 2156 037d 746D7053 		.ascii	"tmpStatus\000"
 2156      74617475 
 2156      7300
 2157              	.LASF0:
 2158 0387 7369676E 		.ascii	"signed char\000"
 2158      65642063 
 2158      68617200 
 2159              	.LASF16:
 2160 0393 5350494D 		.ascii	"SPIM_Start\000"
 2160      5F537461 
 2160      727400
 2161              	.LASF28:
 2162 039e 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccwQdFF8.s 			page 62


 2162      5F526561 
 2162      64547853 
 2162      74617475 
 2162      7300
 2163              	.LASF23:
 2164 03b0 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2164      5F446973 
 2164      61626C65 
 2164      5278496E 
 2164      7400
 2165              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
