ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EFFECTOR_PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	EFFECTOR_PWM_initVar
  18              		.bss
  19              		.type	EFFECTOR_PWM_initVar, %object
  20              		.size	EFFECTOR_PWM_initVar, 1
  21              	EFFECTOR_PWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.EFFECTOR_PWM_Start,"ax",%progbits
  24              		.align	2
  25              		.global	EFFECTOR_PWM_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	EFFECTOR_PWM_Start, %function
  29              	EFFECTOR_PWM_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\EFFECTOR_PWM.c"
   1:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * File Name: EFFECTOR_PWM.c
   3:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
   5:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  15:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Note:
  16:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  17:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  24:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #include "EFFECTOR_PWM.h"
  25:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  26:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 2


  27:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #ifdef EFFECTOR_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #error PWM_v3_10 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* EFFECTOR_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  32:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** uint8 EFFECTOR_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  34:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  35:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Start
  37:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  39:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  44:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  46:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  47:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
  48:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  49:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  50:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  EFFECTOR_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  54:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Start(void) 
  56:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     if(EFFECTOR_PWM_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
  60:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	EFFECTOR_PWM_Init
  61:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
  63:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     EFFECTOR_PWM_Enable();
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	EFFECTOR_PWM_Enable
  64:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  65:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	EFFECTOR_PWM_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	EFFECTOR_PWM_Start, .-EFFECTOR_PWM_Start
  65              		.section	.text.EFFECTOR_PWM_Init,"ax",%progbits
  66              		.align	2
  67              		.global	EFFECTOR_PWM_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	EFFECTOR_PWM_Init, %function
  71              	EFFECTOR_PWM_Init:
  72              	.LFB1:
  66:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  67:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  68:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Init
  70:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  72:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  EFFECTOR_PWM_Start().
  76:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  77:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  79:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  80:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
  81:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
  82:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
  83:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Init(void) 
  85:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction || EFFECTOR_PWM_UseControl)
  87:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction || EFFECTOR_PWM_UseControl) */
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 4


  89:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  90:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if(!EFFECTOR_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UseStatus)
  92:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             uint8 EFFECTOR_PWM_interruptState;
  94:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseStatus) */
  95:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (!EFFECTOR_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
  97:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL |= EFFECTOR_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_CONTROL |= EFFECTOR_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 104:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ctrl = EFFECTOR_PWM_CONTROL3 & ((uint8 )(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL3 = ctrl | EFFECTOR_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 107:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 &= ((uint8)(~EFFECTOR_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 |= EFFECTOR_PWM_SYNC;
 110:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 111:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 &= ((uint8)(~EFFECTOR_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_RT1 |= EFFECTOR_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 115:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #elif (EFFECTOR_PWM_UseControl)
 116:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ctrl = EFFECTOR_PWM_CONTROL & ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 224B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL = ctrl | EFFECTOR_PWM_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1E4B     		ldr	r3, .L6
  94 0016 FA1D     		add	r2, r7, #7
  95 0018 1278     		ldrb	r2, [r2]
  96 001a 0A21     		mov	r1, #10
  97 001c 0A43     		orr	r2, r1
  98 001e D2B2     		uxtb	r2, r2
  99 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                    EFFECTOR_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 123:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (!EFFECTOR_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_AUX_CONTROLDP0 |= (EFFECTOR_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else /* (EFFECTOR_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_AUX_CONTROLDP0 |= (EFFECTOR_PWM_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 5


 100              		.loc 1 129 0
 101 0022 1C4B     		ldr	r3, .L6+4
 102 0024 1B4A     		ldr	r2, .L6+4
 103 0026 1278     		ldrb	r2, [r2]
 104 0028 D2B2     		uxtb	r2, r2
 105 002a 0121     		mov	r1, #1
 106 002c 0A43     		orr	r2, r1
 107 002e D2B2     		uxtb	r2, r2
 108 0030 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_AUX_CONTROLDP1 |= (EFFECTOR_PWM_AUX_CTRL_FIFO0_CLR);
 109              		.loc 1 130 0
 110 0032 194B     		ldr	r3, .L6+8
 111 0034 184A     		ldr	r2, .L6+8
 112 0036 1278     		ldrb	r2, [r2]
 113 0038 D2B2     		uxtb	r2, r2
 114 003a 0121     		mov	r1, #1
 115 003c 0A43     		orr	r2, r1
 116 003e D2B2     		uxtb	r2, r2
 117 0040 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 133:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_WriteCounter(EFFECTOR_PWM_INIT_PERIOD_VALUE);
 118              		.loc 1 133 0
 119 0042 164B     		ldr	r3, .L6+12
 120 0044 181C     		mov	r0, r3
 121 0046 FFF7FEFF 		bl	EFFECTOR_PWM_WriteCounter
 134:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (!EFFECTOR_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 136:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     EFFECTOR_PWM_WritePeriod(EFFECTOR_PWM_INIT_PERIOD_VALUE);
 122              		.loc 1 136 0
 123 004a 144B     		ldr	r3, .L6+12
 124 004c 181C     		mov	r0, r3
 125 004e FFF7FEFF 		bl	EFFECTOR_PWM_WritePeriod
 137:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 138:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteCompare(EFFECTOR_PWM_INIT_COMPARE_VALUE1);
 126              		.loc 1 139 0
 127 0052 134B     		ldr	r3, .L6+16
 128 0054 181C     		mov	r0, r3
 129 0056 FFF7FEFF 		bl	EFFECTOR_PWM_WriteCompare
 140:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 141:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteCompare1(EFFECTOR_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteCompare2(EFFECTOR_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 145:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_KillModeMinTime)
 146:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteKillTime(EFFECTOR_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 149:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_WriteDeadTime(EFFECTOR_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 153:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_SetInterruptMode(EFFECTOR_PWM_INIT_INTERRUPTS_MODE);
 130              		.loc 1 154 0
 131 005a 0020     		mov	r0, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 6


 132 005c FFF7FEFF 		bl	EFFECTOR_PWM_SetInterruptMode
 155:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 157:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_ENABLE |= EFFECTOR_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL2 |= EFFECTOR_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #else
 163:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UseStatus)
 164:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 165:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_interruptState = CyEnterCriticalSection();
 133              		.loc 1 167 0
 134 0060 BC1D     		add	r4, r7, #6
 135 0062 FFF7FEFF 		bl	CyEnterCriticalSection
 136 0066 031C     		mov	r3, r0
 137 0068 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_STATUS_AUX_CTRL |= EFFECTOR_PWM_STATUS_ACTL_INT_EN_MASK;
 138              		.loc 1 169 0
 139 006a 0E4B     		ldr	r3, .L6+20
 140 006c 0D4A     		ldr	r2, .L6+20
 141 006e 1278     		ldrb	r2, [r2]
 142 0070 D2B2     		uxtb	r2, r2
 143 0072 1021     		mov	r1, #16
 144 0074 0A43     		orr	r2, r1
 145 0076 D2B2     		uxtb	r2, r2
 146 0078 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 171:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CyExitCriticalSection(EFFECTOR_PWM_interruptState);
 147              		.loc 1 172 0
 148 007a BB1D     		add	r3, r7, #6
 149 007c 1B78     		ldrb	r3, [r3]
 150 007e 181C     		mov	r0, r3
 151 0080 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 174:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Clear the FIFO to enable the EFFECTOR_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_ClearFIFO();
 152              		.loc 1 176 0
 153 0084 FFF7FEFF 		bl	EFFECTOR_PWM_ClearFIFO
 177:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseStatus) */
 178:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 154              		.loc 1 179 0
 155 0088 BD46     		mov	sp, r7
 156 008a 03B0     		add	sp, sp, #12
 157              		@ sp needed
 158 008c 90BD     		pop	{r4, r7, pc}
 159              	.L7:
 160 008e C046     		.align	2
 161              	.L6:
 162 0090 71000F40 		.word	1074724977
 163 0094 92000F40 		.word	1074725010
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 7


 164 0098 93000F40 		.word	1074725011
 165 009c 1F4E0000 		.word	19999
 166 00a0 DC050000 		.word	1500
 167 00a4 91000F40 		.word	1074725009
 168              		.cfi_endproc
 169              	.LFE1:
 170              		.size	EFFECTOR_PWM_Init, .-EFFECTOR_PWM_Init
 171              		.section	.text.EFFECTOR_PWM_Enable,"ax",%progbits
 172              		.align	2
 173              		.global	EFFECTOR_PWM_Enable
 174              		.code	16
 175              		.thumb_func
 176              		.type	EFFECTOR_PWM_Enable, %function
 177              	EFFECTOR_PWM_Enable:
 178              	.LFB2:
 180:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 181:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 182:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Enable
 184:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 186:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 189:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 191:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 192:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 193:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 194:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 195:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 198:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Enable(void) 
 200:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 179              		.loc 1 200 0
 180              		.cfi_startproc
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_ENABLE |= EFFECTOR_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_STBY_ENABLE |= EFFECTOR_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 207:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL |= EFFECTOR_PWM_CTRL_ENABLE;
 187              		.loc 1 209 0
 188 0004 054B     		ldr	r3, .L9
 189 0006 054A     		ldr	r2, .L9
 190 0008 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 8


 191 000a D2B2     		uxtb	r2, r2
 192 000c 8021     		mov	r1, #128
 193 000e 4942     		neg	r1, r1
 194 0010 0A43     		orr	r2, r1
 195 0012 D2B2     		uxtb	r2, r2
 196 0014 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 197              		.loc 1 211 0
 198 0016 BD46     		mov	sp, r7
 199              		@ sp needed
 200 0018 80BD     		pop	{r7, pc}
 201              	.L10:
 202 001a C046     		.align	2
 203              	.L9:
 204 001c 71000F40 		.word	1074724977
 205              		.cfi_endproc
 206              	.LFE2:
 207              		.size	EFFECTOR_PWM_Enable, .-EFFECTOR_PWM_Enable
 208              		.section	.text.EFFECTOR_PWM_Stop,"ax",%progbits
 209              		.align	2
 210              		.global	EFFECTOR_PWM_Stop
 211              		.code	16
 212              		.thumb_func
 213              		.type	EFFECTOR_PWM_Stop, %function
 214              	EFFECTOR_PWM_Stop:
 215              	.LFB3:
 212:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 213:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 214:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_Stop
 216:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 218:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 222:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 224:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 225:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 226:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 227:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 228:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 232:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_Stop(void) 
 234:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 216              		.loc 1 234 0
 217              		.cfi_startproc
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 9


 223              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_CONTROL &= ((uint8)(~EFFECTOR_PWM_CTRL_ENABLE));
 224              		.loc 1 236 0
 225 0004 044B     		ldr	r3, .L12
 226 0006 044A     		ldr	r2, .L12
 227 0008 1278     		ldrb	r2, [r2]
 228 000a D1B2     		uxtb	r1, r2
 229 000c 7F22     		mov	r2, #127
 230 000e 0A40     		and	r2, r1
 231 0010 D2B2     		uxtb	r2, r2
 232 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UseControl || EFFECTOR_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 239:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_ENABLE &= ((uint8)(~EFFECTOR_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         EFFECTOR_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~EFFECTOR_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 233              		.loc 1 244 0
 234 0014 BD46     		mov	sp, r7
 235              		@ sp needed
 236 0016 80BD     		pop	{r7, pc}
 237              	.L13:
 238              		.align	2
 239              	.L12:
 240 0018 71000F40 		.word	1074724977
 241              		.cfi_endproc
 242              	.LFE3:
 243              		.size	EFFECTOR_PWM_Stop, .-EFFECTOR_PWM_Stop
 244              		.section	.text.EFFECTOR_PWM_WriteCounter,"ax",%progbits
 245              		.align	2
 246              		.global	EFFECTOR_PWM_WriteCounter
 247              		.code	16
 248              		.thumb_func
 249              		.type	EFFECTOR_PWM_WriteCounter, %function
 250              	EFFECTOR_PWM_WriteCounter:
 251              	.LFB4:
 245:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 246:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 249:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 250:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Function Name: EFFECTOR_PWM_SetCompareMode
 252:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 254:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 258:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 262:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Return:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 10


 263:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 264:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 265:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         void EFFECTOR_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         {
 268:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 270:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #if(0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMPM
 272:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #else
 273:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 276:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL3 &= ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK)); /*Clear Exist
 277:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 279:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #elif (EFFECTOR_PWM_UseControl)
 280:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 281:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #if(0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMP
 283:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                 EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #else
 285:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode1masked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 288:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #if(0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMP
 290:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #else
 292:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                     uint8 comparemode2masked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 295:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL &= ((uint8)(~(EFFECTOR_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                             EFFECTOR_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 300:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 301:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         }
 304:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* EFFECTOR_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 306:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 308:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 310:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 311:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Function Name: EFFECTOR_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 315:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 318:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 11


 320:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 322:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 324:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 325:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         void EFFECTOR_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         {
 328:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMPMODE1
 330:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                            EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 332:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 uint8 comparemodemasked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 335:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if (EFFECTOR_PWM_UseControl)
 336:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL &= ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE1_MASK)); /*Clear existi
 337:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_UseControl) */
 339:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         }
 340:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* EFFECTOR_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 342:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 344:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 345:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 349:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 352:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 356:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 358:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 359:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 362:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 363:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << EFFECTOR_PWM_CTRL_CMPMODE2_SHI
 365:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                  EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 367:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             uint8 comparemodemasked = comparemode & EFFECTOR_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (0 != EFFECTOR_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 370:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_UseControl)
 371:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_CONTROL &= ((uint8)(~EFFECTOR_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing m
 372:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UseControl) */
 374:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 375:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /*EFFECTOR_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 12


 377:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 379:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 380:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (!EFFECTOR_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 382:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 383:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCounter
 385:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 387:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 393:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 396:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 398:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 399:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 402:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                        
 405:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 252              		.loc 1 405 0
 253              		.cfi_startproc
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 82B0     		sub	sp, sp, #8
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 021C     		mov	r2, r0
 263 0008 BB1D     		add	r3, r7, #6
 264 000a 1A80     		strh	r2, [r3]
 406:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG16(EFFECTOR_PWM_COUNTER_LSB_PTR, counter);
 265              		.loc 1 406 0
 266 000c 034B     		ldr	r3, .L15
 267 000e BA1D     		add	r2, r7, #6
 268 0010 1288     		ldrh	r2, [r2]
 269 0012 1A80     		strh	r2, [r3]
 407:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 270              		.loc 1 407 0
 271 0014 BD46     		mov	sp, r7
 272 0016 02B0     		add	sp, sp, #8
 273              		@ sp needed
 274 0018 80BD     		pop	{r7, pc}
 275              	.L16:
 276 001a C046     		.align	2
 277              	.L15:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 13


 278 001c 04100F40 		.word	1074728964
 279              		.cfi_endproc
 280              	.LFE4:
 281              		.size	EFFECTOR_PWM_WriteCounter, .-EFFECTOR_PWM_WriteCounter
 282              		.section	.text.EFFECTOR_PWM_ReadCounter,"ax",%progbits
 283              		.align	2
 284              		.global	EFFECTOR_PWM_ReadCounter
 285              		.code	16
 286              		.thumb_func
 287              		.type	EFFECTOR_PWM_ReadCounter, %function
 288              	EFFECTOR_PWM_ReadCounter:
 289              	.LFB5:
 408:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 409:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 410:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCounter
 412:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 414:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 418:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 420:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 421:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 424:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 290              		.loc 1 426 0
 291              		.cfi_startproc
 292 0000 80B5     		push	{r7, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****           (void)CY_GET_REG8(EFFECTOR_PWM_COUNTERCAP_LSB_PTR_8BIT);
 298              		.loc 1 430 0
 299 0004 034B     		ldr	r3, .L19
 300 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 432:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_CAPTURE_LSB_PTR));
 301              		.loc 1 433 0
 302 0008 034B     		ldr	r3, .L19+4
 303 000a 1B88     		ldrh	r3, [r3]
 304 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 305              		.loc 1 434 0
 306 000e 181C     		mov	r0, r3
 307 0010 BD46     		mov	sp, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 14


 308              		@ sp needed
 309 0012 80BD     		pop	{r7, pc}
 310              	.L20:
 311              		.align	2
 312              	.L19:
 313 0014 12000F40 		.word	1074724882
 314 0018 A4100F40 		.word	1074729124
 315              		.cfi_endproc
 316              	.LFE5:
 317              		.size	EFFECTOR_PWM_ReadCounter, .-EFFECTOR_PWM_ReadCounter
 318              		.section	.text.EFFECTOR_PWM_ClearFIFO,"ax",%progbits
 319              		.align	2
 320              		.global	EFFECTOR_PWM_ClearFIFO
 321              		.code	16
 322              		.thumb_func
 323              		.type	EFFECTOR_PWM_ClearFIFO, %function
 324              	EFFECTOR_PWM_ClearFIFO:
 325              	.LFB6:
 435:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 436:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if (EFFECTOR_PWM_UseStatus)
 437:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 438:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 439:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Function Name: EFFECTOR_PWM_ClearFIFO
 441:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 443:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 446:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 448:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 449:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *  None
 451:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *
 452:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         void EFFECTOR_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         {
 326              		.loc 1 454 0
 327              		.cfi_startproc
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             while(0u != (EFFECTOR_PWM_ReadStatusRegister() & EFFECTOR_PWM_STATUS_FIFONEMPTY))
 334              		.loc 1 455 0
 335 0004 01E0     		b	.L22
 336              	.L23:
 456:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             {
 457:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 (void)EFFECTOR_PWM_ReadCapture();
 337              		.loc 1 457 0
 338 0006 FFF7FEFF 		bl	EFFECTOR_PWM_ReadCapture
 339              	.L22:
 455:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             while(0u != (EFFECTOR_PWM_ReadStatusRegister() & EFFECTOR_PWM_STATUS_FIFONEMPTY))
 340              		.loc 1 455 0 discriminator 1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 15


 341 000a FFF7FEFF 		bl	EFFECTOR_PWM_ReadStatusRegister
 342 000e 031C     		mov	r3, r0
 343 0010 1A1C     		mov	r2, r3
 344 0012 1023     		mov	r3, #16
 345 0014 1340     		and	r3, r2
 346 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             }
 459:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         }
 347              		.loc 1 459 0
 348 0018 BD46     		mov	sp, r7
 349              		@ sp needed
 350 001a 80BD     		pop	{r7, pc}
 351              		.cfi_endproc
 352              	.LFE6:
 353              		.size	EFFECTOR_PWM_ClearFIFO, .-EFFECTOR_PWM_ClearFIFO
 354              		.section	.text.EFFECTOR_PWM_WritePeriod,"ax",%progbits
 355              		.align	2
 356              		.global	EFFECTOR_PWM_WritePeriod
 357              		.code	16
 358              		.thumb_func
 359              		.type	EFFECTOR_PWM_WritePeriod, %function
 360              	EFFECTOR_PWM_WritePeriod:
 361              	.LFB7:
 460:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 461:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* EFFECTOR_PWM_UseStatus */
 462:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 463:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* !EFFECTOR_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 465:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 466:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_WritePeriod
 468:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 470:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 474:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 478:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 479:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 480:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 481:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** void EFFECTOR_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 362              		.loc 1 483 0
 363              		.cfi_startproc
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 82B0     		sub	sp, sp, #8
 369              		.cfi_def_cfa_offset 16
 370 0004 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 16


 372 0006 021C     		mov	r2, r0
 373 0008 BB1D     		add	r3, r7, #6
 374 000a 1A80     		strh	r2, [r3]
 484:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if(EFFECTOR_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #else
 487:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR, period);
 375              		.loc 1 487 0
 376 000c 034B     		ldr	r3, .L25
 377 000e BA1D     		add	r2, r7, #6
 378 0010 1288     		ldrh	r2, [r2]
 379 0012 1A80     		strh	r2, [r3]
 488:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 380              		.loc 1 489 0
 381 0014 BD46     		mov	sp, r7
 382 0016 02B0     		add	sp, sp, #8
 383              		@ sp needed
 384 0018 80BD     		pop	{r7, pc}
 385              	.L26:
 386 001a C046     		.align	2
 387              	.L25:
 388 001c 84100F40 		.word	1074729092
 389              		.cfi_endproc
 390              	.LFE7:
 391              		.size	EFFECTOR_PWM_WritePeriod, .-EFFECTOR_PWM_WritePeriod
 392              		.section	.text.EFFECTOR_PWM_WriteCompare,"ax",%progbits
 393              		.align	2
 394              		.global	EFFECTOR_PWM_WriteCompare
 395              		.code	16
 396              		.thumb_func
 397              		.type	EFFECTOR_PWM_WriteCompare, %function
 398              	EFFECTOR_PWM_WriteCompare:
 399              	.LFB8:
 490:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 491:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 493:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 494:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCompare
 496:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 498:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 505:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 508:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 510:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 511:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 17


 513:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 515:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                        
 518:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 400              		.loc 1 518 0
 401              		.cfi_startproc
 402 0000 80B5     		push	{r7, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 82B0     		sub	sp, sp, #8
 407              		.cfi_def_cfa_offset 16
 408 0004 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410 0006 021C     		mov	r2, r0
 411 0008 BB1D     		add	r3, r7, #6
 412 000a 1A80     		strh	r2, [r3]
 519:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 522:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, compare);
 413              		.loc 1 522 0
 414 000c 034B     		ldr	r3, .L28
 415 000e BA1D     		add	r2, r7, #6
 416 0010 1288     		ldrh	r2, [r2]
 417 0012 1A80     		strh	r2, [r3]
 523:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 525:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if (EFFECTOR_PWM_PWMMode == EFFECTOR_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 529:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_PWMMode == EFFECTOR_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 418              		.loc 1 532 0
 419 0014 BD46     		mov	sp, r7
 420 0016 02B0     		add	sp, sp, #8
 421              		@ sp needed
 422 0018 80BD     		pop	{r7, pc}
 423              	.L29:
 424 001a C046     		.align	2
 425              	.L28:
 426 001c 44100F40 		.word	1074729028
 427              		.cfi_endproc
 428              	.LFE8:
 429              		.size	EFFECTOR_PWM_WriteCompare, .-EFFECTOR_PWM_WriteCompare
 430              		.section	.text.EFFECTOR_PWM_SetInterruptMode,"ax",%progbits
 431              		.align	2
 432              		.global	EFFECTOR_PWM_SetInterruptMode
 433              		.code	16
 434              		.thumb_func
 435              		.type	EFFECTOR_PWM_SetInterruptMode, %function
 436              	EFFECTOR_PWM_SetInterruptMode:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 18


 437              	.LFB9:
 533:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 534:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 535:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #else
 536:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 537:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 538:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCompare1
 540:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 542:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 548:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 551:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 553:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 554:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                         
 557:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 558:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 561:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 564:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 565:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 566:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteCompare2
 568:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 570:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 577:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 580:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 582:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 583:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                         
 586:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 587:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, compare);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 19


 589:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 590:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 593:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 595:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 597:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 598:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 602:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 605:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 608:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 610:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 611:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 614:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(!EFFECTOR_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             CY_SET_REG8(EFFECTOR_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 618:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             EFFECTOR_PWM_DEADBAND_COUNT &= ((uint8)(~EFFECTOR_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 622:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << EFFECTOR_PWM_DEADBAND_CO
 625:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                     EFFECTOR_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 627:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 EFFECTOR_PWM_DEADBAND_COUNT |= deadtime & EFFECTOR_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 630:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (!EFFECTOR_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 632:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 633:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 634:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 638:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 641:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 643:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 644:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Dead Band Counts
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 20


 646:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 647:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint8 EFFECTOR_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 650:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(!EFFECTOR_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             return (CY_GET_REG8(EFFECTOR_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 654:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 655:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #if(EFFECTOR_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 return ((uint8)(((uint8)(EFFECTOR_PWM_DEADBAND_COUNT & EFFECTOR_PWM_DEADBAND_COUNT_
 658:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                                                                            EFFECTOR_PWM_DEADBAND_CO
 659:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #else
 660:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****                 return (EFFECTOR_PWM_DEADBAND_COUNT & EFFECTOR_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             #endif /* (EFFECTOR_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (!EFFECTOR_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 664:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 666:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 668:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 669:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 673:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 677:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 680:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 682:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 683:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 438              		.loc 1 685 0
 439              		.cfi_startproc
 440 0000 80B5     		push	{r7, lr}
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 82B0     		sub	sp, sp, #8
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 021C     		mov	r2, r0
 449 0008 FB1D     		add	r3, r7, #7
 450 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG8(EFFECTOR_PWM_STATUS_MASK_PTR, interruptMode);
 451              		.loc 1 686 0
 452 000c 034B     		ldr	r3, .L31
 453 000e FA1D     		add	r2, r7, #7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 21


 454 0010 1278     		ldrb	r2, [r2]
 455 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 456              		.loc 1 687 0
 457 0014 BD46     		mov	sp, r7
 458 0016 02B0     		add	sp, sp, #8
 459              		@ sp needed
 460 0018 80BD     		pop	{r7, pc}
 461              	.L32:
 462 001a C046     		.align	2
 463              	.L31:
 464 001c 81000F40 		.word	1074724993
 465              		.cfi_endproc
 466              	.LFE9:
 467              		.size	EFFECTOR_PWM_SetInterruptMode, .-EFFECTOR_PWM_SetInterruptMode
 468              		.section	.text.EFFECTOR_PWM_ReadStatusRegister,"ax",%progbits
 469              		.align	2
 470              		.global	EFFECTOR_PWM_ReadStatusRegister
 471              		.code	16
 472              		.thumb_func
 473              		.type	EFFECTOR_PWM_ReadStatusRegister, %function
 474              	EFFECTOR_PWM_ReadStatusRegister:
 475              	.LFB10:
 688:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 689:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 690:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 694:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 697:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 699:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 700:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 710:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint8 EFFECTOR_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 476              		.loc 1 712 0
 477              		.cfi_startproc
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG8(EFFECTOR_PWM_STATUS_PTR));
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 22


 484              		.loc 1 713 0
 485 0004 024B     		ldr	r3, .L35
 486 0006 1B78     		ldrb	r3, [r3]
 487 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 488              		.loc 1 714 0
 489 000a 181C     		mov	r0, r3
 490 000c BD46     		mov	sp, r7
 491              		@ sp needed
 492 000e 80BD     		pop	{r7, pc}
 493              	.L36:
 494              		.align	2
 495              	.L35:
 496 0010 61000F40 		.word	1074724961
 497              		.cfi_endproc
 498              	.LFE10:
 499              		.size	EFFECTOR_PWM_ReadStatusRegister, .-EFFECTOR_PWM_ReadStatusRegister
 500              		.section	.text.EFFECTOR_PWM_ReadControlRegister,"ax",%progbits
 501              		.align	2
 502              		.global	EFFECTOR_PWM_ReadControlRegister
 503              		.code	16
 504              		.thumb_func
 505              		.type	EFFECTOR_PWM_ReadControlRegister, %function
 506              	EFFECTOR_PWM_ReadControlRegister:
 507              	.LFB11:
 715:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 716:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (EFFECTOR_PWM_UseStatus || EFFECTOR_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 718:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 719:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseControl)
 720:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 721:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 722:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 726:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 730:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 732:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 733:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 736:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint8 EFFECTOR_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 508              		.loc 1 738 0
 509              		.cfi_startproc
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 82B0     		sub	sp, sp, #8
 515              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 23


 516 0004 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 741:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         result = CY_GET_REG8(EFFECTOR_PWM_CONTROL_PTR);
 518              		.loc 1 741 0
 519 0006 054A     		ldr	r2, .L39
 520 0008 FB1D     		add	r3, r7, #7
 521 000a 1278     		ldrb	r2, [r2]
 522 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (result);
 523              		.loc 1 742 0
 524 000e FB1D     		add	r3, r7, #7
 525 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 526              		.loc 1 743 0
 527 0012 181C     		mov	r0, r3
 528 0014 BD46     		mov	sp, r7
 529 0016 02B0     		add	sp, sp, #8
 530              		@ sp needed
 531 0018 80BD     		pop	{r7, pc}
 532              	.L40:
 533 001a C046     		.align	2
 534              	.L39:
 535 001c 71000F40 		.word	1074724977
 536              		.cfi_endproc
 537              	.LFE11:
 538              		.size	EFFECTOR_PWM_ReadControlRegister, .-EFFECTOR_PWM_ReadControlRegister
 539              		.section	.text.EFFECTOR_PWM_WriteControlRegister,"ax",%progbits
 540              		.align	2
 541              		.global	EFFECTOR_PWM_WriteControlRegister
 542              		.code	16
 543              		.thumb_func
 544              		.type	EFFECTOR_PWM_WriteControlRegister, %function
 545              	EFFECTOR_PWM_WriteControlRegister:
 546              	.LFB12:
 744:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 745:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 746:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 750:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 754:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 761:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 763:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 764:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 24


 765:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     void EFFECTOR_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 547              		.loc 1 766 0
 548              		.cfi_startproc
 549 0000 80B5     		push	{r7, lr}
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 82B0     		sub	sp, sp, #8
 554              		.cfi_def_cfa_offset 16
 555 0004 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 557 0006 021C     		mov	r2, r0
 558 0008 FB1D     		add	r3, r7, #7
 559 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         CY_SET_REG8(EFFECTOR_PWM_CONTROL_PTR, control);
 560              		.loc 1 767 0
 561 000c 034B     		ldr	r3, .L42
 562 000e FA1D     		add	r2, r7, #7
 563 0010 1278     		ldrb	r2, [r2]
 564 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 565              		.loc 1 768 0
 566 0014 BD46     		mov	sp, r7
 567 0016 02B0     		add	sp, sp, #8
 568              		@ sp needed
 569 0018 80BD     		pop	{r7, pc}
 570              	.L43:
 571 001a C046     		.align	2
 572              	.L42:
 573 001c 71000F40 		.word	1074724977
 574              		.cfi_endproc
 575              	.LFE12:
 576              		.size	EFFECTOR_PWM_WriteControlRegister, .-EFFECTOR_PWM_WriteControlRegister
 577              		.section	.text.EFFECTOR_PWM_ReadCapture,"ax",%progbits
 578              		.align	2
 579              		.global	EFFECTOR_PWM_ReadCapture
 580              		.code	16
 581              		.thumb_func
 582              		.type	EFFECTOR_PWM_ReadCapture, %function
 583              	EFFECTOR_PWM_ReadCapture:
 584              	.LFB13:
 769:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 770:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (EFFECTOR_PWM_UseControl) */
 771:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 772:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 773:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (!EFFECTOR_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 775:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 776:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCapture
 778:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 780:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 783:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 25


 784:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 785:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 786:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 789:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 585              		.loc 1 791 0
 586              		.cfi_startproc
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_CAPTURE_LSB_PTR));
 593              		.loc 1 792 0
 594 0004 024B     		ldr	r3, .L46
 595 0006 1B88     		ldrh	r3, [r3]
 596 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 597              		.loc 1 793 0
 598 000a 181C     		mov	r0, r3
 599 000c BD46     		mov	sp, r7
 600              		@ sp needed
 601 000e 80BD     		pop	{r7, pc}
 602              	.L47:
 603              		.align	2
 604              	.L46:
 605 0010 A4100F40 		.word	1074729124
 606              		.cfi_endproc
 607              	.LFE13:
 608              		.size	EFFECTOR_PWM_ReadCapture, .-EFFECTOR_PWM_ReadCapture
 609              		.section	.text.EFFECTOR_PWM_ReadCompare,"ax",%progbits
 610              		.align	2
 611              		.global	EFFECTOR_PWM_ReadCompare
 612              		.code	16
 613              		.thumb_func
 614              		.type	EFFECTOR_PWM_ReadCompare, %function
 615              	EFFECTOR_PWM_ReadCompare:
 616              	.LFB14:
 794:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 795:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (!EFFECTOR_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 797:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 798:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #if (EFFECTOR_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 800:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 801:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCompare
 803:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 805:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 26


 809:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 811:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 812:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 815:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 617              		.loc 1 817 0
 618              		.cfi_startproc
 619 0000 80B5     		push	{r7, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #if(EFFECTOR_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             return ((uint16)CY_GET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #else
 821:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****             return (CY_GET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR));
 625              		.loc 1 821 0
 626 0004 024B     		ldr	r3, .L50
 627 0006 1B88     		ldrh	r3, [r3]
 628 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 629              		.loc 1 823 0
 630 000a 181C     		mov	r0, r3
 631 000c BD46     		mov	sp, r7
 632              		@ sp needed
 633 000e 80BD     		pop	{r7, pc}
 634              	.L51:
 635              		.align	2
 636              	.L50:
 637 0010 44100F40 		.word	1074729028
 638              		.cfi_endproc
 639              	.LFE14:
 640              		.size	EFFECTOR_PWM_ReadCompare, .-EFFECTOR_PWM_ReadCompare
 641              		.section	.text.EFFECTOR_PWM_ReadPeriod,"ax",%progbits
 642              		.align	2
 643              		.global	EFFECTOR_PWM_ReadPeriod
 644              		.code	16
 645              		.thumb_func
 646              		.type	EFFECTOR_PWM_ReadPeriod, %function
 647              	EFFECTOR_PWM_ReadPeriod:
 648              	.LFB15:
 824:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 825:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #else
 826:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 827:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 828:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCompare1
 830:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 832:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the compare value for the compare1 output.
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 27


 834:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 835:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 837:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 838:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 841:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 844:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 846:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 847:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 848:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Function Name: EFFECTOR_PWM_ReadCompare2
 850:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 852:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 855:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  None
 857:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 858:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *
 861:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     uint16 EFFECTOR_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     {
 864:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     }
 866:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 867:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** #endif /* (EFFECTOR_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 869:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** 
 870:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Function Name: EFFECTOR_PWM_ReadPeriod
 872:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 874:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 877:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  None
 879:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 880:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** * Return:
 881:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *
 883:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** uint16 EFFECTOR_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** {
 649              		.loc 1 885 0
 650              		.cfi_startproc
 651 0000 80B5     		push	{r7, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 28


 654              		.cfi_offset 14, -4
 655 0002 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #if(EFFECTOR_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return ((uint16)CY_GET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #else
 889:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****         return (CY_GET_REG16(EFFECTOR_PWM_PERIOD_LSB_PTR));
 657              		.loc 1 889 0
 658 0004 024B     		ldr	r3, .L54
 659 0006 1B88     		ldrh	r3, [r3]
 660 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC4/EFFECTOR_PWM.c ****     #endif /* (EFFECTOR_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/EFFECTOR_PWM.c **** }
 661              		.loc 1 891 0
 662 000a 181C     		mov	r0, r3
 663 000c BD46     		mov	sp, r7
 664              		@ sp needed
 665 000e 80BD     		pop	{r7, pc}
 666              	.L55:
 667              		.align	2
 668              	.L54:
 669 0010 84100F40 		.word	1074729092
 670              		.cfi_endproc
 671              	.LFE15:
 672              		.size	EFFECTOR_PWM_ReadPeriod, .-EFFECTOR_PWM_ReadPeriod
 673              		.text
 674              	.Letext0:
 675              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 676              		.section	.debug_info,"",%progbits
 677              	.Ldebug_info0:
 678 0000 9A020000 		.4byte	0x29a
 679 0004 0400     		.2byte	0x4
 680 0006 00000000 		.4byte	.Ldebug_abbrev0
 681 000a 04       		.byte	0x4
 682 000b 01       		.uleb128 0x1
 683 000c A5000000 		.4byte	.LASF40
 684 0010 01       		.byte	0x1
 685 0011 D0020000 		.4byte	.LASF41
 686 0015 4F020000 		.4byte	.LASF42
 687 0019 00000000 		.4byte	.Ldebug_ranges0+0
 688 001d 00000000 		.4byte	0
 689 0021 00000000 		.4byte	.Ldebug_line0
 690 0025 02       		.uleb128 0x2
 691 0026 01       		.byte	0x1
 692 0027 06       		.byte	0x6
 693 0028 6E030000 		.4byte	.LASF0
 694 002c 02       		.uleb128 0x2
 695 002d 01       		.byte	0x1
 696 002e 08       		.byte	0x8
 697 002f 2C010000 		.4byte	.LASF1
 698 0033 02       		.uleb128 0x2
 699 0034 02       		.byte	0x2
 700 0035 05       		.byte	0x5
 701 0036 BC010000 		.4byte	.LASF2
 702 003a 02       		.uleb128 0x2
 703 003b 02       		.byte	0x2
 704 003c 07       		.byte	0x7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 29


 705 003d 5C000000 		.4byte	.LASF3
 706 0041 02       		.uleb128 0x2
 707 0042 04       		.byte	0x4
 708 0043 05       		.byte	0x5
 709 0044 47030000 		.4byte	.LASF4
 710 0048 02       		.uleb128 0x2
 711 0049 04       		.byte	0x4
 712 004a 07       		.byte	0x7
 713 004b 3F010000 		.4byte	.LASF5
 714 004f 02       		.uleb128 0x2
 715 0050 08       		.byte	0x8
 716 0051 05       		.byte	0x5
 717 0052 A0020000 		.4byte	.LASF6
 718 0056 02       		.uleb128 0x2
 719 0057 08       		.byte	0x8
 720 0058 07       		.byte	0x7
 721 0059 23020000 		.4byte	.LASF7
 722 005d 03       		.uleb128 0x3
 723 005e 04       		.byte	0x4
 724 005f 05       		.byte	0x5
 725 0060 696E7400 		.ascii	"int\000"
 726 0064 02       		.uleb128 0x2
 727 0065 04       		.byte	0x4
 728 0066 07       		.byte	0x7
 729 0067 16020000 		.4byte	.LASF8
 730 006b 04       		.uleb128 0x4
 731 006c 51010000 		.4byte	.LASF9
 732 0070 02       		.byte	0x2
 733 0071 A1       		.byte	0xa1
 734 0072 2C000000 		.4byte	0x2c
 735 0076 04       		.uleb128 0x4
 736 0077 C6010000 		.4byte	.LASF10
 737 007b 02       		.byte	0x2
 738 007c A2       		.byte	0xa2
 739 007d 3A000000 		.4byte	0x3a
 740 0081 02       		.uleb128 0x2
 741 0082 04       		.byte	0x4
 742 0083 04       		.byte	0x4
 743 0084 9F000000 		.4byte	.LASF11
 744 0088 02       		.uleb128 0x2
 745 0089 08       		.byte	0x8
 746 008a 04       		.byte	0x4
 747 008b B5010000 		.4byte	.LASF12
 748 008f 02       		.uleb128 0x2
 749 0090 01       		.byte	0x1
 750 0091 08       		.byte	0x8
 751 0092 50030000 		.4byte	.LASF13
 752 0096 05       		.uleb128 0x5
 753 0097 3A010000 		.4byte	.LASF14
 754 009b 02       		.byte	0x2
 755 009c 4B01     		.2byte	0x14b
 756 009e A2000000 		.4byte	0xa2
 757 00a2 06       		.uleb128 0x6
 758 00a3 6B000000 		.4byte	0x6b
 759 00a7 05       		.uleb128 0x5
 760 00a8 00000000 		.4byte	.LASF15
 761 00ac 02       		.byte	0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 30


 762 00ad 4C01     		.2byte	0x14c
 763 00af B3000000 		.4byte	0xb3
 764 00b3 06       		.uleb128 0x6
 765 00b4 76000000 		.4byte	0x76
 766 00b8 02       		.uleb128 0x2
 767 00b9 04       		.byte	0x4
 768 00ba 07       		.byte	0x7
 769 00bb 46020000 		.4byte	.LASF16
 770 00bf 07       		.uleb128 0x7
 771 00c0 F8020000 		.4byte	.LASF19
 772 00c4 01       		.byte	0x1
 773 00c5 37       		.byte	0x37
 774 00c6 00000000 		.4byte	.LFB0
 775 00ca 24000000 		.4byte	.LFE0-.LFB0
 776 00ce 01       		.uleb128 0x1
 777 00cf 9C       		.byte	0x9c
 778 00d0 08       		.uleb128 0x8
 779 00d1 A2030000 		.4byte	.LASF22
 780 00d5 01       		.byte	0x1
 781 00d6 54       		.byte	0x54
 782 00d7 00000000 		.4byte	.LFB1
 783 00db A8000000 		.4byte	.LFE1-.LFB1
 784 00df 01       		.uleb128 0x1
 785 00e0 9C       		.byte	0x9c
 786 00e1 02010000 		.4byte	0x102
 787 00e5 09       		.uleb128 0x9
 788 00e6 41020000 		.4byte	.LASF17
 789 00ea 01       		.byte	0x1
 790 00eb 57       		.byte	0x57
 791 00ec 6B000000 		.4byte	0x6b
 792 00f0 02       		.uleb128 0x2
 793 00f1 91       		.byte	0x91
 794 00f2 6F       		.sleb128 -17
 795 00f3 09       		.uleb128 0x9
 796 00f4 06000000 		.4byte	.LASF18
 797 00f8 01       		.byte	0x1
 798 00f9 5D       		.byte	0x5d
 799 00fa 6B000000 		.4byte	0x6b
 800 00fe 02       		.uleb128 0x2
 801 00ff 91       		.byte	0x91
 802 0100 6E       		.sleb128 -18
 803 0101 00       		.byte	0
 804 0102 0A       		.uleb128 0xa
 805 0103 BC020000 		.4byte	.LASF20
 806 0107 01       		.byte	0x1
 807 0108 C7       		.byte	0xc7
 808 0109 00000000 		.4byte	.LFB2
 809 010d 20000000 		.4byte	.LFE2-.LFB2
 810 0111 01       		.uleb128 0x1
 811 0112 9C       		.byte	0x9c
 812 0113 0A       		.uleb128 0xa
 813 0114 04020000 		.4byte	.LASF21
 814 0118 01       		.byte	0x1
 815 0119 E9       		.byte	0xe9
 816 011a 00000000 		.4byte	.LFB3
 817 011e 1C000000 		.4byte	.LFE3-.LFB3
 818 0122 01       		.uleb128 0x1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 31


 819 0123 9C       		.byte	0x9c
 820 0124 0B       		.uleb128 0xb
 821 0125 22000000 		.4byte	.LASF23
 822 0129 01       		.byte	0x1
 823 012a 9301     		.2byte	0x193
 824 012c 00000000 		.4byte	.LFB4
 825 0130 20000000 		.4byte	.LFE4-.LFB4
 826 0134 01       		.uleb128 0x1
 827 0135 9C       		.byte	0x9c
 828 0136 4A010000 		.4byte	0x14a
 829 013a 0C       		.uleb128 0xc
 830 013b AD010000 		.4byte	.LASF26
 831 013f 01       		.byte	0x1
 832 0140 9301     		.2byte	0x193
 833 0142 76000000 		.4byte	0x76
 834 0146 02       		.uleb128 0x2
 835 0147 91       		.byte	0x91
 836 0148 76       		.sleb128 -10
 837 0149 00       		.byte	0
 838 014a 0D       		.uleb128 0xd
 839 014b 86000000 		.4byte	.LASF32
 840 014f 01       		.byte	0x1
 841 0150 A901     		.2byte	0x1a9
 842 0152 76000000 		.4byte	0x76
 843 0156 00000000 		.4byte	.LFB5
 844 015a 1C000000 		.4byte	.LFE5-.LFB5
 845 015e 01       		.uleb128 0x1
 846 015f 9C       		.byte	0x9c
 847 0160 0E       		.uleb128 0xe
 848 0161 6F000000 		.4byte	.LASF24
 849 0165 01       		.byte	0x1
 850 0166 C501     		.2byte	0x1c5
 851 0168 00000000 		.4byte	.LFB6
 852 016c 1C000000 		.4byte	.LFE6-.LFB6
 853 0170 01       		.uleb128 0x1
 854 0171 9C       		.byte	0x9c
 855 0172 0B       		.uleb128 0xb
 856 0173 EB010000 		.4byte	.LASF25
 857 0177 01       		.byte	0x1
 858 0178 E201     		.2byte	0x1e2
 859 017a 00000000 		.4byte	.LFB7
 860 017e 20000000 		.4byte	.LFE7-.LFB7
 861 0182 01       		.uleb128 0x1
 862 0183 9C       		.byte	0x9c
 863 0184 98010000 		.4byte	0x198
 864 0188 0C       		.uleb128 0xc
 865 0189 55000000 		.4byte	.LASF27
 866 018d 01       		.byte	0x1
 867 018e E201     		.2byte	0x1e2
 868 0190 76000000 		.4byte	0x76
 869 0194 02       		.uleb128 0x2
 870 0195 91       		.byte	0x91
 871 0196 76       		.sleb128 -10
 872 0197 00       		.byte	0
 873 0198 0B       		.uleb128 0xb
 874 0199 0B030000 		.4byte	.LASF28
 875 019d 01       		.byte	0x1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 32


 876 019e 0402     		.2byte	0x204
 877 01a0 00000000 		.4byte	.LFB8
 878 01a4 20000000 		.4byte	.LFE8-.LFB8
 879 01a8 01       		.uleb128 0x1
 880 01a9 9C       		.byte	0x9c
 881 01aa BE010000 		.4byte	0x1be
 882 01ae 0C       		.uleb128 0xc
 883 01af 7A030000 		.4byte	.LASF29
 884 01b3 01       		.byte	0x1
 885 01b4 0402     		.2byte	0x204
 886 01b6 76000000 		.4byte	0x76
 887 01ba 02       		.uleb128 0x2
 888 01bb 91       		.byte	0x91
 889 01bc 76       		.sleb128 -10
 890 01bd 00       		.byte	0
 891 01be 0B       		.uleb128 0xb
 892 01bf CD010000 		.4byte	.LASF30
 893 01c3 01       		.byte	0x1
 894 01c4 AC02     		.2byte	0x2ac
 895 01c6 00000000 		.4byte	.LFB9
 896 01ca 20000000 		.4byte	.LFE9-.LFB9
 897 01ce 01       		.uleb128 0x1
 898 01cf 9C       		.byte	0x9c
 899 01d0 E4010000 		.4byte	0x1e4
 900 01d4 0C       		.uleb128 0xc
 901 01d5 AE020000 		.4byte	.LASF31
 902 01d9 01       		.byte	0x1
 903 01da AC02     		.2byte	0x2ac
 904 01dc 6B000000 		.4byte	0x6b
 905 01e0 02       		.uleb128 0x2
 906 01e1 91       		.byte	0x91
 907 01e2 77       		.sleb128 -9
 908 01e3 00       		.byte	0
 909 01e4 0D       		.uleb128 0xd
 910 01e5 82030000 		.4byte	.LASF33
 911 01e9 01       		.byte	0x1
 912 01ea C702     		.2byte	0x2c7
 913 01ec 6B000000 		.4byte	0x6b
 914 01f0 00000000 		.4byte	.LFB10
 915 01f4 14000000 		.4byte	.LFE10-.LFB10
 916 01f8 01       		.uleb128 0x1
 917 01f9 9C       		.byte	0x9c
 918 01fa 0F       		.uleb128 0xf
 919 01fb 8C010000 		.4byte	.LASF43
 920 01ff 01       		.byte	0x1
 921 0200 E102     		.2byte	0x2e1
 922 0202 6B000000 		.4byte	0x6b
 923 0206 00000000 		.4byte	.LFB11
 924 020a 20000000 		.4byte	.LFE11-.LFB11
 925 020e 01       		.uleb128 0x1
 926 020f 9C       		.byte	0x9c
 927 0210 24020000 		.4byte	0x224
 928 0214 10       		.uleb128 0x10
 929 0215 3A020000 		.4byte	.LASF34
 930 0219 01       		.byte	0x1
 931 021a E302     		.2byte	0x2e3
 932 021c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 33


 933 0220 02       		.uleb128 0x2
 934 0221 91       		.byte	0x91
 935 0222 77       		.sleb128 -9
 936 0223 00       		.byte	0
 937 0224 0B       		.uleb128 0xb
 938 0225 25030000 		.4byte	.LASF35
 939 0229 01       		.byte	0x1
 940 022a FD02     		.2byte	0x2fd
 941 022c 00000000 		.4byte	.LFB12
 942 0230 20000000 		.4byte	.LFE12-.LFB12
 943 0234 01       		.uleb128 0x1
 944 0235 9C       		.byte	0x9c
 945 0236 4A020000 		.4byte	0x24a
 946 023a 0C       		.uleb128 0xc
 947 023b 57010000 		.4byte	.LASF36
 948 023f 01       		.byte	0x1
 949 0240 FD02     		.2byte	0x2fd
 950 0242 6B000000 		.4byte	0x6b
 951 0246 02       		.uleb128 0x2
 952 0247 91       		.byte	0x91
 953 0248 77       		.sleb128 -9
 954 0249 00       		.byte	0
 955 024a 0D       		.uleb128 0xd
 956 024b 3C000000 		.4byte	.LASF37
 957 024f 01       		.byte	0x1
 958 0250 1603     		.2byte	0x316
 959 0252 76000000 		.4byte	0x76
 960 0256 00000000 		.4byte	.LFB13
 961 025a 14000000 		.4byte	.LFE13-.LFB13
 962 025e 01       		.uleb128 0x1
 963 025f 9C       		.byte	0x9c
 964 0260 0D       		.uleb128 0xd
 965 0261 55030000 		.4byte	.LASF38
 966 0265 01       		.byte	0x1
 967 0266 3003     		.2byte	0x330
 968 0268 76000000 		.4byte	0x76
 969 026c 00000000 		.4byte	.LFB14
 970 0270 14000000 		.4byte	.LFE14-.LFB14
 971 0274 01       		.uleb128 0x1
 972 0275 9C       		.byte	0x9c
 973 0276 0D       		.uleb128 0xd
 974 0277 5F010000 		.4byte	.LASF39
 975 027b 01       		.byte	0x1
 976 027c 7403     		.2byte	0x374
 977 027e 76000000 		.4byte	0x76
 978 0282 00000000 		.4byte	.LFB15
 979 0286 14000000 		.4byte	.LFE15-.LFB15
 980 028a 01       		.uleb128 0x1
 981 028b 9C       		.byte	0x9c
 982 028c 11       		.uleb128 0x11
 983 028d 77010000 		.4byte	.LASF44
 984 0291 01       		.byte	0x1
 985 0292 20       		.byte	0x20
 986 0293 6B000000 		.4byte	0x6b
 987 0297 05       		.uleb128 0x5
 988 0298 03       		.byte	0x3
 989 0299 00000000 		.4byte	EFFECTOR_PWM_initVar
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 34


 990 029d 00       		.byte	0
 991              		.section	.debug_abbrev,"",%progbits
 992              	.Ldebug_abbrev0:
 993 0000 01       		.uleb128 0x1
 994 0001 11       		.uleb128 0x11
 995 0002 01       		.byte	0x1
 996 0003 25       		.uleb128 0x25
 997 0004 0E       		.uleb128 0xe
 998 0005 13       		.uleb128 0x13
 999 0006 0B       		.uleb128 0xb
 1000 0007 03       		.uleb128 0x3
 1001 0008 0E       		.uleb128 0xe
 1002 0009 1B       		.uleb128 0x1b
 1003 000a 0E       		.uleb128 0xe
 1004 000b 55       		.uleb128 0x55
 1005 000c 17       		.uleb128 0x17
 1006 000d 11       		.uleb128 0x11
 1007 000e 01       		.uleb128 0x1
 1008 000f 10       		.uleb128 0x10
 1009 0010 17       		.uleb128 0x17
 1010 0011 00       		.byte	0
 1011 0012 00       		.byte	0
 1012 0013 02       		.uleb128 0x2
 1013 0014 24       		.uleb128 0x24
 1014 0015 00       		.byte	0
 1015 0016 0B       		.uleb128 0xb
 1016 0017 0B       		.uleb128 0xb
 1017 0018 3E       		.uleb128 0x3e
 1018 0019 0B       		.uleb128 0xb
 1019 001a 03       		.uleb128 0x3
 1020 001b 0E       		.uleb128 0xe
 1021 001c 00       		.byte	0
 1022 001d 00       		.byte	0
 1023 001e 03       		.uleb128 0x3
 1024 001f 24       		.uleb128 0x24
 1025 0020 00       		.byte	0
 1026 0021 0B       		.uleb128 0xb
 1027 0022 0B       		.uleb128 0xb
 1028 0023 3E       		.uleb128 0x3e
 1029 0024 0B       		.uleb128 0xb
 1030 0025 03       		.uleb128 0x3
 1031 0026 08       		.uleb128 0x8
 1032 0027 00       		.byte	0
 1033 0028 00       		.byte	0
 1034 0029 04       		.uleb128 0x4
 1035 002a 16       		.uleb128 0x16
 1036 002b 00       		.byte	0
 1037 002c 03       		.uleb128 0x3
 1038 002d 0E       		.uleb128 0xe
 1039 002e 3A       		.uleb128 0x3a
 1040 002f 0B       		.uleb128 0xb
 1041 0030 3B       		.uleb128 0x3b
 1042 0031 0B       		.uleb128 0xb
 1043 0032 49       		.uleb128 0x49
 1044 0033 13       		.uleb128 0x13
 1045 0034 00       		.byte	0
 1046 0035 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 35


 1047 0036 05       		.uleb128 0x5
 1048 0037 16       		.uleb128 0x16
 1049 0038 00       		.byte	0
 1050 0039 03       		.uleb128 0x3
 1051 003a 0E       		.uleb128 0xe
 1052 003b 3A       		.uleb128 0x3a
 1053 003c 0B       		.uleb128 0xb
 1054 003d 3B       		.uleb128 0x3b
 1055 003e 05       		.uleb128 0x5
 1056 003f 49       		.uleb128 0x49
 1057 0040 13       		.uleb128 0x13
 1058 0041 00       		.byte	0
 1059 0042 00       		.byte	0
 1060 0043 06       		.uleb128 0x6
 1061 0044 35       		.uleb128 0x35
 1062 0045 00       		.byte	0
 1063 0046 49       		.uleb128 0x49
 1064 0047 13       		.uleb128 0x13
 1065 0048 00       		.byte	0
 1066 0049 00       		.byte	0
 1067 004a 07       		.uleb128 0x7
 1068 004b 2E       		.uleb128 0x2e
 1069 004c 00       		.byte	0
 1070 004d 3F       		.uleb128 0x3f
 1071 004e 19       		.uleb128 0x19
 1072 004f 03       		.uleb128 0x3
 1073 0050 0E       		.uleb128 0xe
 1074 0051 3A       		.uleb128 0x3a
 1075 0052 0B       		.uleb128 0xb
 1076 0053 3B       		.uleb128 0x3b
 1077 0054 0B       		.uleb128 0xb
 1078 0055 27       		.uleb128 0x27
 1079 0056 19       		.uleb128 0x19
 1080 0057 11       		.uleb128 0x11
 1081 0058 01       		.uleb128 0x1
 1082 0059 12       		.uleb128 0x12
 1083 005a 06       		.uleb128 0x6
 1084 005b 40       		.uleb128 0x40
 1085 005c 18       		.uleb128 0x18
 1086 005d 9642     		.uleb128 0x2116
 1087 005f 19       		.uleb128 0x19
 1088 0060 00       		.byte	0
 1089 0061 00       		.byte	0
 1090 0062 08       		.uleb128 0x8
 1091 0063 2E       		.uleb128 0x2e
 1092 0064 01       		.byte	0x1
 1093 0065 3F       		.uleb128 0x3f
 1094 0066 19       		.uleb128 0x19
 1095 0067 03       		.uleb128 0x3
 1096 0068 0E       		.uleb128 0xe
 1097 0069 3A       		.uleb128 0x3a
 1098 006a 0B       		.uleb128 0xb
 1099 006b 3B       		.uleb128 0x3b
 1100 006c 0B       		.uleb128 0xb
 1101 006d 27       		.uleb128 0x27
 1102 006e 19       		.uleb128 0x19
 1103 006f 11       		.uleb128 0x11
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 36


 1104 0070 01       		.uleb128 0x1
 1105 0071 12       		.uleb128 0x12
 1106 0072 06       		.uleb128 0x6
 1107 0073 40       		.uleb128 0x40
 1108 0074 18       		.uleb128 0x18
 1109 0075 9642     		.uleb128 0x2116
 1110 0077 19       		.uleb128 0x19
 1111 0078 01       		.uleb128 0x1
 1112 0079 13       		.uleb128 0x13
 1113 007a 00       		.byte	0
 1114 007b 00       		.byte	0
 1115 007c 09       		.uleb128 0x9
 1116 007d 34       		.uleb128 0x34
 1117 007e 00       		.byte	0
 1118 007f 03       		.uleb128 0x3
 1119 0080 0E       		.uleb128 0xe
 1120 0081 3A       		.uleb128 0x3a
 1121 0082 0B       		.uleb128 0xb
 1122 0083 3B       		.uleb128 0x3b
 1123 0084 0B       		.uleb128 0xb
 1124 0085 49       		.uleb128 0x49
 1125 0086 13       		.uleb128 0x13
 1126 0087 02       		.uleb128 0x2
 1127 0088 18       		.uleb128 0x18
 1128 0089 00       		.byte	0
 1129 008a 00       		.byte	0
 1130 008b 0A       		.uleb128 0xa
 1131 008c 2E       		.uleb128 0x2e
 1132 008d 00       		.byte	0
 1133 008e 3F       		.uleb128 0x3f
 1134 008f 19       		.uleb128 0x19
 1135 0090 03       		.uleb128 0x3
 1136 0091 0E       		.uleb128 0xe
 1137 0092 3A       		.uleb128 0x3a
 1138 0093 0B       		.uleb128 0xb
 1139 0094 3B       		.uleb128 0x3b
 1140 0095 0B       		.uleb128 0xb
 1141 0096 27       		.uleb128 0x27
 1142 0097 19       		.uleb128 0x19
 1143 0098 11       		.uleb128 0x11
 1144 0099 01       		.uleb128 0x1
 1145 009a 12       		.uleb128 0x12
 1146 009b 06       		.uleb128 0x6
 1147 009c 40       		.uleb128 0x40
 1148 009d 18       		.uleb128 0x18
 1149 009e 9742     		.uleb128 0x2117
 1150 00a0 19       		.uleb128 0x19
 1151 00a1 00       		.byte	0
 1152 00a2 00       		.byte	0
 1153 00a3 0B       		.uleb128 0xb
 1154 00a4 2E       		.uleb128 0x2e
 1155 00a5 01       		.byte	0x1
 1156 00a6 3F       		.uleb128 0x3f
 1157 00a7 19       		.uleb128 0x19
 1158 00a8 03       		.uleb128 0x3
 1159 00a9 0E       		.uleb128 0xe
 1160 00aa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 37


 1161 00ab 0B       		.uleb128 0xb
 1162 00ac 3B       		.uleb128 0x3b
 1163 00ad 05       		.uleb128 0x5
 1164 00ae 27       		.uleb128 0x27
 1165 00af 19       		.uleb128 0x19
 1166 00b0 11       		.uleb128 0x11
 1167 00b1 01       		.uleb128 0x1
 1168 00b2 12       		.uleb128 0x12
 1169 00b3 06       		.uleb128 0x6
 1170 00b4 40       		.uleb128 0x40
 1171 00b5 18       		.uleb128 0x18
 1172 00b6 9742     		.uleb128 0x2117
 1173 00b8 19       		.uleb128 0x19
 1174 00b9 01       		.uleb128 0x1
 1175 00ba 13       		.uleb128 0x13
 1176 00bb 00       		.byte	0
 1177 00bc 00       		.byte	0
 1178 00bd 0C       		.uleb128 0xc
 1179 00be 05       		.uleb128 0x5
 1180 00bf 00       		.byte	0
 1181 00c0 03       		.uleb128 0x3
 1182 00c1 0E       		.uleb128 0xe
 1183 00c2 3A       		.uleb128 0x3a
 1184 00c3 0B       		.uleb128 0xb
 1185 00c4 3B       		.uleb128 0x3b
 1186 00c5 05       		.uleb128 0x5
 1187 00c6 49       		.uleb128 0x49
 1188 00c7 13       		.uleb128 0x13
 1189 00c8 02       		.uleb128 0x2
 1190 00c9 18       		.uleb128 0x18
 1191 00ca 00       		.byte	0
 1192 00cb 00       		.byte	0
 1193 00cc 0D       		.uleb128 0xd
 1194 00cd 2E       		.uleb128 0x2e
 1195 00ce 00       		.byte	0
 1196 00cf 3F       		.uleb128 0x3f
 1197 00d0 19       		.uleb128 0x19
 1198 00d1 03       		.uleb128 0x3
 1199 00d2 0E       		.uleb128 0xe
 1200 00d3 3A       		.uleb128 0x3a
 1201 00d4 0B       		.uleb128 0xb
 1202 00d5 3B       		.uleb128 0x3b
 1203 00d6 05       		.uleb128 0x5
 1204 00d7 27       		.uleb128 0x27
 1205 00d8 19       		.uleb128 0x19
 1206 00d9 49       		.uleb128 0x49
 1207 00da 13       		.uleb128 0x13
 1208 00db 11       		.uleb128 0x11
 1209 00dc 01       		.uleb128 0x1
 1210 00dd 12       		.uleb128 0x12
 1211 00de 06       		.uleb128 0x6
 1212 00df 40       		.uleb128 0x40
 1213 00e0 18       		.uleb128 0x18
 1214 00e1 9742     		.uleb128 0x2117
 1215 00e3 19       		.uleb128 0x19
 1216 00e4 00       		.byte	0
 1217 00e5 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 38


 1218 00e6 0E       		.uleb128 0xe
 1219 00e7 2E       		.uleb128 0x2e
 1220 00e8 00       		.byte	0
 1221 00e9 3F       		.uleb128 0x3f
 1222 00ea 19       		.uleb128 0x19
 1223 00eb 03       		.uleb128 0x3
 1224 00ec 0E       		.uleb128 0xe
 1225 00ed 3A       		.uleb128 0x3a
 1226 00ee 0B       		.uleb128 0xb
 1227 00ef 3B       		.uleb128 0x3b
 1228 00f0 05       		.uleb128 0x5
 1229 00f1 27       		.uleb128 0x27
 1230 00f2 19       		.uleb128 0x19
 1231 00f3 11       		.uleb128 0x11
 1232 00f4 01       		.uleb128 0x1
 1233 00f5 12       		.uleb128 0x12
 1234 00f6 06       		.uleb128 0x6
 1235 00f7 40       		.uleb128 0x40
 1236 00f8 18       		.uleb128 0x18
 1237 00f9 9642     		.uleb128 0x2116
 1238 00fb 19       		.uleb128 0x19
 1239 00fc 00       		.byte	0
 1240 00fd 00       		.byte	0
 1241 00fe 0F       		.uleb128 0xf
 1242 00ff 2E       		.uleb128 0x2e
 1243 0100 01       		.byte	0x1
 1244 0101 3F       		.uleb128 0x3f
 1245 0102 19       		.uleb128 0x19
 1246 0103 03       		.uleb128 0x3
 1247 0104 0E       		.uleb128 0xe
 1248 0105 3A       		.uleb128 0x3a
 1249 0106 0B       		.uleb128 0xb
 1250 0107 3B       		.uleb128 0x3b
 1251 0108 05       		.uleb128 0x5
 1252 0109 27       		.uleb128 0x27
 1253 010a 19       		.uleb128 0x19
 1254 010b 49       		.uleb128 0x49
 1255 010c 13       		.uleb128 0x13
 1256 010d 11       		.uleb128 0x11
 1257 010e 01       		.uleb128 0x1
 1258 010f 12       		.uleb128 0x12
 1259 0110 06       		.uleb128 0x6
 1260 0111 40       		.uleb128 0x40
 1261 0112 18       		.uleb128 0x18
 1262 0113 9742     		.uleb128 0x2117
 1263 0115 19       		.uleb128 0x19
 1264 0116 01       		.uleb128 0x1
 1265 0117 13       		.uleb128 0x13
 1266 0118 00       		.byte	0
 1267 0119 00       		.byte	0
 1268 011a 10       		.uleb128 0x10
 1269 011b 34       		.uleb128 0x34
 1270 011c 00       		.byte	0
 1271 011d 03       		.uleb128 0x3
 1272 011e 0E       		.uleb128 0xe
 1273 011f 3A       		.uleb128 0x3a
 1274 0120 0B       		.uleb128 0xb
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 39


 1275 0121 3B       		.uleb128 0x3b
 1276 0122 05       		.uleb128 0x5
 1277 0123 49       		.uleb128 0x49
 1278 0124 13       		.uleb128 0x13
 1279 0125 02       		.uleb128 0x2
 1280 0126 18       		.uleb128 0x18
 1281 0127 00       		.byte	0
 1282 0128 00       		.byte	0
 1283 0129 11       		.uleb128 0x11
 1284 012a 34       		.uleb128 0x34
 1285 012b 00       		.byte	0
 1286 012c 03       		.uleb128 0x3
 1287 012d 0E       		.uleb128 0xe
 1288 012e 3A       		.uleb128 0x3a
 1289 012f 0B       		.uleb128 0xb
 1290 0130 3B       		.uleb128 0x3b
 1291 0131 0B       		.uleb128 0xb
 1292 0132 49       		.uleb128 0x49
 1293 0133 13       		.uleb128 0x13
 1294 0134 3F       		.uleb128 0x3f
 1295 0135 19       		.uleb128 0x19
 1296 0136 02       		.uleb128 0x2
 1297 0137 18       		.uleb128 0x18
 1298 0138 00       		.byte	0
 1299 0139 00       		.byte	0
 1300 013a 00       		.byte	0
 1301              		.section	.debug_aranges,"",%progbits
 1302 0000 94000000 		.4byte	0x94
 1303 0004 0200     		.2byte	0x2
 1304 0006 00000000 		.4byte	.Ldebug_info0
 1305 000a 04       		.byte	0x4
 1306 000b 00       		.byte	0
 1307 000c 0000     		.2byte	0
 1308 000e 0000     		.2byte	0
 1309 0010 00000000 		.4byte	.LFB0
 1310 0014 24000000 		.4byte	.LFE0-.LFB0
 1311 0018 00000000 		.4byte	.LFB1
 1312 001c A8000000 		.4byte	.LFE1-.LFB1
 1313 0020 00000000 		.4byte	.LFB2
 1314 0024 20000000 		.4byte	.LFE2-.LFB2
 1315 0028 00000000 		.4byte	.LFB3
 1316 002c 1C000000 		.4byte	.LFE3-.LFB3
 1317 0030 00000000 		.4byte	.LFB4
 1318 0034 20000000 		.4byte	.LFE4-.LFB4
 1319 0038 00000000 		.4byte	.LFB5
 1320 003c 1C000000 		.4byte	.LFE5-.LFB5
 1321 0040 00000000 		.4byte	.LFB6
 1322 0044 1C000000 		.4byte	.LFE6-.LFB6
 1323 0048 00000000 		.4byte	.LFB7
 1324 004c 20000000 		.4byte	.LFE7-.LFB7
 1325 0050 00000000 		.4byte	.LFB8
 1326 0054 20000000 		.4byte	.LFE8-.LFB8
 1327 0058 00000000 		.4byte	.LFB9
 1328 005c 20000000 		.4byte	.LFE9-.LFB9
 1329 0060 00000000 		.4byte	.LFB10
 1330 0064 14000000 		.4byte	.LFE10-.LFB10
 1331 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 40


 1332 006c 20000000 		.4byte	.LFE11-.LFB11
 1333 0070 00000000 		.4byte	.LFB12
 1334 0074 20000000 		.4byte	.LFE12-.LFB12
 1335 0078 00000000 		.4byte	.LFB13
 1336 007c 14000000 		.4byte	.LFE13-.LFB13
 1337 0080 00000000 		.4byte	.LFB14
 1338 0084 14000000 		.4byte	.LFE14-.LFB14
 1339 0088 00000000 		.4byte	.LFB15
 1340 008c 14000000 		.4byte	.LFE15-.LFB15
 1341 0090 00000000 		.4byte	0
 1342 0094 00000000 		.4byte	0
 1343              		.section	.debug_ranges,"",%progbits
 1344              	.Ldebug_ranges0:
 1345 0000 00000000 		.4byte	.LFB0
 1346 0004 24000000 		.4byte	.LFE0
 1347 0008 00000000 		.4byte	.LFB1
 1348 000c A8000000 		.4byte	.LFE1
 1349 0010 00000000 		.4byte	.LFB2
 1350 0014 20000000 		.4byte	.LFE2
 1351 0018 00000000 		.4byte	.LFB3
 1352 001c 1C000000 		.4byte	.LFE3
 1353 0020 00000000 		.4byte	.LFB4
 1354 0024 20000000 		.4byte	.LFE4
 1355 0028 00000000 		.4byte	.LFB5
 1356 002c 1C000000 		.4byte	.LFE5
 1357 0030 00000000 		.4byte	.LFB6
 1358 0034 1C000000 		.4byte	.LFE6
 1359 0038 00000000 		.4byte	.LFB7
 1360 003c 20000000 		.4byte	.LFE7
 1361 0040 00000000 		.4byte	.LFB8
 1362 0044 20000000 		.4byte	.LFE8
 1363 0048 00000000 		.4byte	.LFB9
 1364 004c 20000000 		.4byte	.LFE9
 1365 0050 00000000 		.4byte	.LFB10
 1366 0054 14000000 		.4byte	.LFE10
 1367 0058 00000000 		.4byte	.LFB11
 1368 005c 20000000 		.4byte	.LFE11
 1369 0060 00000000 		.4byte	.LFB12
 1370 0064 20000000 		.4byte	.LFE12
 1371 0068 00000000 		.4byte	.LFB13
 1372 006c 14000000 		.4byte	.LFE13
 1373 0070 00000000 		.4byte	.LFB14
 1374 0074 14000000 		.4byte	.LFE14
 1375 0078 00000000 		.4byte	.LFB15
 1376 007c 14000000 		.4byte	.LFE15
 1377 0080 00000000 		.4byte	0
 1378 0084 00000000 		.4byte	0
 1379              		.section	.debug_line,"",%progbits
 1380              	.Ldebug_line0:
 1381 0000 92010000 		.section	.debug_str,"MS",%progbits,1
 1381      02004B00 
 1381      00000201 
 1381      FB0E0D00 
 1381      01010101 
 1382              	.LASF15:
 1383 0000 72656731 		.ascii	"reg16\000"
 1383      3600
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 41


 1384              	.LASF18:
 1385 0006 45464645 		.ascii	"EFFECTOR_PWM_interruptState\000"
 1385      43544F52 
 1385      5F50574D 
 1385      5F696E74 
 1385      65727275 
 1386              	.LASF23:
 1387 0022 45464645 		.ascii	"EFFECTOR_PWM_WriteCounter\000"
 1387      43544F52 
 1387      5F50574D 
 1387      5F577269 
 1387      7465436F 
 1388              	.LASF37:
 1389 003c 45464645 		.ascii	"EFFECTOR_PWM_ReadCapture\000"
 1389      43544F52 
 1389      5F50574D 
 1389      5F526561 
 1389      64436170 
 1390              	.LASF27:
 1391 0055 70657269 		.ascii	"period\000"
 1391      6F6400
 1392              	.LASF3:
 1393 005c 73686F72 		.ascii	"short unsigned int\000"
 1393      7420756E 
 1393      7369676E 
 1393      65642069 
 1393      6E7400
 1394              	.LASF24:
 1395 006f 45464645 		.ascii	"EFFECTOR_PWM_ClearFIFO\000"
 1395      43544F52 
 1395      5F50574D 
 1395      5F436C65 
 1395      61724649 
 1396              	.LASF32:
 1397 0086 45464645 		.ascii	"EFFECTOR_PWM_ReadCounter\000"
 1397      43544F52 
 1397      5F50574D 
 1397      5F526561 
 1397      64436F75 
 1398              	.LASF11:
 1399 009f 666C6F61 		.ascii	"float\000"
 1399      7400
 1400              	.LASF40:
 1401 00a5 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1401      4320342E 
 1401      382E3420 
 1401      32303134 
 1401      30353236 
 1402 00d8 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1402      20726576 
 1402      6973696F 
 1402      6E203231 
 1402      31333538 
 1403 010b 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 1403      74643D67 
 1403      6E753939 
 1403      202D6666 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 42


 1403      756E6374 
 1404              	.LASF1:
 1405 012c 756E7369 		.ascii	"unsigned char\000"
 1405      676E6564 
 1405      20636861 
 1405      7200
 1406              	.LASF14:
 1407 013a 72656738 		.ascii	"reg8\000"
 1407      00
 1408              	.LASF5:
 1409 013f 6C6F6E67 		.ascii	"long unsigned int\000"
 1409      20756E73 
 1409      69676E65 
 1409      6420696E 
 1409      7400
 1410              	.LASF9:
 1411 0151 75696E74 		.ascii	"uint8\000"
 1411      3800
 1412              	.LASF36:
 1413 0157 636F6E74 		.ascii	"control\000"
 1413      726F6C00 
 1414              	.LASF39:
 1415 015f 45464645 		.ascii	"EFFECTOR_PWM_ReadPeriod\000"
 1415      43544F52 
 1415      5F50574D 
 1415      5F526561 
 1415      64506572 
 1416              	.LASF44:
 1417 0177 45464645 		.ascii	"EFFECTOR_PWM_initVar\000"
 1417      43544F52 
 1417      5F50574D 
 1417      5F696E69 
 1417      74566172 
 1418              	.LASF43:
 1419 018c 45464645 		.ascii	"EFFECTOR_PWM_ReadControlRegister\000"
 1419      43544F52 
 1419      5F50574D 
 1419      5F526561 
 1419      64436F6E 
 1420              	.LASF26:
 1421 01ad 636F756E 		.ascii	"counter\000"
 1421      74657200 
 1422              	.LASF12:
 1423 01b5 646F7562 		.ascii	"double\000"
 1423      6C6500
 1424              	.LASF2:
 1425 01bc 73686F72 		.ascii	"short int\000"
 1425      7420696E 
 1425      7400
 1426              	.LASF10:
 1427 01c6 75696E74 		.ascii	"uint16\000"
 1427      313600
 1428              	.LASF30:
 1429 01cd 45464645 		.ascii	"EFFECTOR_PWM_SetInterruptMode\000"
 1429      43544F52 
 1429      5F50574D 
 1429      5F536574 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 43


 1429      496E7465 
 1430              	.LASF25:
 1431 01eb 45464645 		.ascii	"EFFECTOR_PWM_WritePeriod\000"
 1431      43544F52 
 1431      5F50574D 
 1431      5F577269 
 1431      74655065 
 1432              	.LASF21:
 1433 0204 45464645 		.ascii	"EFFECTOR_PWM_Stop\000"
 1433      43544F52 
 1433      5F50574D 
 1433      5F53746F 
 1433      7000
 1434              	.LASF8:
 1435 0216 756E7369 		.ascii	"unsigned int\000"
 1435      676E6564 
 1435      20696E74 
 1435      00
 1436              	.LASF7:
 1437 0223 6C6F6E67 		.ascii	"long long unsigned int\000"
 1437      206C6F6E 
 1437      6720756E 
 1437      7369676E 
 1437      65642069 
 1438              	.LASF34:
 1439 023a 72657375 		.ascii	"result\000"
 1439      6C7400
 1440              	.LASF17:
 1441 0241 6374726C 		.ascii	"ctrl\000"
 1441      00
 1442              	.LASF16:
 1443 0246 73697A65 		.ascii	"sizetype\000"
 1443      74797065 
 1443      00
 1444              	.LASF42:
 1445 024f 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\Arm\\arm_cont"
 1445      73657273 
 1445      5C53616D 
 1445      75656C5C 
 1445      446F6375 
 1446 027c 726F6C6C 		.ascii	"roller_v2\\arm_controller_v2.1.cydsn\000"
 1446      65725F76 
 1446      325C6172 
 1446      6D5F636F 
 1446      6E74726F 
 1447              	.LASF6:
 1448 02a0 6C6F6E67 		.ascii	"long long int\000"
 1448      206C6F6E 
 1448      6720696E 
 1448      7400
 1449              	.LASF31:
 1450 02ae 696E7465 		.ascii	"interruptMode\000"
 1450      72727570 
 1450      744D6F64 
 1450      6500
 1451              	.LASF20:
 1452 02bc 45464645 		.ascii	"EFFECTOR_PWM_Enable\000"
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 44


 1452      43544F52 
 1452      5F50574D 
 1452      5F456E61 
 1452      626C6500 
 1453              	.LASF41:
 1454 02d0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\EFFECTOR_PWM.c\000"
 1454      6E657261 
 1454      7465645F 
 1454      536F7572 
 1454      63655C50 
 1455              	.LASF19:
 1456 02f8 45464645 		.ascii	"EFFECTOR_PWM_Start\000"
 1456      43544F52 
 1456      5F50574D 
 1456      5F537461 
 1456      727400
 1457              	.LASF28:
 1458 030b 45464645 		.ascii	"EFFECTOR_PWM_WriteCompare\000"
 1458      43544F52 
 1458      5F50574D 
 1458      5F577269 
 1458      7465436F 
 1459              	.LASF35:
 1460 0325 45464645 		.ascii	"EFFECTOR_PWM_WriteControlRegister\000"
 1460      43544F52 
 1460      5F50574D 
 1460      5F577269 
 1460      7465436F 
 1461              	.LASF4:
 1462 0347 6C6F6E67 		.ascii	"long int\000"
 1462      20696E74 
 1462      00
 1463              	.LASF13:
 1464 0350 63686172 		.ascii	"char\000"
 1464      00
 1465              	.LASF38:
 1466 0355 45464645 		.ascii	"EFFECTOR_PWM_ReadCompare\000"
 1466      43544F52 
 1466      5F50574D 
 1466      5F526561 
 1466      64436F6D 
 1467              	.LASF0:
 1468 036e 7369676E 		.ascii	"signed char\000"
 1468      65642063 
 1468      68617200 
 1469              	.LASF29:
 1470 037a 636F6D70 		.ascii	"compare\000"
 1470      61726500 
 1471              	.LASF33:
 1472 0382 45464645 		.ascii	"EFFECTOR_PWM_ReadStatusRegister\000"
 1472      43544F52 
 1472      5F50574D 
 1472      5F526561 
 1472      64537461 
 1473              	.LASF22:
 1474 03a2 45464645 		.ascii	"EFFECTOR_PWM_Init\000"
 1474      43544F52 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccN9lW8j.s 			page 45


 1474      5F50574D 
 1474      5F496E69 
 1474      7400
 1475              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
