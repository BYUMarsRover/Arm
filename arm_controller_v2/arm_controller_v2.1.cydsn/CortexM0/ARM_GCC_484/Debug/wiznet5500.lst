ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"wiznet5500.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.transferSPI,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	transferSPI, %function
  22              	transferSPI:
  23              	.LFB33:
  24              		.file 1 ".\\spi.h"
   1:.\spi.h       **** #ifndef CYPRESS_ROVER_SPI_DEF_H
   2:.\spi.h       **** #define CYPRESS_ROVER_SPI_DEF_H
   3:.\spi.h       **** 
   4:.\spi.h       **** #include <project.h>
   5:.\spi.h       **** #include <stdint.h>
   6:.\spi.h       **** 
   7:.\spi.h       **** // Trying the C99 Definition, as per http://www.greenend.org.uk/rjk/tech/inline.html
   8:.\spi.h       **** // inline uint8_t transferSPI(uint8_t);
   9:.\spi.h       **** 
  10:.\spi.h       **** 
  11:.\spi.h       **** // Try defining the whole thing in the header:
  12:.\spi.h       **** // inline uint8_t transferSPI(uint8_t data){ // This results in compile failure, must be static
  13:.\spi.h       **** static inline uint8_t transferSPI(uint8_t data){
  25              		.loc 1 13 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 021C     		mov	r2, r0
  36 0008 FB1D     		add	r3, r7, #7
  37 000a 1A70     		strb	r2, [r3]
  14:.\spi.h       **** 	SPIM_1_WriteTxData(data);//SPI_1_SpiUartWriteTxData(data);
  38              		.loc 1 14 0
  39 000c FB1D     		add	r3, r7, #7
  40 000e 1B78     		ldrb	r3, [r3]
  41 0010 181C     		mov	r0, r3
  42 0012 FFF7FEFF 		bl	SPIM_1_WriteTxData
  15:.\spi.h       **** 	while(!(SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE)); //SPI_1_SpiIsBusBusy()
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 2


  43              		.loc 1 15 0
  44 0016 C046     		mov	r8, r8
  45              	.L2:
  46              		.loc 1 15 0 is_stmt 0 discriminator 1
  47 0018 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
  48 001c 031C     		mov	r3, r0
  49 001e 1A1C     		mov	r2, r3
  50 0020 0123     		mov	r3, #1
  51 0022 1340     		and	r3, r2
  52 0024 F8D0     		beq	.L2
  16:.\spi.h       **** 	return( ((uint8_t) (SPIM_1_ReadRxData())) ); //SPI_1_SpiUartReadRxData()
  53              		.loc 1 16 0 is_stmt 1
  54 0026 FFF7FEFF 		bl	SPIM_1_ReadRxData
  55 002a 031C     		mov	r3, r0
  17:.\spi.h       **** }
  56              		.loc 1 17 0
  57 002c 181C     		mov	r0, r3
  58 002e BD46     		mov	sp, r7
  59 0030 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0032 80BD     		pop	{r7, pc}
  62              		.cfi_endproc
  63              	.LFE33:
  64              		.size	transferSPI, .-transferSPI
  65              		.bss
  66              		.align	1
  67              	wiznetTxPointer:
  68 0000 0000     		.space	2
  69              		.align	1
  70              	wiznetRxPointer:
  71 0002 0000     		.space	2
  72              		.section	.rodata
  73              		.align	2
  74              	.LC0:
  75 0000 00       		.byte	0
  76 0001 C0       		.byte	-64
  77 0002 A8       		.byte	-88
  78 0003 01       		.byte	1
  79 0004 01       		.byte	1
  80 0005 FF       		.byte	-1
  81 0006 FF       		.byte	-1
  82 0007 FF       		.byte	-1
  83 0008 00       		.byte	0
  84 0009 00       		.byte	0
  85 000a 08       		.byte	8
  86 000b DC       		.byte	-36
  87 000c FF       		.byte	-1
  88 000d FF       		.byte	-1
  89 000e FF       		.byte	-1
  90 000f C0       		.byte	-64
  91 0010 A8       		.byte	-88
  92 0011 01       		.byte	1
  93 0012 FE       		.byte	-2
  94 0013 00       		.align	2
  95              	.LC1:
  96 0014 02       		.byte	2
  97 0015 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 3


  98 0016 FF       		.byte	-1
  99 0017 00       		.byte	0
 100 0018 FE       		.byte	-2
 101 0019 01       		.byte	1
 102 001a 00       		.byte	0
 103 001b 00       		.byte	0
 104 001c 00       		.byte	0
 105 001d 00       		.byte	0
 106 001e 00       		.byte	0
 107 001f 00       		.byte	0
 108 0020 C0       		.byte	-64
 109 0021 A8       		.byte	-88
 110 0022 01       		.byte	1
 111 0023 01       		.byte	1
 112 0024 69       		.byte	105
 113 0025 87       		.byte	-121
 114              		.section	.text.wiznetInit,"ax",%progbits
 115              		.align	2
 116              		.global	wiznetInit
 117              		.code	16
 118              		.thumb_func
 119              		.type	wiznetInit, %function
 120              	wiznetInit:
 121              	.LFB34:
 122              		.file 2 ".\\wiznet5500.c"
   1:.\wiznet5500.c **** // BYU Mars Rover WizNet Library
   2:.\wiznet5500.c **** // Authors:
   3:.\wiznet5500.c **** // 		Steve Carlson
   4:.\wiznet5500.c **** // 		<Your Name Here>
   5:.\wiznet5500.c **** 
   6:.\wiznet5500.c **** // Totally Bare-bones, written-in-24-hours.
   7:.\wiznet5500.c **** // Recommend using https://github.com/Wiznet/WIZ_Ethernet_Library later
   8:.\wiznet5500.c **** 
   9:.\wiznet5500.c **** #include <project.h>
  10:.\wiznet5500.c **** #include <stdint.h>
  11:.\wiznet5500.c **** #include "wiznet5500.h"
  12:.\wiznet5500.c **** #include "spi.h"
  13:.\wiznet5500.c **** // #include "rover_main.h" // For some reason, including this breaks it all. 
  14:.\wiznet5500.c **** // 		Only needed for the following macros:
  15:.\wiznet5500.c **** #define HIGH			1
  16:.\wiznet5500.c **** #define LOW				0
  17:.\wiznet5500.c **** 
  18:.\wiznet5500.c **** // Application-Scope Defines
  19:.\wiznet5500.c **** 
  20:.\wiznet5500.c **** #define WIZ_MAX_MESSAGE_SEGMENT		100
  21:.\wiznet5500.c **** 
  22:.\wiznet5500.c **** // Global Variables
  23:.\wiznet5500.c **** static uint16_t wiznetTxPointer;
  24:.\wiznet5500.c **** static uint16_t wiznetRxPointer;
  25:.\wiznet5500.c **** 
  26:.\wiznet5500.c **** uint8_t wiznetInit(uint8_t ownIpAddr, uint8_t dstIpAddr, uint16_t dstUdpPort){
 123              		.loc 2 26 0
 124              		.cfi_startproc
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 4


 129 0002 90B0     		sub	sp, sp, #64
 130              		.cfi_def_cfa_offset 72
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 133 0006 FB1D     		add	r3, r7, #7
 134 0008 1870     		strb	r0, [r3]
 135 000a BB1D     		add	r3, r7, #6
 136 000c 1970     		strb	r1, [r3]
 137 000e 3B1D     		add	r3, r7, #4
 138 0010 1A80     		strh	r2, [r3]
  27:.\wiznet5500.c **** 	// This is terrible, need a better way.
  28:.\wiznet5500.c **** 	uint8_t cmdArray[] = {0x00,192u,168u,1u,1u,255u,255u,255u,0u,0x00,0x08,0xDC,0xFF,0xFF,0xFF,192u,16
 139              		.loc 2 28 0
 140 0012 3A1C     		mov	r2, r7
 141 0014 2832     		add	r2, r2, #40
 142 0016 544B     		ldr	r3, .L8
 143 0018 111C     		mov	r1, r2
 144 001a 1A1C     		mov	r2, r3
 145 001c 1323     		mov	r3, #19
 146 001e 081C     		mov	r0, r1
 147 0020 111C     		mov	r1, r2
 148 0022 1A1C     		mov	r2, r3
 149 0024 FFF7FEFF 		bl	memcpy
  29:.\wiznet5500.c **** 	//                    --- | Gateway Addr  | Subnet Mask     | WizNet's MAC Address        | WizNet
  30:.\wiznet5500.c **** 
  31:.\wiznet5500.c **** 	uint8_t udpConfig[] = {0x02,0x00,0xFF,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,192u,168u,1u,1u
 150              		.loc 2 31 0
 151 0028 3A1C     		mov	r2, r7
 152 002a 1432     		add	r2, r2, #20
 153 002c 4F4B     		ldr	r3, .L8+4
 154 002e 111C     		mov	r1, r2
 155 0030 1A1C     		mov	r2, r3
 156 0032 1223     		mov	r3, #18
 157 0034 081C     		mov	r0, r1
 158 0036 111C     		mov	r1, r2
 159 0038 1A1C     		mov	r2, r3
 160 003a FFF7FEFF 		bl	memcpy
  32:.\wiznet5500.c **** 	//                     UDP |IDLE|Clr |----| :65025  |  No Dst Hw Address          | 192.168.1.1   
  33:.\wiznet5500.c **** 	
  34:.\wiznet5500.c **** 	
  35:.\wiznet5500.c **** 	// Destination IP Address Ending
  36:.\wiznet5500.c **** 	// cmdArray[4] = dstIpAddr; // Gateway should always be 192.168.1.1
  37:.\wiznet5500.c ****     udpConfig[14] = 1u;
 161              		.loc 2 37 0
 162 003e 3B1C     		mov	r3, r7
 163 0040 1433     		add	r3, r3, #20
 164 0042 0122     		mov	r2, #1
 165 0044 9A73     		strb	r2, [r3, #14]
  38:.\wiznet5500.c **** 	udpConfig[15] = dstIpAddr;
 166              		.loc 2 38 0
 167 0046 3B1C     		mov	r3, r7
 168 0048 1433     		add	r3, r3, #20
 169 004a BA1D     		add	r2, r7, #6
 170 004c 1278     		ldrb	r2, [r2]
 171 004e DA73     		strb	r2, [r3, #15]
  39:.\wiznet5500.c **** 	udpConfig[16] = dstUdpPort>>8;
 172              		.loc 2 39 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 5


 173 0050 3B1D     		add	r3, r7, #4
 174 0052 1B88     		ldrh	r3, [r3]
 175 0054 1B0A     		lsr	r3, r3, #8
 176 0056 9BB2     		uxth	r3, r3
 177 0058 DAB2     		uxtb	r2, r3
 178 005a 3B1C     		mov	r3, r7
 179 005c 1433     		add	r3, r3, #20
 180 005e 1A74     		strb	r2, [r3, #16]
  40:.\wiznet5500.c **** 	udpConfig[17] = dstUdpPort&0xFF;
 181              		.loc 2 40 0
 182 0060 3B1D     		add	r3, r7, #4
 183 0062 1B88     		ldrh	r3, [r3]
 184 0064 DAB2     		uxtb	r2, r3
 185 0066 3B1C     		mov	r3, r7
 186 0068 1433     		add	r3, r3, #20
 187 006a 5A74     		strb	r2, [r3, #17]
  41:.\wiznet5500.c **** 	
  42:.\wiznet5500.c **** 	// Learn Current MAC
  43:.\wiznet5500.c **** 	uint8_t wiznetOldMacAddr[6];
  44:.\wiznet5500.c **** 	wiznetReadArray(WIZNET_SHAR, WIZNET_BLK_COMMON, wiznetOldMacAddr, 6); // sizeof(wiznetOldMacAddr)
 188              		.loc 2 44 0
 189 006c 3B1C     		mov	r3, r7
 190 006e 0C33     		add	r3, r3, #12
 191 0070 0920     		mov	r0, #9
 192 0072 0021     		mov	r1, #0
 193 0074 1A1C     		mov	r2, r3
 194 0076 0623     		mov	r3, #6
 195 0078 FFF7FEFF 		bl	wiznetReadArray
  45:.\wiznet5500.c **** 	
  46:.\wiznet5500.c **** 	// WizNet Module IP Address Ending
  47:.\wiznet5500.c ****     cmdArray[17] = 10u;
 196              		.loc 2 47 0
 197 007c 3B1C     		mov	r3, r7
 198 007e 2833     		add	r3, r3, #40
 199 0080 0A22     		mov	r2, #10
 200 0082 5A74     		strb	r2, [r3, #17]
  48:.\wiznet5500.c **** 	cmdArray[18] = ownIpAddr;
 201              		.loc 2 48 0
 202 0084 3B1C     		mov	r3, r7
 203 0086 2833     		add	r3, r3, #40
 204 0088 FA1D     		add	r2, r7, #7
 205 008a 1278     		ldrb	r2, [r2]
 206 008c 9A74     		strb	r2, [r3, #18]
  49:.\wiznet5500.c **** 	
  50:.\wiznet5500.c **** 	// Ephemeral Port (WizNet's own UDP Port when sending UDP, usually value above 0xC000)
  51:.\wiznet5500.c **** 	// uint16_t ephemUdpPort = (0xC000 + ((wiznetOldMacAddr[5]*(1+ownIpAddr))&0x3FFF) ); //Nice way to
  52:.\wiznet5500.c **** 	// udpConfig[4] = ephemUdpPort>>8;
  53:.\wiznet5500.c **** 	// udpConfig[5] = ephemUdpPort&0xFF;
  54:.\wiznet5500.c **** 	
  55:.\wiznet5500.c **** 	udpConfig[4] = dstUdpPort>>8;
 207              		.loc 2 55 0
 208 008e 3B1D     		add	r3, r7, #4
 209 0090 1B88     		ldrh	r3, [r3]
 210 0092 1B0A     		lsr	r3, r3, #8
 211 0094 9BB2     		uxth	r3, r3
 212 0096 DAB2     		uxtb	r2, r3
 213 0098 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 6


 214 009a 1433     		add	r3, r3, #20
 215 009c 1A71     		strb	r2, [r3, #4]
  56:.\wiznet5500.c **** 	udpConfig[5] = dstUdpPort&0xFF;
 216              		.loc 2 56 0
 217 009e 3B1D     		add	r3, r7, #4
 218 00a0 1B88     		ldrh	r3, [r3]
 219 00a2 DAB2     		uxtb	r2, r3
 220 00a4 3B1C     		mov	r3, r7
 221 00a6 1433     		add	r3, r3, #20
 222 00a8 5A71     		strb	r2, [r3, #5]
  57:.\wiznet5500.c **** 	
  58:.\wiznet5500.c **** 	// Write all the thus prepared values to the WizNet Module and Open the Socket
  59:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_MR,WIZNET_BLK_COMMON,cmdArray,sizeof(cmdArray));
 223              		.loc 2 59 0
 224 00aa 3B1C     		mov	r3, r7
 225 00ac 2833     		add	r3, r3, #40
 226 00ae 0020     		mov	r0, #0
 227 00b0 0021     		mov	r1, #0
 228 00b2 1A1C     		mov	r2, r3
 229 00b4 1323     		mov	r3, #19
 230 00b6 FFF7FEFF 		bl	wiznetWriteArray
  60:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_Sn_MR,WIZNET_BLK_S0_REG,udpConfig,sizeof(udpConfig));
 231              		.loc 2 60 0
 232 00ba 3B1C     		mov	r3, r7
 233 00bc 1433     		add	r3, r3, #20
 234 00be 0020     		mov	r0, #0
 235 00c0 0121     		mov	r1, #1
 236 00c2 1A1C     		mov	r2, r3
 237 00c4 1223     		mov	r3, #18
 238 00c6 FFF7FEFF 		bl	wiznetWriteArray
  61:.\wiznet5500.c **** 	wiznetWriteArray(WIZNET_SHAR,WIZNET_BLK_COMMON,wiznetOldMacAddr,6);
 239              		.loc 2 61 0
 240 00ca 3B1C     		mov	r3, r7
 241 00cc 0C33     		add	r3, r3, #12
 242 00ce 0920     		mov	r0, #9
 243 00d0 0021     		mov	r1, #0
 244 00d2 1A1C     		mov	r2, r3
 245 00d4 0623     		mov	r3, #6
 246 00d6 FFF7FEFF 		bl	wiznetWriteArray
  62:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_MSSR,WIZNET_BLK_S0_REG,WIZ_MAX_MESSAGE_SEGMENT);
 247              		.loc 2 62 0
 248 00da 1220     		mov	r0, #18
 249 00dc 0121     		mov	r1, #1
 250 00de 6422     		mov	r2, #100
 251 00e0 FFF7FEFF 		bl	wiznetWrite16b
  63:.\wiznet5500.c **** 	CyDelay(100);
 252              		.loc 2 63 0
 253 00e4 6420     		mov	r0, #100
 254 00e6 FFF7FEFF 		bl	CyDelay
  64:.\wiznet5500.c **** 	wiznetOpen();
 255              		.loc 2 64 0
 256 00ea FFF7FEFF 		bl	wiznetOpen
  65:.\wiznet5500.c **** 	
  66:.\wiznet5500.c **** 	// Configure Wiznet Interrupts
  67:.\wiznet5500.c **** 	wiznetConfigInterrupts(0x00,(WIZNET_Sn_IMR_SEND_OK | WIZNET_Sn_IMR_RECV) );
 257              		.loc 2 67 0
 258 00ee 0020     		mov	r0, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 7


 259 00f0 1421     		mov	r1, #20
 260 00f2 FFF7FEFF 		bl	wiznetConfigInterrupts
  68:.\wiznet5500.c **** 
  69:.\wiznet5500.c **** 	// Write sequential values to the TX Buffer, to know where on earth it is writing from.
  70:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 261              		.loc 2 70 0
 262 00f6 0020     		mov	r0, #0
 263 00f8 FFF7FEFF 		bl	WIZ_SS_Write
  71:.\wiznet5500.c **** 		// Address Phase
  72:.\wiznet5500.c **** 		transferSPI(0>>8);
 264              		.loc 2 72 0
 265 00fc 0020     		mov	r0, #0
 266 00fe FFF7FEFF 		bl	transferSPI
  73:.\wiznet5500.c **** 		transferSPI(0&0xFF);
 267              		.loc 2 73 0
 268 0102 0020     		mov	r0, #0
 269 0104 FFF7FEFF 		bl	transferSPI
  74:.\wiznet5500.c **** 		
  75:.\wiznet5500.c **** 		// Control Phase
  76:.\wiznet5500.c **** 		transferSPI(((WIZNET_BLK_S0_TX&0x1F)<<3)|(0x01<<2)|0x00);		
 270              		.loc 2 76 0
 271 0108 1420     		mov	r0, #20
 272 010a FFF7FEFF 		bl	transferSPI
 273              	.LBB2:
  77:.\wiznet5500.c **** 		
  78:.\wiznet5500.c **** 		// Data Phase
  79:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 274              		.loc 2 79 0
 275 010e 3B1C     		mov	r3, r7
 276 0110 3E33     		add	r3, r3, #62
 277 0112 0022     		mov	r2, #0
 278 0114 1A80     		strh	r2, [r3]
 279 0116 16E0     		b	.L5
 280              	.L6:
  80:.\wiznet5500.c **** 			transferSPI((uint8_t)(k>>8));
 281              		.loc 2 80 0 discriminator 2
 282 0118 3B1C     		mov	r3, r7
 283 011a 3E33     		add	r3, r3, #62
 284 011c 1B88     		ldrh	r3, [r3]
 285 011e 1B0A     		lsr	r3, r3, #8
 286 0120 9BB2     		uxth	r3, r3
 287 0122 DBB2     		uxtb	r3, r3
 288 0124 181C     		mov	r0, r3
 289 0126 FFF7FEFF 		bl	transferSPI
  81:.\wiznet5500.c **** 			transferSPI((uint8_t)(k&0xFF));
 290              		.loc 2 81 0 discriminator 2
 291 012a 3B1C     		mov	r3, r7
 292 012c 3E33     		add	r3, r3, #62
 293 012e 1B88     		ldrh	r3, [r3]
 294 0130 DBB2     		uxtb	r3, r3
 295 0132 181C     		mov	r0, r3
 296 0134 FFF7FEFF 		bl	transferSPI
  79:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 297              		.loc 2 79 0 discriminator 2
 298 0138 3B1C     		mov	r3, r7
 299 013a 3E33     		add	r3, r3, #62
 300 013c 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 8


 301 013e 3B1C     		mov	r3, r7
 302 0140 3E33     		add	r3, r3, #62
 303 0142 0132     		add	r2, r2, #1
 304 0144 1A80     		strh	r2, [r3]
 305              	.L5:
  79:.\wiznet5500.c **** 		for(uint16_t k=0; k<1024; k++){
 306              		.loc 2 79 0 is_stmt 0 discriminator 1
 307 0146 3B1C     		mov	r3, r7
 308 0148 3E33     		add	r3, r3, #62
 309 014a 1A88     		ldrh	r2, [r3]
 310 014c 084B     		ldr	r3, .L8+8
 311 014e 9A42     		cmp	r2, r3
 312 0150 E2D9     		bls	.L6
 313              	.LBE2:
  82:.\wiznet5500.c **** 		}
  83:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 314              		.loc 2 83 0 is_stmt 1
 315 0152 0120     		mov	r0, #1
 316 0154 FFF7FEFF 		bl	WIZ_SS_Write
  84:.\wiznet5500.c ****     
  85:.\wiznet5500.c ****     return wiznetOldMacAddr[5];
 317              		.loc 2 85 0
 318 0158 3B1C     		mov	r3, r7
 319 015a 0C33     		add	r3, r3, #12
 320 015c 5B79     		ldrb	r3, [r3, #5]
  86:.\wiznet5500.c **** }
 321              		.loc 2 86 0
 322 015e 181C     		mov	r0, r3
 323 0160 BD46     		mov	sp, r7
 324 0162 10B0     		add	sp, sp, #64
 325              		@ sp needed
 326 0164 80BD     		pop	{r7, pc}
 327              	.L9:
 328 0166 C046     		.align	2
 329              	.L8:
 330 0168 00000000 		.word	.LC0
 331 016c 14000000 		.word	.LC1
 332 0170 FF030000 		.word	1023
 333              		.cfi_endproc
 334              	.LFE34:
 335              		.size	wiznetInit, .-wiznetInit
 336              		.section	.text.wiznetOpen,"ax",%progbits
 337              		.align	2
 338              		.global	wiznetOpen
 339              		.code	16
 340              		.thumb_func
 341              		.type	wiznetOpen, %function
 342              	wiznetOpen:
 343              	.LFB35:
  87:.\wiznet5500.c **** 
  88:.\wiznet5500.c **** // Public Functions
  89:.\wiznet5500.c **** void wiznetOpen(void){
 344              		.loc 2 89 0
 345              		.cfi_startproc
 346 0000 80B5     		push	{r7, lr}
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 9


 349              		.cfi_offset 14, -4
 350 0002 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
  90:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x01); // OPEN UDP on Socket 0
 352              		.loc 2 90 0
 353 0004 0120     		mov	r0, #1
 354 0006 0121     		mov	r1, #1
 355 0008 0122     		mov	r2, #1
 356 000a FFF7FEFF 		bl	wiznetWrite8b
  91:.\wiznet5500.c **** }
 357              		.loc 2 91 0
 358 000e BD46     		mov	sp, r7
 359              		@ sp needed
 360 0010 80BD     		pop	{r7, pc}
 361              		.cfi_endproc
 362              	.LFE35:
 363              		.size	wiznetOpen, .-wiznetOpen
 364 0012 C046     		.section	.text.wiznetClose,"ax",%progbits
 365              		.align	2
 366              		.global	wiznetClose
 367              		.code	16
 368              		.thumb_func
 369              		.type	wiznetClose, %function
 370              	wiznetClose:
 371              	.LFB36:
  92:.\wiznet5500.c **** 
  93:.\wiznet5500.c **** void wiznetClose(void){
 372              		.loc 2 93 0
 373              		.cfi_startproc
 374 0000 80B5     		push	{r7, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 7, -8
 377              		.cfi_offset 14, -4
 378 0002 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
  94:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x10); // Close UDP on Socket 0
 380              		.loc 2 94 0
 381 0004 0120     		mov	r0, #1
 382 0006 0121     		mov	r1, #1
 383 0008 1022     		mov	r2, #16
 384 000a FFF7FEFF 		bl	wiznetWrite8b
  95:.\wiznet5500.c **** }
 385              		.loc 2 95 0
 386 000e BD46     		mov	sp, r7
 387              		@ sp needed
 388 0010 80BD     		pop	{r7, pc}
 389              		.cfi_endproc
 390              	.LFE36:
 391              		.size	wiznetClose, .-wiznetClose
 392 0012 C046     		.section	.text.wiznetSend,"ax",%progbits
 393              		.align	2
 394              		.global	wiznetSend
 395              		.code	16
 396              		.thumb_func
 397              		.type	wiznetSend, %function
 398              	wiznetSend:
 399              	.LFB37:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 10


  96:.\wiznet5500.c **** 
  97:.\wiznet5500.c **** void wiznetSend(void){
 400              		.loc 2 97 0
 401              		.cfi_startproc
 402 0000 80B5     		push	{r7, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
  98:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 408              		.loc 2 98 0
 409 0004 0A4B     		ldr	r3, .L13
 410 0006 1B88     		ldrh	r3, [r3]
 411 0008 2420     		mov	r0, #36
 412 000a 0121     		mov	r1, #1
 413 000c 1A1C     		mov	r2, r3
 414 000e FFF7FEFF 		bl	wiznetWrite16b
  99:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x20);
 415              		.loc 2 99 0
 416 0012 0120     		mov	r0, #1
 417 0014 0121     		mov	r1, #1
 418 0016 2022     		mov	r2, #32
 419 0018 FFF7FEFF 		bl	wiznetWrite8b
 100:.\wiznet5500.c **** 	wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 420              		.loc 2 100 0
 421 001c 2420     		mov	r0, #36
 422 001e 0121     		mov	r1, #1
 423 0020 FFF7FEFF 		bl	wiznetRead16b
 424 0024 031C     		mov	r3, r0
 425 0026 1A1C     		mov	r2, r3
 426 0028 014B     		ldr	r3, .L13
 427 002a 1A80     		strh	r2, [r3]
 101:.\wiznet5500.c **** }
 428              		.loc 2 101 0
 429 002c BD46     		mov	sp, r7
 430              		@ sp needed
 431 002e 80BD     		pop	{r7, pc}
 432              	.L14:
 433              		.align	2
 434              	.L13:
 435 0030 00000000 		.word	wiznetTxPointer
 436              		.cfi_endproc
 437              	.LFE37:
 438              		.size	wiznetSend, .-wiznetSend
 439              		.section	.text.wiznetReceive,"ax",%progbits
 440              		.align	2
 441              		.global	wiznetReceive
 442              		.code	16
 443              		.thumb_func
 444              		.type	wiznetReceive, %function
 445              	wiznetReceive:
 446              	.LFB38:
 102:.\wiznet5500.c **** 
 103:.\wiznet5500.c **** void wiznetReceive(void){
 447              		.loc 2 103 0
 448              		.cfi_startproc
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 11


 449 0000 80B5     		push	{r7, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 00AF     		add	r7, sp, #0
 454              		.cfi_def_cfa_register 7
 104:.\wiznet5500.c **** 	uint16_t recvSize;
 105:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG);
 455              		.loc 2 105 0
 456 0004 2820     		mov	r0, #40
 457 0006 0121     		mov	r1, #1
 458 0008 FFF7FEFF 		bl	wiznetRead16b
 459 000c 031C     		mov	r3, r0
 460 000e 1A1C     		mov	r2, r3
 461 0010 074B     		ldr	r3, .L16
 462 0012 1A80     		strh	r2, [r3]
 106:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 463              		.loc 2 106 0
 464 0014 0120     		mov	r0, #1
 465 0016 0121     		mov	r1, #1
 466 0018 4022     		mov	r2, #64
 467 001a FFF7FEFF 		bl	wiznetWrite8b
 107:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 468              		.loc 2 107 0
 469 001e 044B     		ldr	r3, .L16
 470 0020 1B88     		ldrh	r3, [r3]
 471 0022 2820     		mov	r0, #40
 472 0024 0121     		mov	r1, #1
 473 0026 1A1C     		mov	r2, r3
 474 0028 FFF7FEFF 		bl	wiznetWrite16b
 108:.\wiznet5500.c **** 	
 109:.\wiznet5500.c **** 	// printf(%u,wiznetRxPointer);
 110:.\wiznet5500.c **** }
 475              		.loc 2 110 0
 476 002c BD46     		mov	sp, r7
 477              		@ sp needed
 478 002e 80BD     		pop	{r7, pc}
 479              	.L17:
 480              		.align	2
 481              	.L16:
 482 0030 02000000 		.word	wiznetRxPointer
 483              		.cfi_endproc
 484              	.LFE38:
 485              		.size	wiznetReceive, .-wiznetReceive
 486              		.section	.text.wiznetClearInterrupts,"ax",%progbits
 487              		.align	2
 488              		.global	wiznetClearInterrupts
 489              		.code	16
 490              		.thumb_func
 491              		.type	wiznetClearInterrupts, %function
 492              	wiznetClearInterrupts:
 493              	.LFB39:
 111:.\wiznet5500.c **** 
 112:.\wiznet5500.c **** // void wiznetReceive(void){
 113:.\wiznet5500.c **** 	
 114:.\wiznet5500.c **** // }
 115:.\wiznet5500.c **** 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 12


 116:.\wiznet5500.c **** // uint8_t wiznetReadInterrupts(void){
 117:.\wiznet5500.c **** // }
 118:.\wiznet5500.c **** 
 119:.\wiznet5500.c **** void wiznetClearInterrupts(void){
 494              		.loc 2 119 0
 495              		.cfi_startproc
 496 0000 80B5     		push	{r7, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 120:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IR,WIZNET_BLK_S0_REG, 0xFF);
 502              		.loc 2 120 0
 503 0004 0220     		mov	r0, #2
 504 0006 0121     		mov	r1, #1
 505 0008 FF22     		mov	r2, #255
 506 000a FFF7FEFF 		bl	wiznetWrite8b
 121:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIR,WIZNET_BLK_COMMON, 0xFF);
 507              		.loc 2 121 0
 508 000e 1720     		mov	r0, #23
 509 0010 0021     		mov	r1, #0
 510 0012 FF22     		mov	r2, #255
 511 0014 FFF7FEFF 		bl	wiznetWrite8b
 122:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IR,WIZNET_BLK_COMMON, 0xFF); // Counter-intuitive, but datasheet specifies wr
 512              		.loc 2 122 0
 513 0018 1520     		mov	r0, #21
 514 001a 0021     		mov	r1, #0
 515 001c FF22     		mov	r2, #255
 516 001e FFF7FEFF 		bl	wiznetWrite8b
 123:.\wiznet5500.c **** }
 517              		.loc 2 123 0
 518 0022 BD46     		mov	sp, r7
 519              		@ sp needed
 520 0024 80BD     		pop	{r7, pc}
 521              		.cfi_endproc
 522              	.LFE39:
 523              		.size	wiznetClearInterrupts, .-wiznetClearInterrupts
 524 0026 C046     		.section	.text.wiznetConfigInterrupts,"ax",%progbits
 525              		.align	2
 526              		.global	wiznetConfigInterrupts
 527              		.code	16
 528              		.thumb_func
 529              		.type	wiznetConfigInterrupts, %function
 530              	wiznetConfigInterrupts:
 531              	.LFB40:
 124:.\wiznet5500.c **** 
 125:.\wiznet5500.c **** void wiznetConfigInterrupts(uint8_t commonInt, uint8_t socketInt){
 532              		.loc 2 125 0
 533              		.cfi_startproc
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 82B0     		sub	sp, sp, #8
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 13


 541              		.cfi_def_cfa_register 7
 542 0006 0A1C     		mov	r2, r1
 543 0008 FB1D     		add	r3, r7, #7
 544 000a 011C     		add	r1, r0, #0
 545 000c 1970     		strb	r1, [r3]
 546 000e BB1D     		add	r3, r7, #6
 547 0010 1A70     		strb	r2, [r3]
 126:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_IMR,WIZNET_BLK_S0_REG, socketInt);
 548              		.loc 2 126 0
 549 0012 BB1D     		add	r3, r7, #6
 550 0014 1B78     		ldrb	r3, [r3]
 551 0016 2C20     		mov	r0, #44
 552 0018 0121     		mov	r1, #1
 553 001a 1A1C     		mov	r2, r3
 554 001c FFF7FEFF 		bl	wiznetWrite8b
 127:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_SIMR,WIZNET_BLK_COMMON, 0x01); // Hardwired to just Socket 0
 555              		.loc 2 127 0
 556 0020 1820     		mov	r0, #24
 557 0022 0021     		mov	r1, #0
 558 0024 0122     		mov	r2, #1
 559 0026 FFF7FEFF 		bl	wiznetWrite8b
 128:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_IMR,WIZNET_BLK_COMMON, commonInt);
 560              		.loc 2 128 0
 561 002a FB1D     		add	r3, r7, #7
 562 002c 1B78     		ldrb	r3, [r3]
 563 002e 1620     		mov	r0, #22
 564 0030 0021     		mov	r1, #0
 565 0032 1A1C     		mov	r2, r3
 566 0034 FFF7FEFF 		bl	wiznetWrite8b
 129:.\wiznet5500.c **** }
 567              		.loc 2 129 0
 568 0038 BD46     		mov	sp, r7
 569 003a 02B0     		add	sp, sp, #8
 570              		@ sp needed
 571 003c 80BD     		pop	{r7, pc}
 572              		.cfi_endproc
 573              	.LFE40:
 574              		.size	wiznetConfigInterrupts, .-wiznetConfigInterrupts
 575 003e C046     		.section	.text.wiznetReadUdpFrame,"ax",%progbits
 576              		.align	2
 577              		.global	wiznetReadUdpFrame
 578              		.code	16
 579              		.thumb_func
 580              		.type	wiznetReadUdpFrame, %function
 581              	wiznetReadUdpFrame:
 582              	.LFB41:
 130:.\wiznet5500.c **** 
 131:.\wiznet5500.c **** uint16_t wiznetReadUdpFrame(uint8_t *array, uint8_t len){
 583              		.loc 2 131 0
 584              		.cfi_startproc
 585 0000 80B5     		push	{r7, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 82B0     		sub	sp, sp, #8
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 14


 592              		.cfi_def_cfa_register 7
 593 0006 7860     		str	r0, [r7, #4]
 594 0008 0A1C     		mov	r2, r1
 595 000a FB1C     		add	r3, r7, #3
 596 000c 1A70     		strb	r2, [r3]
 132:.\wiznet5500.c **** 	wiznetReadArray(wiznetRxPointer, WIZNET_BLK_S0_RX, array, len);
 597              		.loc 2 132 0
 598 000e 114B     		ldr	r3, .L22
 599 0010 1988     		ldrh	r1, [r3]
 600 0012 7A68     		ldr	r2, [r7, #4]
 601 0014 FB1C     		add	r3, r7, #3
 602 0016 1B78     		ldrb	r3, [r3]
 603 0018 081C     		mov	r0, r1
 604 001a 0321     		mov	r1, #3
 605 001c FFF7FEFF 		bl	wiznetReadArray
 133:.\wiznet5500.c **** 	
 134:.\wiznet5500.c **** 	// uint16_t recvSize = 0;
 135:.\wiznet5500.c **** 	wiznetRxPointer = wiznetRead16b(WIZNET_Sn_RX_WR,WIZNET_BLK_S0_REG);
 606              		.loc 2 135 0
 607 0020 2A20     		mov	r0, #42
 608 0022 0121     		mov	r1, #1
 609 0024 FFF7FEFF 		bl	wiznetRead16b
 610 0028 031C     		mov	r3, r0
 611 002a 1A1C     		mov	r2, r3
 612 002c 094B     		ldr	r3, .L22
 613 002e 1A80     		strh	r2, [r3]
 136:.\wiznet5500.c **** 	wiznetWrite16b(WIZNET_Sn_RX_RD,WIZNET_BLK_S0_REG,wiznetRxPointer);
 614              		.loc 2 136 0
 615 0030 084B     		ldr	r3, .L22
 616 0032 1B88     		ldrh	r3, [r3]
 617 0034 2820     		mov	r0, #40
 618 0036 0121     		mov	r1, #1
 619 0038 1A1C     		mov	r2, r3
 620 003a FFF7FEFF 		bl	wiznetWrite16b
 137:.\wiznet5500.c **** 	wiznetWrite8b(WIZNET_Sn_CR,WIZNET_BLK_S0_REG,0x40);
 621              		.loc 2 137 0
 622 003e 0120     		mov	r0, #1
 623 0040 0121     		mov	r1, #1
 624 0042 4022     		mov	r2, #64
 625 0044 FFF7FEFF 		bl	wiznetWrite8b
 138:.\wiznet5500.c **** 	return wiznetRxPointer;
 626              		.loc 2 138 0
 627 0048 024B     		ldr	r3, .L22
 628 004a 1B88     		ldrh	r3, [r3]
 139:.\wiznet5500.c **** 	// return recvSize;
 140:.\wiznet5500.c **** }
 629              		.loc 2 140 0
 630 004c 181C     		mov	r0, r3
 631 004e BD46     		mov	sp, r7
 632 0050 02B0     		add	sp, sp, #8
 633              		@ sp needed
 634 0052 80BD     		pop	{r7, pc}
 635              	.L23:
 636              		.align	2
 637              	.L22:
 638 0054 02000000 		.word	wiznetRxPointer
 639              		.cfi_endproc
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 15


 640              	.LFE41:
 641              		.size	wiznetReadUdpFrame, .-wiznetReadUdpFrame
 642              		.section	.text.wiznetWriteUdpFrame,"ax",%progbits
 643              		.align	2
 644              		.global	wiznetWriteUdpFrame
 645              		.code	16
 646              		.thumb_func
 647              		.type	wiznetWriteUdpFrame, %function
 648              	wiznetWriteUdpFrame:
 649              	.LFB42:
 141:.\wiznet5500.c **** 
 142:.\wiznet5500.c **** uint16_t wiznetWriteUdpFrame(uint8_t *array, uint8_t len){
 650              		.loc 2 142 0
 651              		.cfi_startproc
 652 0000 80B5     		push	{r7, lr}
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 82B0     		sub	sp, sp, #8
 657              		.cfi_def_cfa_offset 16
 658 0004 00AF     		add	r7, sp, #0
 659              		.cfi_def_cfa_register 7
 660 0006 7860     		str	r0, [r7, #4]
 661 0008 0A1C     		mov	r2, r1
 662 000a FB1C     		add	r3, r7, #3
 663 000c 1A70     		strb	r2, [r3]
 143:.\wiznet5500.c **** 	
 144:.\wiznet5500.c **** 	// wiznetTxPointer = wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
 145:.\wiznet5500.c **** 	// wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 146:.\wiznet5500.c **** 	// wiznetTxPointer += len;																	
 147:.\wiznet5500.c **** 	// wiznetWrite16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG,wiznetTxPointer);
 148:.\wiznet5500.c **** 	
 149:.\wiznet5500.c **** 	// Re-ordered the above and put the pointer manip in the Send method due to fluke.
 150:.\wiznet5500.c **** 	wiznetWriteArray(wiznetTxPointer,WIZNET_BLK_S0_TX,array,len);
 664              		.loc 2 150 0
 665 000e 0C4B     		ldr	r3, .L26
 666 0010 1988     		ldrh	r1, [r3]
 667 0012 7A68     		ldr	r2, [r7, #4]
 668 0014 FB1C     		add	r3, r7, #3
 669 0016 1B78     		ldrb	r3, [r3]
 670 0018 081C     		mov	r0, r1
 671 001a 0221     		mov	r1, #2
 672 001c FFF7FEFF 		bl	wiznetWriteArray
 151:.\wiznet5500.c **** 	wiznetTxPointer += len;
 673              		.loc 2 151 0
 674 0020 FB1C     		add	r3, r7, #3
 675 0022 1B78     		ldrb	r3, [r3]
 676 0024 9AB2     		uxth	r2, r3
 677 0026 064B     		ldr	r3, .L26
 678 0028 1B88     		ldrh	r3, [r3]
 679 002a D318     		add	r3, r2, r3
 680 002c 9AB2     		uxth	r2, r3
 681 002e 044B     		ldr	r3, .L26
 682 0030 1A80     		strh	r2, [r3]
 152:.\wiznet5500.c **** 	
 153:.\wiznet5500.c **** 	// CyDelay(10); // These two lines proved that the fluke with the WizNet is not time-variant
 154:.\wiznet5500.c **** 	// wiznetRead16b(WIZNET_Sn_TX_WR,WIZNET_BLK_S0_REG);
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 16


 155:.\wiznet5500.c **** 	return wiznetTxPointer;
 683              		.loc 2 155 0
 684 0032 034B     		ldr	r3, .L26
 685 0034 1B88     		ldrh	r3, [r3]
 156:.\wiznet5500.c **** }
 686              		.loc 2 156 0
 687 0036 181C     		mov	r0, r3
 688 0038 BD46     		mov	sp, r7
 689 003a 02B0     		add	sp, sp, #8
 690              		@ sp needed
 691 003c 80BD     		pop	{r7, pc}
 692              	.L27:
 693 003e C046     		.align	2
 694              	.L26:
 695 0040 00000000 		.word	wiznetTxPointer
 696              		.cfi_endproc
 697              	.LFE42:
 698              		.size	wiznetWriteUdpFrame, .-wiznetWriteUdpFrame
 699              		.section	.rodata
 700 0026 0000     		.align	2
 701              	.LC8:
 702 0028 0A0900   		.ascii	"\012\011\000"
 703 002b 00       		.align	2
 704              	.LC10:
 705 002c 25580900 		.ascii	"%X\011\000"
 706              		.section	.text.wiznetPrintRegisters,"ax",%progbits
 707              		.align	2
 708              		.global	wiznetPrintRegisters
 709              		.code	16
 710              		.thumb_func
 711              		.type	wiznetPrintRegisters, %function
 712              	wiznetPrintRegisters:
 713              	.LFB43:
 157:.\wiznet5500.c **** 
 158:.\wiznet5500.c **** void wiznetPrintRegisters(uint8_t blkSelect){
 714              		.loc 2 158 0
 715              		.cfi_startproc
 716 0000 80B5     		push	{r7, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 C4B0     		sub	sp, sp, #272
 721              		.cfi_def_cfa_offset 280
 722 0004 00AF     		add	r7, sp, #0
 723              		.cfi_def_cfa_register 7
 724 0006 021C     		mov	r2, r0
 725 0008 444B     		ldr	r3, .L35
 726 000a 8821     		mov	r1, #136
 727 000c 4900     		lsl	r1, r1, #1
 728 000e C919     		add	r1, r1, r7
 729 0010 CB18     		add	r3, r1, r3
 730 0012 1A70     		strb	r2, [r3]
 159:.\wiznet5500.c **** 	uint8_t readArray[256];
 160:.\wiznet5500.c **** 	wiznetReadArray(0, blkSelect, readArray, 255);
 731              		.loc 2 160 0
 732 0014 414B     		ldr	r3, .L35
 733 0016 8822     		mov	r2, #136
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 17


 734 0018 5200     		lsl	r2, r2, #1
 735 001a D219     		add	r2, r2, r7
 736 001c D318     		add	r3, r2, r3
 737 001e 1A78     		ldrb	r2, [r3]
 738 0020 3B1C     		mov	r3, r7
 739 0022 0C33     		add	r3, r3, #12
 740 0024 0020     		mov	r0, #0
 741 0026 111C     		mov	r1, r2
 742 0028 1A1C     		mov	r2, r3
 743 002a FF23     		mov	r3, #255
 744 002c FFF7FEFF 		bl	wiznetReadArray
 161:.\wiznet5500.c **** 	
 162:.\wiznet5500.c **** 	printf("\n\t");
 745              		.loc 2 162 0
 746 0030 3B4B     		ldr	r3, .L35+4
 747 0032 181C     		mov	r0, r3
 748 0034 FFF7FEFF 		bl	printf
 749              	.LBB3:
 163:.\wiznet5500.c **** 	for(uint8_t c=0; c<16; c++)	printf("%X\t",c);
 750              		.loc 2 163 0
 751 0038 1021     		mov	r1, #16
 752 003a FF31     		add	r1, r1, #255
 753 003c 7B18     		add	r3, r7, r1
 754 003e 0022     		mov	r2, #0
 755 0040 1A70     		strb	r2, [r3]
 756 0042 11E0     		b	.L29
 757              	.L30:
 758              		.loc 2 163 0 is_stmt 0 discriminator 2
 759 0044 1022     		mov	r2, #16
 760 0046 FF32     		add	r2, r2, #255
 761 0048 BB18     		add	r3, r7, r2
 762 004a 1B78     		ldrb	r3, [r3]
 763 004c 354A     		ldr	r2, .L35+8
 764 004e 101C     		mov	r0, r2
 765 0050 191C     		mov	r1, r3
 766 0052 FFF7FEFF 		bl	printf
 767 0056 1021     		mov	r1, #16
 768 0058 FF31     		add	r1, r1, #255
 769 005a 7B18     		add	r3, r7, r1
 770 005c 1A78     		ldrb	r2, [r3]
 771 005e 1021     		mov	r1, #16
 772 0060 FF31     		add	r1, r1, #255
 773 0062 7B18     		add	r3, r7, r1
 774 0064 0132     		add	r2, r2, #1
 775 0066 1A70     		strb	r2, [r3]
 776              	.L29:
 777              		.loc 2 163 0 discriminator 1
 778 0068 1022     		mov	r2, #16
 779 006a FF32     		add	r2, r2, #255
 780 006c BB18     		add	r3, r7, r2
 781 006e 1B78     		ldrb	r3, [r3]
 782 0070 0F2B     		cmp	r3, #15
 783 0072 E7D9     		bls	.L30
 784              	.LBE3:
 164:.\wiznet5500.c **** 	printf("\n");
 785              		.loc 2 164 0 is_stmt 1
 786 0074 0A20     		mov	r0, #10
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 18


 787 0076 FFF7FEFF 		bl	putchar
 788              	.LBB4:
 165:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 789              		.loc 2 165 0
 790 007a 8721     		mov	r1, #135
 791 007c 4900     		lsl	r1, r1, #1
 792 007e 7B18     		add	r3, r7, r1
 793 0080 0022     		mov	r2, #0
 794 0082 1A70     		strb	r2, [r3]
 795 0084 3EE0     		b	.L31
 796              	.L34:
 166:.\wiznet5500.c **** 		printf("%X\t",j);
 797              		.loc 2 166 0
 798 0086 8722     		mov	r2, #135
 799 0088 5200     		lsl	r2, r2, #1
 800 008a BB18     		add	r3, r7, r2
 801 008c 1B78     		ldrb	r3, [r3]
 802 008e 254A     		ldr	r2, .L35+8
 803 0090 101C     		mov	r0, r2
 804 0092 191C     		mov	r1, r3
 805 0094 FFF7FEFF 		bl	printf
 806              	.LBB5:
 167:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 807              		.loc 2 167 0
 808 0098 0E21     		mov	r1, #14
 809 009a FF31     		add	r1, r1, #255
 810 009c 7B18     		add	r3, r7, r1
 811 009e 0022     		mov	r2, #0
 812 00a0 1A70     		strb	r2, [r3]
 813 00a2 1DE0     		b	.L32
 814              	.L33:
 168:.\wiznet5500.c **** 			printf("%X\t",readArray[(16*j)+k]);
 815              		.loc 2 168 0 discriminator 2
 816 00a4 8722     		mov	r2, #135
 817 00a6 5200     		lsl	r2, r2, #1
 818 00a8 BB18     		add	r3, r7, r2
 819 00aa 1B78     		ldrb	r3, [r3]
 820 00ac 1A01     		lsl	r2, r3, #4
 821 00ae 0E21     		mov	r1, #14
 822 00b0 FF31     		add	r1, r1, #255
 823 00b2 7B18     		add	r3, r7, r1
 824 00b4 1B78     		ldrb	r3, [r3]
 825 00b6 D318     		add	r3, r2, r3
 826 00b8 1B4A     		ldr	r2, .L35+12
 827 00ba 8821     		mov	r1, #136
 828 00bc 4900     		lsl	r1, r1, #1
 829 00be C919     		add	r1, r1, r7
 830 00c0 8A18     		add	r2, r1, r2
 831 00c2 D35C     		ldrb	r3, [r2, r3]
 832 00c4 174A     		ldr	r2, .L35+8
 833 00c6 101C     		mov	r0, r2
 834 00c8 191C     		mov	r1, r3
 835 00ca FFF7FEFF 		bl	printf
 167:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 836              		.loc 2 167 0 discriminator 2
 837 00ce 0E22     		mov	r2, #14
 838 00d0 FF32     		add	r2, r2, #255
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 19


 839 00d2 BB18     		add	r3, r7, r2
 840 00d4 1A78     		ldrb	r2, [r3]
 841 00d6 0E21     		mov	r1, #14
 842 00d8 FF31     		add	r1, r1, #255
 843 00da 7B18     		add	r3, r7, r1
 844 00dc 0132     		add	r2, r2, #1
 845 00de 1A70     		strb	r2, [r3]
 846              	.L32:
 167:.\wiznet5500.c **** 		for(uint8_t k=0; k<16; k++){
 847              		.loc 2 167 0 is_stmt 0 discriminator 1
 848 00e0 0E22     		mov	r2, #14
 849 00e2 FF32     		add	r2, r2, #255
 850 00e4 BB18     		add	r3, r7, r2
 851 00e6 1B78     		ldrb	r3, [r3]
 852 00e8 0F2B     		cmp	r3, #15
 853 00ea DBD9     		bls	.L33
 854              	.LBE5:
 169:.\wiznet5500.c **** 		}
 170:.\wiznet5500.c **** 		printf("\n");
 855              		.loc 2 170 0 is_stmt 1
 856 00ec 0A20     		mov	r0, #10
 857 00ee FFF7FEFF 		bl	putchar
 165:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 858              		.loc 2 165 0
 859 00f2 8721     		mov	r1, #135
 860 00f4 4900     		lsl	r1, r1, #1
 861 00f6 7B18     		add	r3, r7, r1
 862 00f8 1A78     		ldrb	r2, [r3]
 863 00fa 8721     		mov	r1, #135
 864 00fc 4900     		lsl	r1, r1, #1
 865 00fe 7B18     		add	r3, r7, r1
 866 0100 0132     		add	r2, r2, #1
 867 0102 1A70     		strb	r2, [r3]
 868              	.L31:
 165:.\wiznet5500.c **** 	for(uint8_t j=0; j<8; j++){
 869              		.loc 2 165 0 is_stmt 0 discriminator 1
 870 0104 8722     		mov	r2, #135
 871 0106 5200     		lsl	r2, r2, #1
 872 0108 BB18     		add	r3, r7, r2
 873 010a 1B78     		ldrb	r3, [r3]
 874 010c 072B     		cmp	r3, #7
 875 010e BAD9     		bls	.L34
 876              	.LBE4:
 171:.\wiznet5500.c **** 	}
 172:.\wiznet5500.c **** 	printf("\n");
 877              		.loc 2 172 0 is_stmt 1
 878 0110 0A20     		mov	r0, #10
 879 0112 FFF7FEFF 		bl	putchar
 173:.\wiznet5500.c **** }
 880              		.loc 2 173 0
 881 0116 BD46     		mov	sp, r7
 882 0118 44B0     		add	sp, sp, #272
 883              		@ sp needed
 884 011a 80BD     		pop	{r7, pc}
 885              	.L36:
 886              		.align	2
 887              	.L35:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 20


 888 011c F7FEFFFF 		.word	-265
 889 0120 28000000 		.word	.LC8
 890 0124 2C000000 		.word	.LC10
 891 0128 FCFEFFFF 		.word	-260
 892              		.cfi_endproc
 893              	.LFE43:
 894              		.size	wiznetPrintRegisters, .-wiznetPrintRegisters
 895              		.section	.text.wiznetWrite8b,"ax",%progbits
 896              		.align	2
 897              		.global	wiznetWrite8b
 898              		.code	16
 899              		.thumb_func
 900              		.type	wiznetWrite8b, %function
 901              	wiznetWrite8b:
 902              	.LFB44:
 174:.\wiznet5500.c **** 
 175:.\wiznet5500.c **** // Private-like Functions, but visible until this is re-written in C++
 176:.\wiznet5500.c **** void wiznetWrite8b(uint16_t regAddr, uint8_t blkSel, uint8_t data){
 903              		.loc 2 176 0
 904              		.cfi_startproc
 905 0000 80B5     		push	{r7, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 82B0     		sub	sp, sp, #8
 910              		.cfi_def_cfa_offset 16
 911 0004 00AF     		add	r7, sp, #0
 912              		.cfi_def_cfa_register 7
 913 0006 BB1D     		add	r3, r7, #6
 914 0008 1880     		strh	r0, [r3]
 915 000a 7B1D     		add	r3, r7, #5
 916 000c 1970     		strb	r1, [r3]
 917 000e 3B1D     		add	r3, r7, #4
 918 0010 1A70     		strb	r2, [r3]
 177:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 919              		.loc 2 177 0
 920 0012 0020     		mov	r0, #0
 921 0014 FFF7FEFF 		bl	WIZ_SS_Write
 178:.\wiznet5500.c **** 		// Address Phase
 179:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 922              		.loc 2 179 0
 923 0018 BB1D     		add	r3, r7, #6
 924 001a 1B88     		ldrh	r3, [r3]
 925 001c 1B0A     		lsr	r3, r3, #8
 926 001e 9BB2     		uxth	r3, r3
 927 0020 DBB2     		uxtb	r3, r3
 928 0022 181C     		mov	r0, r3
 929 0024 FFF7FEFF 		bl	transferSPI
 180:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 930              		.loc 2 180 0
 931 0028 BB1D     		add	r3, r7, #6
 932 002a 1B88     		ldrh	r3, [r3]
 933 002c DBB2     		uxtb	r3, r3
 934 002e 181C     		mov	r0, r3
 935 0030 FFF7FEFF 		bl	transferSPI
 181:.\wiznet5500.c **** 		
 182:.\wiznet5500.c **** 		// Control Phase
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 21


 183:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 936              		.loc 2 183 0
 937 0034 7B1D     		add	r3, r7, #5
 938 0036 1B78     		ldrb	r3, [r3]
 939 0038 DB00     		lsl	r3, r3, #3
 940 003a DBB2     		uxtb	r3, r3
 941 003c 0422     		mov	r2, #4
 942 003e 1343     		orr	r3, r2
 943 0040 DBB2     		uxtb	r3, r3
 944 0042 DBB2     		uxtb	r3, r3
 945 0044 181C     		mov	r0, r3
 946 0046 FFF7FEFF 		bl	transferSPI
 184:.\wiznet5500.c **** 		
 185:.\wiznet5500.c **** 		// Data Phase
 186:.\wiznet5500.c **** 		transferSPI(data);
 947              		.loc 2 186 0
 948 004a 3B1D     		add	r3, r7, #4
 949 004c 1B78     		ldrb	r3, [r3]
 950 004e 181C     		mov	r0, r3
 951 0050 FFF7FEFF 		bl	transferSPI
 187:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 952              		.loc 2 187 0
 953 0054 0120     		mov	r0, #1
 954 0056 FFF7FEFF 		bl	WIZ_SS_Write
 188:.\wiznet5500.c **** 	// return response;
 189:.\wiznet5500.c **** }
 955              		.loc 2 189 0
 956 005a BD46     		mov	sp, r7
 957 005c 02B0     		add	sp, sp, #8
 958              		@ sp needed
 959 005e 80BD     		pop	{r7, pc}
 960              		.cfi_endproc
 961              	.LFE44:
 962              		.size	wiznetWrite8b, .-wiznetWrite8b
 963              		.section	.text.wiznetWrite16b,"ax",%progbits
 964              		.align	2
 965              		.global	wiznetWrite16b
 966              		.code	16
 967              		.thumb_func
 968              		.type	wiznetWrite16b, %function
 969              	wiznetWrite16b:
 970              	.LFB45:
 190:.\wiznet5500.c **** 
 191:.\wiznet5500.c **** void wiznetWrite16b(uint16_t regAddr, uint8_t blkSel, uint16_t data){
 971              		.loc 2 191 0
 972              		.cfi_startproc
 973 0000 80B5     		push	{r7, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
 976              		.cfi_offset 14, -4
 977 0002 82B0     		sub	sp, sp, #8
 978              		.cfi_def_cfa_offset 16
 979 0004 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 981 0006 BB1D     		add	r3, r7, #6
 982 0008 1880     		strh	r0, [r3]
 983 000a 7B1D     		add	r3, r7, #5
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 22


 984 000c 1970     		strb	r1, [r3]
 985 000e BB1C     		add	r3, r7, #2
 986 0010 1A80     		strh	r2, [r3]
 192:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 987              		.loc 2 192 0
 988 0012 0020     		mov	r0, #0
 989 0014 FFF7FEFF 		bl	WIZ_SS_Write
 193:.\wiznet5500.c **** 		// Address Phase
 194:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 990              		.loc 2 194 0
 991 0018 BB1D     		add	r3, r7, #6
 992 001a 1B88     		ldrh	r3, [r3]
 993 001c 1B0A     		lsr	r3, r3, #8
 994 001e 9BB2     		uxth	r3, r3
 995 0020 DBB2     		uxtb	r3, r3
 996 0022 181C     		mov	r0, r3
 997 0024 FFF7FEFF 		bl	transferSPI
 195:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 998              		.loc 2 195 0
 999 0028 BB1D     		add	r3, r7, #6
 1000 002a 1B88     		ldrh	r3, [r3]
 1001 002c DBB2     		uxtb	r3, r3
 1002 002e 181C     		mov	r0, r3
 1003 0030 FFF7FEFF 		bl	transferSPI
 196:.\wiznet5500.c **** 		
 197:.\wiznet5500.c **** 		// Control Phase
 198:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 1004              		.loc 2 198 0
 1005 0034 7B1D     		add	r3, r7, #5
 1006 0036 1B78     		ldrb	r3, [r3]
 1007 0038 DB00     		lsl	r3, r3, #3
 1008 003a DBB2     		uxtb	r3, r3
 1009 003c 0422     		mov	r2, #4
 1010 003e 1343     		orr	r3, r2
 1011 0040 DBB2     		uxtb	r3, r3
 1012 0042 DBB2     		uxtb	r3, r3
 1013 0044 181C     		mov	r0, r3
 1014 0046 FFF7FEFF 		bl	transferSPI
 199:.\wiznet5500.c **** 		
 200:.\wiznet5500.c **** 		// Data Phase
 201:.\wiznet5500.c **** 		transferSPI(data>>8);
 1015              		.loc 2 201 0
 1016 004a BB1C     		add	r3, r7, #2
 1017 004c 1B88     		ldrh	r3, [r3]
 1018 004e 1B0A     		lsr	r3, r3, #8
 1019 0050 9BB2     		uxth	r3, r3
 1020 0052 DBB2     		uxtb	r3, r3
 1021 0054 181C     		mov	r0, r3
 1022 0056 FFF7FEFF 		bl	transferSPI
 202:.\wiznet5500.c **** 		transferSPI(data&0xFF);
 1023              		.loc 2 202 0
 1024 005a BB1C     		add	r3, r7, #2
 1025 005c 1B88     		ldrh	r3, [r3]
 1026 005e DBB2     		uxtb	r3, r3
 1027 0060 181C     		mov	r0, r3
 1028 0062 FFF7FEFF 		bl	transferSPI
 203:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 23


 1029              		.loc 2 203 0
 1030 0066 0120     		mov	r0, #1
 1031 0068 FFF7FEFF 		bl	WIZ_SS_Write
 204:.\wiznet5500.c **** 	// return response;
 205:.\wiznet5500.c **** }
 1032              		.loc 2 205 0
 1033 006c BD46     		mov	sp, r7
 1034 006e 02B0     		add	sp, sp, #8
 1035              		@ sp needed
 1036 0070 80BD     		pop	{r7, pc}
 1037              		.cfi_endproc
 1038              	.LFE45:
 1039              		.size	wiznetWrite16b, .-wiznetWrite16b
 1040              		.section	.text.wiznetWriteArray,"ax",%progbits
 1041              		.align	2
 1042              		.global	wiznetWriteArray
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	wiznetWriteArray, %function
 1046              	wiznetWriteArray:
 1047              	.LFB46:
 206:.\wiznet5500.c **** 
 207:.\wiznet5500.c **** void wiznetWriteArray(uint16_t regAddr, uint8_t blkSel, uint8_t *srcArray, uint8_t len){
 1048              		.loc 2 207 0
 1049              		.cfi_startproc
 1050 0000 80B5     		push	{r7, lr}
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 84B0     		sub	sp, sp, #16
 1055              		.cfi_def_cfa_offset 24
 1056 0004 00AF     		add	r7, sp, #0
 1057              		.cfi_def_cfa_register 7
 1058 0006 3A60     		str	r2, [r7]
 1059 0008 1A1C     		mov	r2, r3
 1060 000a BB1D     		add	r3, r7, #6
 1061 000c 1880     		strh	r0, [r3]
 1062 000e 7B1D     		add	r3, r7, #5
 1063 0010 1970     		strb	r1, [r3]
 1064 0012 3B1D     		add	r3, r7, #4
 1065 0014 1A70     		strb	r2, [r3]
 208:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1066              		.loc 2 208 0
 1067 0016 0020     		mov	r0, #0
 1068 0018 FFF7FEFF 		bl	WIZ_SS_Write
 209:.\wiznet5500.c **** 		// Address Phase
 210:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1069              		.loc 2 210 0
 1070 001c BB1D     		add	r3, r7, #6
 1071 001e 1B88     		ldrh	r3, [r3]
 1072 0020 1B0A     		lsr	r3, r3, #8
 1073 0022 9BB2     		uxth	r3, r3
 1074 0024 DBB2     		uxtb	r3, r3
 1075 0026 181C     		mov	r0, r3
 1076 0028 FFF7FEFF 		bl	transferSPI
 211:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1077              		.loc 2 211 0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 24


 1078 002c BB1D     		add	r3, r7, #6
 1079 002e 1B88     		ldrh	r3, [r3]
 1080 0030 DBB2     		uxtb	r3, r3
 1081 0032 181C     		mov	r0, r3
 1082 0034 FFF7FEFF 		bl	transferSPI
 212:.\wiznet5500.c **** 		
 213:.\wiznet5500.c **** 		// Control Phase
 214:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x01<<2)|0x00);		
 1083              		.loc 2 214 0
 1084 0038 7B1D     		add	r3, r7, #5
 1085 003a 1B78     		ldrb	r3, [r3]
 1086 003c DB00     		lsl	r3, r3, #3
 1087 003e DBB2     		uxtb	r3, r3
 1088 0040 0422     		mov	r2, #4
 1089 0042 1343     		orr	r3, r2
 1090 0044 DBB2     		uxtb	r3, r3
 1091 0046 DBB2     		uxtb	r3, r3
 1092 0048 181C     		mov	r0, r3
 1093 004a FFF7FEFF 		bl	transferSPI
 1094              	.LBB6:
 215:.\wiznet5500.c **** 		
 216:.\wiznet5500.c **** 		// Data Phase
 217:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1095              		.loc 2 217 0
 1096 004e 3B1C     		mov	r3, r7
 1097 0050 0F33     		add	r3, r3, #15
 1098 0052 0022     		mov	r2, #0
 1099 0054 1A70     		strb	r2, [r3]
 1100 0056 0FE0     		b	.L40
 1101              	.L41:
 218:.\wiznet5500.c **** 			transferSPI(srcArray[k]);
 1102              		.loc 2 218 0 discriminator 2
 1103 0058 3B1C     		mov	r3, r7
 1104 005a 0F33     		add	r3, r3, #15
 1105 005c 1B78     		ldrb	r3, [r3]
 1106 005e 3A68     		ldr	r2, [r7]
 1107 0060 D318     		add	r3, r2, r3
 1108 0062 1B78     		ldrb	r3, [r3]
 1109 0064 181C     		mov	r0, r3
 1110 0066 FFF7FEFF 		bl	transferSPI
 217:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1111              		.loc 2 217 0 discriminator 2
 1112 006a 3B1C     		mov	r3, r7
 1113 006c 0F33     		add	r3, r3, #15
 1114 006e 1A78     		ldrb	r2, [r3]
 1115 0070 3B1C     		mov	r3, r7
 1116 0072 0F33     		add	r3, r3, #15
 1117 0074 0132     		add	r2, r2, #1
 1118 0076 1A70     		strb	r2, [r3]
 1119              	.L40:
 217:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1120              		.loc 2 217 0 is_stmt 0 discriminator 1
 1121 0078 3A1C     		mov	r2, r7
 1122 007a 0F32     		add	r2, r2, #15
 1123 007c 3B1D     		add	r3, r7, #4
 1124 007e 1278     		ldrb	r2, [r2]
 1125 0080 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 25


 1126 0082 9A42     		cmp	r2, r3
 1127 0084 E8D3     		bcc	.L41
 1128              	.LBE6:
 219:.\wiznet5500.c **** 		}
 220:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1129              		.loc 2 220 0 is_stmt 1
 1130 0086 0120     		mov	r0, #1
 1131 0088 FFF7FEFF 		bl	WIZ_SS_Write
 221:.\wiznet5500.c **** 	// return response;
 222:.\wiznet5500.c **** }
 1132              		.loc 2 222 0
 1133 008c BD46     		mov	sp, r7
 1134 008e 04B0     		add	sp, sp, #16
 1135              		@ sp needed
 1136 0090 80BD     		pop	{r7, pc}
 1137              		.cfi_endproc
 1138              	.LFE46:
 1139              		.size	wiznetWriteArray, .-wiznetWriteArray
 1140 0092 C046     		.section	.text.wiznetRead8b,"ax",%progbits
 1141              		.align	2
 1142              		.global	wiznetRead8b
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	wiznetRead8b, %function
 1146              	wiznetRead8b:
 1147              	.LFB47:
 223:.\wiznet5500.c **** 
 224:.\wiznet5500.c **** uint8_t wiznetRead8b(uint16_t regAddr, uint8_t blkSel){
 1148              		.loc 2 224 0
 1149              		.cfi_startproc
 1150 0000 90B5     		push	{r4, r7, lr}
 1151              		.cfi_def_cfa_offset 12
 1152              		.cfi_offset 4, -12
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 85B0     		sub	sp, sp, #20
 1156              		.cfi_def_cfa_offset 32
 1157 0004 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 1159 0006 0A1C     		mov	r2, r1
 1160 0008 BB1D     		add	r3, r7, #6
 1161 000a 011C     		add	r1, r0, #0
 1162 000c 1980     		strh	r1, [r3]
 1163 000e 7B1D     		add	r3, r7, #5
 1164 0010 1A70     		strb	r2, [r3]
 225:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1165              		.loc 2 225 0
 1166 0012 0020     		mov	r0, #0
 1167 0014 FFF7FEFF 		bl	WIZ_SS_Write
 226:.\wiznet5500.c **** 		// Address Phase
 227:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1168              		.loc 2 227 0
 1169 0018 BB1D     		add	r3, r7, #6
 1170 001a 1B88     		ldrh	r3, [r3]
 1171 001c 1B0A     		lsr	r3, r3, #8
 1172 001e 9BB2     		uxth	r3, r3
 1173 0020 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 26


 1174 0022 181C     		mov	r0, r3
 1175 0024 FFF7FEFF 		bl	transferSPI
 228:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1176              		.loc 2 228 0
 1177 0028 BB1D     		add	r3, r7, #6
 1178 002a 1B88     		ldrh	r3, [r3]
 1179 002c DBB2     		uxtb	r3, r3
 1180 002e 181C     		mov	r0, r3
 1181 0030 FFF7FEFF 		bl	transferSPI
 229:.\wiznet5500.c **** 		
 230:.\wiznet5500.c **** 		// Control Phase
 231:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1182              		.loc 2 231 0
 1183 0034 7B1D     		add	r3, r7, #5
 1184 0036 1B78     		ldrb	r3, [r3]
 1185 0038 DB00     		lsl	r3, r3, #3
 1186 003a DBB2     		uxtb	r3, r3
 1187 003c 181C     		mov	r0, r3
 1188 003e FFF7FEFF 		bl	transferSPI
 232:.\wiznet5500.c **** 		
 233:.\wiznet5500.c **** 		// Data Phase
 234:.\wiznet5500.c **** 		uint8_t result = transferSPI(0x00);
 1189              		.loc 2 234 0
 1190 0042 3C1C     		mov	r4, r7
 1191 0044 0F34     		add	r4, r4, #15
 1192 0046 0020     		mov	r0, #0
 1193 0048 FFF7FEFF 		bl	transferSPI
 1194 004c 031C     		mov	r3, r0
 1195 004e 2370     		strb	r3, [r4]
 235:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1196              		.loc 2 235 0
 1197 0050 0120     		mov	r0, #1
 1198 0052 FFF7FEFF 		bl	WIZ_SS_Write
 236:.\wiznet5500.c **** 	return result;
 1199              		.loc 2 236 0
 1200 0056 3B1C     		mov	r3, r7
 1201 0058 0F33     		add	r3, r3, #15
 1202 005a 1B78     		ldrb	r3, [r3]
 237:.\wiznet5500.c **** }
 1203              		.loc 2 237 0
 1204 005c 181C     		mov	r0, r3
 1205 005e BD46     		mov	sp, r7
 1206 0060 05B0     		add	sp, sp, #20
 1207              		@ sp needed
 1208 0062 90BD     		pop	{r4, r7, pc}
 1209              		.cfi_endproc
 1210              	.LFE47:
 1211              		.size	wiznetRead8b, .-wiznetRead8b
 1212              		.section	.text.wiznetRead16b,"ax",%progbits
 1213              		.align	2
 1214              		.global	wiznetRead16b
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	wiznetRead16b, %function
 1218              	wiznetRead16b:
 1219              	.LFB48:
 238:.\wiznet5500.c **** 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 27


 239:.\wiznet5500.c **** uint16_t wiznetRead16b(uint16_t regAddr, uint8_t blkSel){
 1220              		.loc 2 239 0
 1221              		.cfi_startproc
 1222 0000 80B5     		push	{r7, lr}
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 84B0     		sub	sp, sp, #16
 1227              		.cfi_def_cfa_offset 24
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 1230 0006 0A1C     		mov	r2, r1
 1231 0008 BB1D     		add	r3, r7, #6
 1232 000a 011C     		add	r1, r0, #0
 1233 000c 1980     		strh	r1, [r3]
 1234 000e 7B1D     		add	r3, r7, #5
 1235 0010 1A70     		strb	r2, [r3]
 240:.\wiznet5500.c **** 	uint16_t result;
 241:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1236              		.loc 2 241 0
 1237 0012 0020     		mov	r0, #0
 1238 0014 FFF7FEFF 		bl	WIZ_SS_Write
 242:.\wiznet5500.c **** 		// Address Phase
 243:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1239              		.loc 2 243 0
 1240 0018 BB1D     		add	r3, r7, #6
 1241 001a 1B88     		ldrh	r3, [r3]
 1242 001c 1B0A     		lsr	r3, r3, #8
 1243 001e 9BB2     		uxth	r3, r3
 1244 0020 DBB2     		uxtb	r3, r3
 1245 0022 181C     		mov	r0, r3
 1246 0024 FFF7FEFF 		bl	transferSPI
 244:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1247              		.loc 2 244 0
 1248 0028 BB1D     		add	r3, r7, #6
 1249 002a 1B88     		ldrh	r3, [r3]
 1250 002c DBB2     		uxtb	r3, r3
 1251 002e 181C     		mov	r0, r3
 1252 0030 FFF7FEFF 		bl	transferSPI
 245:.\wiznet5500.c **** 		
 246:.\wiznet5500.c **** 		// Control Phase
 247:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);		
 1253              		.loc 2 247 0
 1254 0034 7B1D     		add	r3, r7, #5
 1255 0036 1B78     		ldrb	r3, [r3]
 1256 0038 DB00     		lsl	r3, r3, #3
 1257 003a DBB2     		uxtb	r3, r3
 1258 003c 181C     		mov	r0, r3
 1259 003e FFF7FEFF 		bl	transferSPI
 248:.\wiznet5500.c **** 		
 249:.\wiznet5500.c **** 		// Data Phase
 250:.\wiznet5500.c **** 		result = transferSPI(0x00)<<8;
 1260              		.loc 2 250 0
 1261 0042 0020     		mov	r0, #0
 1262 0044 FFF7FEFF 		bl	transferSPI
 1263 0048 031C     		mov	r3, r0
 1264 004a 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 28


 1265 004c 3B1C     		mov	r3, r7
 1266 004e 0E33     		add	r3, r3, #14
 1267 0050 1202     		lsl	r2, r2, #8
 1268 0052 1A80     		strh	r2, [r3]
 251:.\wiznet5500.c **** 		result |= transferSPI(0x00);
 1269              		.loc 2 251 0
 1270 0054 0020     		mov	r0, #0
 1271 0056 FFF7FEFF 		bl	transferSPI
 1272 005a 031C     		mov	r3, r0
 1273 005c 191C     		mov	r1, r3
 1274 005e 3B1C     		mov	r3, r7
 1275 0060 0E33     		add	r3, r3, #14
 1276 0062 3A1C     		mov	r2, r7
 1277 0064 0E32     		add	r2, r2, #14
 1278 0066 1288     		ldrh	r2, [r2]
 1279 0068 0A43     		orr	r2, r1
 1280 006a 1A80     		strh	r2, [r3]
 252:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1281              		.loc 2 252 0
 1282 006c 0120     		mov	r0, #1
 1283 006e FFF7FEFF 		bl	WIZ_SS_Write
 253:.\wiznet5500.c **** 	return result;
 1284              		.loc 2 253 0
 1285 0072 3B1C     		mov	r3, r7
 1286 0074 0E33     		add	r3, r3, #14
 1287 0076 1B88     		ldrh	r3, [r3]
 254:.\wiznet5500.c **** }
 1288              		.loc 2 254 0
 1289 0078 181C     		mov	r0, r3
 1290 007a BD46     		mov	sp, r7
 1291 007c 04B0     		add	sp, sp, #16
 1292              		@ sp needed
 1293 007e 80BD     		pop	{r7, pc}
 1294              		.cfi_endproc
 1295              	.LFE48:
 1296              		.size	wiznetRead16b, .-wiznetRead16b
 1297              		.section	.text.wiznetReadArray,"ax",%progbits
 1298              		.align	2
 1299              		.global	wiznetReadArray
 1300              		.code	16
 1301              		.thumb_func
 1302              		.type	wiznetReadArray, %function
 1303              	wiznetReadArray:
 1304              	.LFB49:
 255:.\wiznet5500.c **** 
 256:.\wiznet5500.c **** void wiznetReadArray(uint16_t regAddr, uint8_t blkSel, uint8_t *dstArray, uint8_t len){
 1305              		.loc 2 256 0
 1306              		.cfi_startproc
 1307 0000 90B5     		push	{r4, r7, lr}
 1308              		.cfi_def_cfa_offset 12
 1309              		.cfi_offset 4, -12
 1310              		.cfi_offset 7, -8
 1311              		.cfi_offset 14, -4
 1312 0002 85B0     		sub	sp, sp, #20
 1313              		.cfi_def_cfa_offset 32
 1314 0004 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 29


 1316 0006 3A60     		str	r2, [r7]
 1317 0008 1A1C     		mov	r2, r3
 1318 000a BB1D     		add	r3, r7, #6
 1319 000c 1880     		strh	r0, [r3]
 1320 000e 7B1D     		add	r3, r7, #5
 1321 0010 1970     		strb	r1, [r3]
 1322 0012 3B1D     		add	r3, r7, #4
 1323 0014 1A70     		strb	r2, [r3]
 257:.\wiznet5500.c **** 	WIZ_SS_Write(LOW); // Begin a WizNet SPI Frame. Three Phases: Address, Control, Data
 1324              		.loc 2 257 0
 1325 0016 0020     		mov	r0, #0
 1326 0018 FFF7FEFF 		bl	WIZ_SS_Write
 258:.\wiznet5500.c **** 		// uint8_t count = 0;
 259:.\wiznet5500.c **** 		
 260:.\wiznet5500.c **** 		// Address Phase
 261:.\wiznet5500.c **** 		transferSPI(regAddr>>8);
 1327              		.loc 2 261 0
 1328 001c BB1D     		add	r3, r7, #6
 1329 001e 1B88     		ldrh	r3, [r3]
 1330 0020 1B0A     		lsr	r3, r3, #8
 1331 0022 9BB2     		uxth	r3, r3
 1332 0024 DBB2     		uxtb	r3, r3
 1333 0026 181C     		mov	r0, r3
 1334 0028 FFF7FEFF 		bl	transferSPI
 262:.\wiznet5500.c **** 		transferSPI(regAddr&0xFF);
 1335              		.loc 2 262 0
 1336 002c BB1D     		add	r3, r7, #6
 1337 002e 1B88     		ldrh	r3, [r3]
 1338 0030 DBB2     		uxtb	r3, r3
 1339 0032 181C     		mov	r0, r3
 1340 0034 FFF7FEFF 		bl	transferSPI
 263:.\wiznet5500.c **** 		
 264:.\wiznet5500.c **** 		// Control Phase
 265:.\wiznet5500.c **** 		transferSPI(((blkSel&0x1F)<<3)|(0x00<<2)|0x00);	
 1341              		.loc 2 265 0
 1342 0038 7B1D     		add	r3, r7, #5
 1343 003a 1B78     		ldrb	r3, [r3]
 1344 003c DB00     		lsl	r3, r3, #3
 1345 003e DBB2     		uxtb	r3, r3
 1346 0040 181C     		mov	r0, r3
 1347 0042 FFF7FEFF 		bl	transferSPI
 1348              	.LBB7:
 266:.\wiznet5500.c **** 		
 267:.\wiznet5500.c **** 		// Data Phase
 268:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1349              		.loc 2 268 0
 1350 0046 3B1C     		mov	r3, r7
 1351 0048 0F33     		add	r3, r3, #15
 1352 004a 0022     		mov	r2, #0
 1353 004c 1A70     		strb	r2, [r3]
 1354 004e 10E0     		b	.L47
 1355              	.L48:
 269:.\wiznet5500.c **** 			dstArray[k] = transferSPI(0x00);
 1356              		.loc 2 269 0 discriminator 2
 1357 0050 3B1C     		mov	r3, r7
 1358 0052 0F33     		add	r3, r3, #15
 1359 0054 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 30


 1360 0056 3A68     		ldr	r2, [r7]
 1361 0058 D418     		add	r4, r2, r3
 1362 005a 0020     		mov	r0, #0
 1363 005c FFF7FEFF 		bl	transferSPI
 1364 0060 031C     		mov	r3, r0
 1365 0062 2370     		strb	r3, [r4]
 268:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1366              		.loc 2 268 0 discriminator 2
 1367 0064 3B1C     		mov	r3, r7
 1368 0066 0F33     		add	r3, r3, #15
 1369 0068 1A78     		ldrb	r2, [r3]
 1370 006a 3B1C     		mov	r3, r7
 1371 006c 0F33     		add	r3, r3, #15
 1372 006e 0132     		add	r2, r2, #1
 1373 0070 1A70     		strb	r2, [r3]
 1374              	.L47:
 268:.\wiznet5500.c **** 		for(uint8_t k=0; k<len; k++){
 1375              		.loc 2 268 0 is_stmt 0 discriminator 1
 1376 0072 3A1C     		mov	r2, r7
 1377 0074 0F32     		add	r2, r2, #15
 1378 0076 3B1D     		add	r3, r7, #4
 1379 0078 1278     		ldrb	r2, [r2]
 1380 007a 1B78     		ldrb	r3, [r3]
 1381 007c 9A42     		cmp	r2, r3
 1382 007e E7D3     		bcc	.L48
 1383              	.LBE7:
 270:.\wiznet5500.c **** 			// count++;
 271:.\wiznet5500.c **** 			// printf("%u",k);
 272:.\wiznet5500.c **** 		}
 273:.\wiznet5500.c **** 	WIZ_SS_Write(HIGH); // WizNet SPI Frame Finished
 1384              		.loc 2 273 0 is_stmt 1
 1385 0080 0120     		mov	r0, #1
 1386 0082 FFF7FEFF 		bl	WIZ_SS_Write
 274:.\wiznet5500.c **** 	// return count;
 275:.\wiznet5500.c **** }
 1387              		.loc 2 275 0
 1388 0086 BD46     		mov	sp, r7
 1389 0088 05B0     		add	sp, sp, #20
 1390              		@ sp needed
 1391 008a 90BD     		pop	{r4, r7, pc}
 1392              		.cfi_endproc
 1393              	.LFE49:
 1394              		.size	wiznetReadArray, .-wiznetReadArray
 1395              		.text
 1396              	.Letext0:
 1397              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1398              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 1399              		.file 5 ".\\Generated_Source\\PSoC4/cytypes.h"
 1400              		.file 6 "<built-in>"
 1401              		.section	.debug_info,"",%progbits
 1402              	.Ldebug_info0:
 1403 0000 46050000 		.4byte	0x546
 1404 0004 0400     		.2byte	0x4
 1405 0006 00000000 		.4byte	.Ldebug_abbrev0
 1406 000a 04       		.byte	0x4
 1407 000b 01       		.uleb128 0x1
 1408 000c 12020000 		.4byte	.LASF53
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 31


 1409 0010 01       		.byte	0x1
 1410 0011 B4020000 		.4byte	.LASF54
 1411 0015 1A000000 		.4byte	.LASF55
 1412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1413 001d 00000000 		.4byte	0
 1414 0021 00000000 		.4byte	.Ldebug_line0
 1415 0025 02       		.uleb128 0x2
 1416 0026 01       		.byte	0x1
 1417 0027 06       		.byte	0x6
 1418 0028 DA000000 		.4byte	.LASF0
 1419 002c 03       		.uleb128 0x3
 1420 002d 87000000 		.4byte	.LASF3
 1421 0031 03       		.byte	0x3
 1422 0032 1C       		.byte	0x1c
 1423 0033 37000000 		.4byte	0x37
 1424 0037 02       		.uleb128 0x2
 1425 0038 01       		.byte	0x1
 1426 0039 08       		.byte	0x8
 1427 003a 04020000 		.4byte	.LASF1
 1428 003e 02       		.uleb128 0x2
 1429 003f 02       		.byte	0x2
 1430 0040 05       		.byte	0x5
 1431 0041 C6010000 		.4byte	.LASF2
 1432 0045 03       		.uleb128 0x3
 1433 0046 E3020000 		.4byte	.LASF4
 1434 004a 03       		.byte	0x3
 1435 004b 26       		.byte	0x26
 1436 004c 50000000 		.4byte	0x50
 1437 0050 02       		.uleb128 0x2
 1438 0051 02       		.byte	0x2
 1439 0052 07       		.byte	0x7
 1440 0053 A5010000 		.4byte	.LASF5
 1441 0057 02       		.uleb128 0x2
 1442 0058 04       		.byte	0x4
 1443 0059 05       		.byte	0x5
 1444 005a FC000000 		.4byte	.LASF6
 1445 005e 02       		.uleb128 0x2
 1446 005f 04       		.byte	0x4
 1447 0060 07       		.byte	0x7
 1448 0061 77010000 		.4byte	.LASF7
 1449 0065 02       		.uleb128 0x2
 1450 0066 08       		.byte	0x8
 1451 0067 05       		.byte	0x5
 1452 0068 CC000000 		.4byte	.LASF8
 1453 006c 02       		.uleb128 0x2
 1454 006d 08       		.byte	0x8
 1455 006e 07       		.byte	0x7
 1456 006f A1000000 		.4byte	.LASF9
 1457 0073 04       		.uleb128 0x4
 1458 0074 04       		.byte	0x4
 1459 0075 05       		.byte	0x5
 1460 0076 696E7400 		.ascii	"int\000"
 1461 007a 02       		.uleb128 0x2
 1462 007b 04       		.byte	0x4
 1463 007c 07       		.byte	0x7
 1464 007d 5F010000 		.4byte	.LASF10
 1465 0081 03       		.uleb128 0x3
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 32


 1466 0082 4B030000 		.4byte	.LASF11
 1467 0086 04       		.byte	0x4
 1468 0087 2A       		.byte	0x2a
 1469 0088 2C000000 		.4byte	0x2c
 1470 008c 03       		.uleb128 0x3
 1471 008d 1A010000 		.4byte	.LASF12
 1472 0091 04       		.byte	0x4
 1473 0092 36       		.byte	0x36
 1474 0093 45000000 		.4byte	0x45
 1475 0097 03       		.uleb128 0x3
 1476 0098 14010000 		.4byte	.LASF13
 1477 009c 05       		.byte	0x5
 1478 009d A1       		.byte	0xa1
 1479 009e 37000000 		.4byte	0x37
 1480 00a2 02       		.uleb128 0x2
 1481 00a3 04       		.byte	0x4
 1482 00a4 04       		.byte	0x4
 1483 00a5 FE010000 		.4byte	.LASF14
 1484 00a9 02       		.uleb128 0x2
 1485 00aa 08       		.byte	0x8
 1486 00ab 04       		.byte	0x4
 1487 00ac 23010000 		.4byte	.LASF15
 1488 00b0 02       		.uleb128 0x2
 1489 00b1 01       		.byte	0x1
 1490 00b2 08       		.byte	0x8
 1491 00b3 CD020000 		.4byte	.LASF16
 1492 00b7 02       		.uleb128 0x2
 1493 00b8 04       		.byte	0x4
 1494 00b9 07       		.byte	0x7
 1495 00ba EB010000 		.4byte	.LASF17
 1496 00be 05       		.uleb128 0x5
 1497 00bf 04       		.byte	0x4
 1498 00c0 C4000000 		.4byte	0xc4
 1499 00c4 06       		.uleb128 0x6
 1500 00c5 B0000000 		.4byte	0xb0
 1501 00c9 07       		.uleb128 0x7
 1502 00ca 7D030000 		.4byte	.LASF56
 1503 00ce 01       		.byte	0x1
 1504 00cf 0D       		.byte	0xd
 1505 00d0 81000000 		.4byte	0x81
 1506 00d4 00000000 		.4byte	.LFB33
 1507 00d8 34000000 		.4byte	.LFE33-.LFB33
 1508 00dc 01       		.uleb128 0x1
 1509 00dd 9C       		.byte	0x9c
 1510 00de F1000000 		.4byte	0xf1
 1511 00e2 08       		.uleb128 0x8
 1512 00e3 A0010000 		.4byte	.LASF18
 1513 00e7 01       		.byte	0x1
 1514 00e8 0D       		.byte	0xd
 1515 00e9 81000000 		.4byte	0x81
 1516 00ed 02       		.uleb128 0x2
 1517 00ee 91       		.byte	0x91
 1518 00ef 77       		.sleb128 -9
 1519 00f0 00       		.byte	0
 1520 00f1 09       		.uleb128 0x9
 1521 00f2 99020000 		.4byte	.LASF33
 1522 00f6 02       		.byte	0x2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 33


 1523 00f7 1A       		.byte	0x1a
 1524 00f8 81000000 		.4byte	0x81
 1525 00fc 00000000 		.4byte	.LFB34
 1526 0100 74010000 		.4byte	.LFE34-.LFB34
 1527 0104 01       		.uleb128 0x1
 1528 0105 9C       		.byte	0x9c
 1529 0106 78010000 		.4byte	0x178
 1530 010a 08       		.uleb128 0x8
 1531 010b 2D030000 		.4byte	.LASF19
 1532 010f 02       		.byte	0x2
 1533 0110 1A       		.byte	0x1a
 1534 0111 81000000 		.4byte	0x81
 1535 0115 03       		.uleb128 0x3
 1536 0116 91       		.byte	0x91
 1537 0117 BF7F     		.sleb128 -65
 1538 0119 08       		.uleb128 0x8
 1539 011a E1010000 		.4byte	.LASF20
 1540 011e 02       		.byte	0x2
 1541 011f 1A       		.byte	0x1a
 1542 0120 81000000 		.4byte	0x81
 1543 0124 03       		.uleb128 0x3
 1544 0125 91       		.byte	0x91
 1545 0126 BE7F     		.sleb128 -66
 1546 0128 08       		.uleb128 0x8
 1547 0129 6C010000 		.4byte	.LASF21
 1548 012d 02       		.byte	0x2
 1549 012e 1A       		.byte	0x1a
 1550 012f 8C000000 		.4byte	0x8c
 1551 0133 03       		.uleb128 0x3
 1552 0134 91       		.byte	0x91
 1553 0135 BC7F     		.sleb128 -68
 1554 0137 0A       		.uleb128 0xa
 1555 0138 61030000 		.4byte	.LASF22
 1556 013c 02       		.byte	0x2
 1557 013d 1C       		.byte	0x1c
 1558 013e 78010000 		.4byte	0x178
 1559 0142 02       		.uleb128 0x2
 1560 0143 91       		.byte	0x91
 1561 0144 60       		.sleb128 -32
 1562 0145 0A       		.uleb128 0xa
 1563 0146 2A010000 		.4byte	.LASF23
 1564 014a 02       		.byte	0x2
 1565 014b 1F       		.byte	0x1f
 1566 014c 88010000 		.4byte	0x188
 1567 0150 02       		.uleb128 0x2
 1568 0151 91       		.byte	0x91
 1569 0152 4C       		.sleb128 -52
 1570 0153 0A       		.uleb128 0xa
 1571 0154 34010000 		.4byte	.LASF24
 1572 0158 02       		.byte	0x2
 1573 0159 2B       		.byte	0x2b
 1574 015a 98010000 		.4byte	0x198
 1575 015e 02       		.uleb128 0x2
 1576 015f 91       		.byte	0x91
 1577 0160 44       		.sleb128 -60
 1578 0161 0B       		.uleb128 0xb
 1579 0162 0E010000 		.4byte	.LBB2
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 34


 1580 0166 44000000 		.4byte	.LBE2-.LBB2
 1581 016a 0C       		.uleb128 0xc
 1582 016b 6B00     		.ascii	"k\000"
 1583 016d 02       		.byte	0x2
 1584 016e 4F       		.byte	0x4f
 1585 016f 8C000000 		.4byte	0x8c
 1586 0173 02       		.uleb128 0x2
 1587 0174 91       		.byte	0x91
 1588 0175 76       		.sleb128 -10
 1589 0176 00       		.byte	0
 1590 0177 00       		.byte	0
 1591 0178 0D       		.uleb128 0xd
 1592 0179 81000000 		.4byte	0x81
 1593 017d 88010000 		.4byte	0x188
 1594 0181 0E       		.uleb128 0xe
 1595 0182 B7000000 		.4byte	0xb7
 1596 0186 12       		.byte	0x12
 1597 0187 00       		.byte	0
 1598 0188 0D       		.uleb128 0xd
 1599 0189 81000000 		.4byte	0x81
 1600 018d 98010000 		.4byte	0x198
 1601 0191 0E       		.uleb128 0xe
 1602 0192 B7000000 		.4byte	0xb7
 1603 0196 11       		.byte	0x11
 1604 0197 00       		.byte	0
 1605 0198 0D       		.uleb128 0xd
 1606 0199 81000000 		.4byte	0x81
 1607 019d A8010000 		.4byte	0x1a8
 1608 01a1 0E       		.uleb128 0xe
 1609 01a2 B7000000 		.4byte	0xb7
 1610 01a6 05       		.byte	0x5
 1611 01a7 00       		.byte	0
 1612 01a8 0F       		.uleb128 0xf
 1613 01a9 B8000000 		.4byte	.LASF25
 1614 01ad 02       		.byte	0x2
 1615 01ae 59       		.byte	0x59
 1616 01af 00000000 		.4byte	.LFB35
 1617 01b3 12000000 		.4byte	.LFE35-.LFB35
 1618 01b7 01       		.uleb128 0x1
 1619 01b8 9C       		.byte	0x9c
 1620 01b9 0F       		.uleb128 0xf
 1621 01ba 6A030000 		.4byte	.LASF26
 1622 01be 02       		.byte	0x2
 1623 01bf 5D       		.byte	0x5d
 1624 01c0 00000000 		.4byte	.LFB36
 1625 01c4 12000000 		.4byte	.LFE36-.LFB36
 1626 01c8 01       		.uleb128 0x1
 1627 01c9 9C       		.byte	0x9c
 1628 01ca 0F       		.uleb128 0xf
 1629 01cb 22030000 		.4byte	.LASF27
 1630 01cf 02       		.byte	0x2
 1631 01d0 61       		.byte	0x61
 1632 01d1 00000000 		.4byte	.LFB37
 1633 01d5 34000000 		.4byte	.LFE37-.LFB37
 1634 01d9 01       		.uleb128 0x1
 1635 01da 9C       		.byte	0x9c
 1636 01db 10       		.uleb128 0x10
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 35


 1637 01dc 92010000 		.4byte	.LASF29
 1638 01e0 02       		.byte	0x2
 1639 01e1 67       		.byte	0x67
 1640 01e2 00000000 		.4byte	.LFB38
 1641 01e6 34000000 		.4byte	.LFE38-.LFB38
 1642 01ea 01       		.uleb128 0x1
 1643 01eb 9C       		.byte	0x9c
 1644 01ec FC010000 		.4byte	0x1fc
 1645 01f0 11       		.uleb128 0x11
 1646 01f1 89010000 		.4byte	.LASF57
 1647 01f5 02       		.byte	0x2
 1648 01f6 68       		.byte	0x68
 1649 01f7 8C000000 		.4byte	0x8c
 1650 01fb 00       		.byte	0
 1651 01fc 0F       		.uleb128 0xf
 1652 01fd E6000000 		.4byte	.LASF28
 1653 0201 02       		.byte	0x2
 1654 0202 77       		.byte	0x77
 1655 0203 00000000 		.4byte	.LFB39
 1656 0207 26000000 		.4byte	.LFE39-.LFB39
 1657 020b 01       		.uleb128 0x1
 1658 020c 9C       		.byte	0x9c
 1659 020d 10       		.uleb128 0x10
 1660 020e 0B030000 		.4byte	.LASF30
 1661 0212 02       		.byte	0x2
 1662 0213 7D       		.byte	0x7d
 1663 0214 00000000 		.4byte	.LFB40
 1664 0218 3E000000 		.4byte	.LFE40-.LFB40
 1665 021c 01       		.uleb128 0x1
 1666 021d 9C       		.byte	0x9c
 1667 021e 3F020000 		.4byte	0x23f
 1668 0222 08       		.uleb128 0x8
 1669 0223 45010000 		.4byte	.LASF31
 1670 0227 02       		.byte	0x2
 1671 0228 7D       		.byte	0x7d
 1672 0229 81000000 		.4byte	0x81
 1673 022d 02       		.uleb128 0x2
 1674 022e 91       		.byte	0x91
 1675 022f 77       		.sleb128 -9
 1676 0230 08       		.uleb128 0x8
 1677 0231 C3020000 		.4byte	.LASF32
 1678 0235 02       		.byte	0x2
 1679 0236 7D       		.byte	0x7d
 1680 0237 81000000 		.4byte	0x81
 1681 023b 02       		.uleb128 0x2
 1682 023c 91       		.byte	0x91
 1683 023d 76       		.sleb128 -10
 1684 023e 00       		.byte	0
 1685 023f 09       		.uleb128 0x9
 1686 0240 07000000 		.4byte	.LASF34
 1687 0244 02       		.byte	0x2
 1688 0245 83       		.byte	0x83
 1689 0246 8C000000 		.4byte	0x8c
 1690 024a 00000000 		.4byte	.LFB41
 1691 024e 58000000 		.4byte	.LFE41-.LFB41
 1692 0252 01       		.uleb128 0x1
 1693 0253 9C       		.byte	0x9c
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 36


 1694 0254 75020000 		.4byte	0x275
 1695 0258 08       		.uleb128 0x8
 1696 0259 59010000 		.4byte	.LASF35
 1697 025d 02       		.byte	0x2
 1698 025e 83       		.byte	0x83
 1699 025f 75020000 		.4byte	0x275
 1700 0263 02       		.uleb128 0x2
 1701 0264 91       		.byte	0x91
 1702 0265 74       		.sleb128 -12
 1703 0266 12       		.uleb128 0x12
 1704 0267 6C656E00 		.ascii	"len\000"
 1705 026b 02       		.byte	0x2
 1706 026c 83       		.byte	0x83
 1707 026d 81000000 		.4byte	0x81
 1708 0271 02       		.uleb128 0x2
 1709 0272 91       		.byte	0x91
 1710 0273 73       		.sleb128 -13
 1711 0274 00       		.byte	0
 1712 0275 05       		.uleb128 0x5
 1713 0276 04       		.byte	0x4
 1714 0277 81000000 		.4byte	0x81
 1715 027b 09       		.uleb128 0x9
 1716 027c 37030000 		.4byte	.LASF36
 1717 0280 02       		.byte	0x2
 1718 0281 8E       		.byte	0x8e
 1719 0282 8C000000 		.4byte	0x8c
 1720 0286 00000000 		.4byte	.LFB42
 1721 028a 44000000 		.4byte	.LFE42-.LFB42
 1722 028e 01       		.uleb128 0x1
 1723 028f 9C       		.byte	0x9c
 1724 0290 B1020000 		.4byte	0x2b1
 1725 0294 08       		.uleb128 0x8
 1726 0295 59010000 		.4byte	.LASF35
 1727 0299 02       		.byte	0x2
 1728 029a 8E       		.byte	0x8e
 1729 029b 75020000 		.4byte	0x275
 1730 029f 02       		.uleb128 0x2
 1731 02a0 91       		.byte	0x91
 1732 02a1 74       		.sleb128 -12
 1733 02a2 12       		.uleb128 0x12
 1734 02a3 6C656E00 		.ascii	"len\000"
 1735 02a7 02       		.byte	0x2
 1736 02a8 8E       		.byte	0x8e
 1737 02a9 81000000 		.4byte	0x81
 1738 02ad 02       		.uleb128 0x2
 1739 02ae 91       		.byte	0x91
 1740 02af 73       		.sleb128 -13
 1741 02b0 00       		.byte	0
 1742 02b1 10       		.uleb128 0x10
 1743 02b2 72000000 		.4byte	.LASF37
 1744 02b6 02       		.byte	0x2
 1745 02b7 9E       		.byte	0x9e
 1746 02b8 00000000 		.4byte	.LFB43
 1747 02bc 2C010000 		.4byte	.LFE43-.LFB43
 1748 02c0 01       		.uleb128 0x1
 1749 02c1 9C       		.byte	0x9c
 1750 02c2 41030000 		.4byte	0x341
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 37


 1751 02c6 08       		.uleb128 0x8
 1752 02c7 F4010000 		.4byte	.LASF38
 1753 02cb 02       		.byte	0x2
 1754 02cc 9E       		.byte	0x9e
 1755 02cd 81000000 		.4byte	0x81
 1756 02d1 03       		.uleb128 0x3
 1757 02d2 91       		.byte	0x91
 1758 02d3 EF7D     		.sleb128 -273
 1759 02d5 0A       		.uleb128 0xa
 1760 02d6 4F010000 		.4byte	.LASF39
 1761 02da 02       		.byte	0x2
 1762 02db 9F       		.byte	0x9f
 1763 02dc 41030000 		.4byte	0x341
 1764 02e0 03       		.uleb128 0x3
 1765 02e1 91       		.byte	0x91
 1766 02e2 F47D     		.sleb128 -268
 1767 02e4 13       		.uleb128 0x13
 1768 02e5 00000000 		.4byte	.LASF58
 1769 02e9 06       		.byte	0x6
 1770 02ea 00       		.byte	0
 1771 02eb 73000000 		.4byte	0x73
 1772 02ef FA020000 		.4byte	0x2fa
 1773 02f3 14       		.uleb128 0x14
 1774 02f4 BE000000 		.4byte	0xbe
 1775 02f8 15       		.uleb128 0x15
 1776 02f9 00       		.byte	0
 1777 02fa 16       		.uleb128 0x16
 1778 02fb 38000000 		.4byte	.LBB3
 1779 02ff 3C000000 		.4byte	.LBE3-.LBB3
 1780 0303 14030000 		.4byte	0x314
 1781 0307 0C       		.uleb128 0xc
 1782 0308 6300     		.ascii	"c\000"
 1783 030a 02       		.byte	0x2
 1784 030b A3       		.byte	0xa3
 1785 030c 81000000 		.4byte	0x81
 1786 0310 02       		.uleb128 0x2
 1787 0311 91       		.byte	0x91
 1788 0312 77       		.sleb128 -9
 1789 0313 00       		.byte	0
 1790 0314 0B       		.uleb128 0xb
 1791 0315 7A000000 		.4byte	.LBB4
 1792 0319 96000000 		.4byte	.LBE4-.LBB4
 1793 031d 0C       		.uleb128 0xc
 1794 031e 6A00     		.ascii	"j\000"
 1795 0320 02       		.byte	0x2
 1796 0321 A5       		.byte	0xa5
 1797 0322 81000000 		.4byte	0x81
 1798 0326 02       		.uleb128 0x2
 1799 0327 91       		.byte	0x91
 1800 0328 76       		.sleb128 -10
 1801 0329 0B       		.uleb128 0xb
 1802 032a 98000000 		.4byte	.LBB5
 1803 032e 54000000 		.4byte	.LBE5-.LBB5
 1804 0332 0C       		.uleb128 0xc
 1805 0333 6B00     		.ascii	"k\000"
 1806 0335 02       		.byte	0x2
 1807 0336 A7       		.byte	0xa7
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 38


 1808 0337 81000000 		.4byte	0x81
 1809 033b 02       		.uleb128 0x2
 1810 033c 91       		.byte	0x91
 1811 033d 75       		.sleb128 -11
 1812 033e 00       		.byte	0
 1813 033f 00       		.byte	0
 1814 0340 00       		.byte	0
 1815 0341 0D       		.uleb128 0xd
 1816 0342 81000000 		.4byte	0x81
 1817 0346 51030000 		.4byte	0x351
 1818 034a 0E       		.uleb128 0xe
 1819 034b B7000000 		.4byte	0xb7
 1820 034f FF       		.byte	0xff
 1821 0350 00       		.byte	0
 1822 0351 10       		.uleb128 0x10
 1823 0352 B8010000 		.4byte	.LASF40
 1824 0356 02       		.byte	0x2
 1825 0357 B0       		.byte	0xb0
 1826 0358 00000000 		.4byte	.LFB44
 1827 035c 60000000 		.4byte	.LFE44-.LFB44
 1828 0360 01       		.uleb128 0x1
 1829 0361 9C       		.byte	0x9c
 1830 0362 91030000 		.4byte	0x391
 1831 0366 08       		.uleb128 0x8
 1832 0367 D9010000 		.4byte	.LASF41
 1833 036b 02       		.byte	0x2
 1834 036c B0       		.byte	0xb0
 1835 036d 8C000000 		.4byte	0x8c
 1836 0371 02       		.uleb128 0x2
 1837 0372 91       		.byte	0x91
 1838 0373 76       		.sleb128 -10
 1839 0374 08       		.uleb128 0x8
 1840 0375 6B000000 		.4byte	.LASF42
 1841 0379 02       		.byte	0x2
 1842 037a B0       		.byte	0xb0
 1843 037b 81000000 		.4byte	0x81
 1844 037f 02       		.uleb128 0x2
 1845 0380 91       		.byte	0x91
 1846 0381 75       		.sleb128 -11
 1847 0382 08       		.uleb128 0x8
 1848 0383 A0010000 		.4byte	.LASF18
 1849 0387 02       		.byte	0x2
 1850 0388 B0       		.byte	0xb0
 1851 0389 81000000 		.4byte	0x81
 1852 038d 02       		.uleb128 0x2
 1853 038e 91       		.byte	0x91
 1854 038f 74       		.sleb128 -12
 1855 0390 00       		.byte	0
 1856 0391 10       		.uleb128 0x10
 1857 0392 05010000 		.4byte	.LASF43
 1858 0396 02       		.byte	0x2
 1859 0397 BF       		.byte	0xbf
 1860 0398 00000000 		.4byte	.LFB45
 1861 039c 72000000 		.4byte	.LFE45-.LFB45
 1862 03a0 01       		.uleb128 0x1
 1863 03a1 9C       		.byte	0x9c
 1864 03a2 D1030000 		.4byte	0x3d1
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 39


 1865 03a6 08       		.uleb128 0x8
 1866 03a7 D9010000 		.4byte	.LASF41
 1867 03ab 02       		.byte	0x2
 1868 03ac BF       		.byte	0xbf
 1869 03ad 8C000000 		.4byte	0x8c
 1870 03b1 02       		.uleb128 0x2
 1871 03b2 91       		.byte	0x91
 1872 03b3 76       		.sleb128 -10
 1873 03b4 08       		.uleb128 0x8
 1874 03b5 6B000000 		.4byte	.LASF42
 1875 03b9 02       		.byte	0x2
 1876 03ba BF       		.byte	0xbf
 1877 03bb 81000000 		.4byte	0x81
 1878 03bf 02       		.uleb128 0x2
 1879 03c0 91       		.byte	0x91
 1880 03c1 75       		.sleb128 -11
 1881 03c2 08       		.uleb128 0x8
 1882 03c3 A0010000 		.4byte	.LASF18
 1883 03c7 02       		.byte	0x2
 1884 03c8 BF       		.byte	0xbf
 1885 03c9 8C000000 		.4byte	0x8c
 1886 03cd 02       		.uleb128 0x2
 1887 03ce 91       		.byte	0x91
 1888 03cf 72       		.sleb128 -14
 1889 03d0 00       		.byte	0
 1890 03d1 10       		.uleb128 0x10
 1891 03d2 D2020000 		.4byte	.LASF44
 1892 03d6 02       		.byte	0x2
 1893 03d7 CF       		.byte	0xcf
 1894 03d8 00000000 		.4byte	.LFB46
 1895 03dc 92000000 		.4byte	.LFE46-.LFB46
 1896 03e0 01       		.uleb128 0x1
 1897 03e1 9C       		.byte	0x9c
 1898 03e2 35040000 		.4byte	0x435
 1899 03e6 08       		.uleb128 0x8
 1900 03e7 D9010000 		.4byte	.LASF41
 1901 03eb 02       		.byte	0x2
 1902 03ec CF       		.byte	0xcf
 1903 03ed 8C000000 		.4byte	0x8c
 1904 03f1 02       		.uleb128 0x2
 1905 03f2 91       		.byte	0x91
 1906 03f3 6E       		.sleb128 -18
 1907 03f4 08       		.uleb128 0x8
 1908 03f5 6B000000 		.4byte	.LASF42
 1909 03f9 02       		.byte	0x2
 1910 03fa CF       		.byte	0xcf
 1911 03fb 81000000 		.4byte	0x81
 1912 03ff 02       		.uleb128 0x2
 1913 0400 91       		.byte	0x91
 1914 0401 6D       		.sleb128 -19
 1915 0402 08       		.uleb128 0x8
 1916 0403 C3000000 		.4byte	.LASF45
 1917 0407 02       		.byte	0x2
 1918 0408 CF       		.byte	0xcf
 1919 0409 75020000 		.4byte	0x275
 1920 040d 02       		.uleb128 0x2
 1921 040e 91       		.byte	0x91
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 40


 1922 040f 68       		.sleb128 -24
 1923 0410 12       		.uleb128 0x12
 1924 0411 6C656E00 		.ascii	"len\000"
 1925 0415 02       		.byte	0x2
 1926 0416 CF       		.byte	0xcf
 1927 0417 81000000 		.4byte	0x81
 1928 041b 02       		.uleb128 0x2
 1929 041c 91       		.byte	0x91
 1930 041d 6C       		.sleb128 -20
 1931 041e 0B       		.uleb128 0xb
 1932 041f 4E000000 		.4byte	.LBB6
 1933 0423 38000000 		.4byte	.LBE6-.LBB6
 1934 0427 0C       		.uleb128 0xc
 1935 0428 6B00     		.ascii	"k\000"
 1936 042a 02       		.byte	0x2
 1937 042b D9       		.byte	0xd9
 1938 042c 81000000 		.4byte	0x81
 1939 0430 02       		.uleb128 0x2
 1940 0431 91       		.byte	0x91
 1941 0432 77       		.sleb128 -9
 1942 0433 00       		.byte	0
 1943 0434 00       		.byte	0
 1944 0435 09       		.uleb128 0x9
 1945 0436 FE020000 		.4byte	.LASF46
 1946 043a 02       		.byte	0x2
 1947 043b E0       		.byte	0xe0
 1948 043c 81000000 		.4byte	0x81
 1949 0440 00000000 		.4byte	.LFB47
 1950 0444 64000000 		.4byte	.LFE47-.LFB47
 1951 0448 01       		.uleb128 0x1
 1952 0449 9C       		.byte	0x9c
 1953 044a 79040000 		.4byte	0x479
 1954 044e 08       		.uleb128 0x8
 1955 044f D9010000 		.4byte	.LASF41
 1956 0453 02       		.byte	0x2
 1957 0454 E0       		.byte	0xe0
 1958 0455 8C000000 		.4byte	0x8c
 1959 0459 02       		.uleb128 0x2
 1960 045a 91       		.byte	0x91
 1961 045b 66       		.sleb128 -26
 1962 045c 08       		.uleb128 0x8
 1963 045d 6B000000 		.4byte	.LASF42
 1964 0461 02       		.byte	0x2
 1965 0462 E0       		.byte	0xe0
 1966 0463 81000000 		.4byte	0x81
 1967 0467 02       		.uleb128 0x2
 1968 0468 91       		.byte	0x91
 1969 0469 65       		.sleb128 -27
 1970 046a 0A       		.uleb128 0xa
 1971 046b 76030000 		.4byte	.LASF47
 1972 046f 02       		.byte	0x2
 1973 0470 EA       		.byte	0xea
 1974 0471 81000000 		.4byte	0x81
 1975 0475 02       		.uleb128 0x2
 1976 0476 91       		.byte	0x91
 1977 0477 6F       		.sleb128 -17
 1978 0478 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 41


 1979 0479 09       		.uleb128 0x9
 1980 047a 53030000 		.4byte	.LASF48
 1981 047e 02       		.byte	0x2
 1982 047f EF       		.byte	0xef
 1983 0480 8C000000 		.4byte	0x8c
 1984 0484 00000000 		.4byte	.LFB48
 1985 0488 80000000 		.4byte	.LFE48-.LFB48
 1986 048c 01       		.uleb128 0x1
 1987 048d 9C       		.byte	0x9c
 1988 048e BD040000 		.4byte	0x4bd
 1989 0492 08       		.uleb128 0x8
 1990 0493 D9010000 		.4byte	.LASF41
 1991 0497 02       		.byte	0x2
 1992 0498 EF       		.byte	0xef
 1993 0499 8C000000 		.4byte	0x8c
 1994 049d 02       		.uleb128 0x2
 1995 049e 91       		.byte	0x91
 1996 049f 6E       		.sleb128 -18
 1997 04a0 08       		.uleb128 0x8
 1998 04a1 6B000000 		.4byte	.LASF42
 1999 04a5 02       		.byte	0x2
 2000 04a6 EF       		.byte	0xef
 2001 04a7 81000000 		.4byte	0x81
 2002 04ab 02       		.uleb128 0x2
 2003 04ac 91       		.byte	0x91
 2004 04ad 6D       		.sleb128 -19
 2005 04ae 0A       		.uleb128 0xa
 2006 04af 76030000 		.4byte	.LASF47
 2007 04b3 02       		.byte	0x2
 2008 04b4 F0       		.byte	0xf0
 2009 04b5 8C000000 		.4byte	0x8c
 2010 04b9 02       		.uleb128 0x2
 2011 04ba 91       		.byte	0x91
 2012 04bb 76       		.sleb128 -10
 2013 04bc 00       		.byte	0
 2014 04bd 17       		.uleb128 0x17
 2015 04be A4020000 		.4byte	.LASF49
 2016 04c2 02       		.byte	0x2
 2017 04c3 0001     		.2byte	0x100
 2018 04c5 00000000 		.4byte	.LFB49
 2019 04c9 8C000000 		.4byte	.LFE49-.LFB49
 2020 04cd 01       		.uleb128 0x1
 2021 04ce 9C       		.byte	0x9c
 2022 04cf 27050000 		.4byte	0x527
 2023 04d3 18       		.uleb128 0x18
 2024 04d4 D9010000 		.4byte	.LASF41
 2025 04d8 02       		.byte	0x2
 2026 04d9 0001     		.2byte	0x100
 2027 04db 8C000000 		.4byte	0x8c
 2028 04df 02       		.uleb128 0x2
 2029 04e0 91       		.byte	0x91
 2030 04e1 66       		.sleb128 -26
 2031 04e2 18       		.uleb128 0x18
 2032 04e3 6B000000 		.4byte	.LASF42
 2033 04e7 02       		.byte	0x2
 2034 04e8 0001     		.2byte	0x100
 2035 04ea 81000000 		.4byte	0x81
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 42


 2036 04ee 02       		.uleb128 0x2
 2037 04ef 91       		.byte	0x91
 2038 04f0 65       		.sleb128 -27
 2039 04f1 18       		.uleb128 0x18
 2040 04f2 D0010000 		.4byte	.LASF50
 2041 04f6 02       		.byte	0x2
 2042 04f7 0001     		.2byte	0x100
 2043 04f9 75020000 		.4byte	0x275
 2044 04fd 02       		.uleb128 0x2
 2045 04fe 91       		.byte	0x91
 2046 04ff 60       		.sleb128 -32
 2047 0500 19       		.uleb128 0x19
 2048 0501 6C656E00 		.ascii	"len\000"
 2049 0505 02       		.byte	0x2
 2050 0506 0001     		.2byte	0x100
 2051 0508 81000000 		.4byte	0x81
 2052 050c 02       		.uleb128 0x2
 2053 050d 91       		.byte	0x91
 2054 050e 64       		.sleb128 -28
 2055 050f 0B       		.uleb128 0xb
 2056 0510 46000000 		.4byte	.LBB7
 2057 0514 3A000000 		.4byte	.LBE7-.LBB7
 2058 0518 1A       		.uleb128 0x1a
 2059 0519 6B00     		.ascii	"k\000"
 2060 051b 02       		.byte	0x2
 2061 051c 0C01     		.2byte	0x10c
 2062 051e 81000000 		.4byte	0x81
 2063 0522 02       		.uleb128 0x2
 2064 0523 91       		.byte	0x91
 2065 0524 6F       		.sleb128 -17
 2066 0525 00       		.byte	0
 2067 0526 00       		.byte	0
 2068 0527 0A       		.uleb128 0xa
 2069 0528 91000000 		.4byte	.LASF51
 2070 052c 02       		.byte	0x2
 2071 052d 17       		.byte	0x17
 2072 052e 8C000000 		.4byte	0x8c
 2073 0532 05       		.uleb128 0x5
 2074 0533 03       		.byte	0x3
 2075 0534 00000000 		.4byte	wiznetTxPointer
 2076 0538 0A       		.uleb128 0xa
 2077 0539 EE020000 		.4byte	.LASF52
 2078 053d 02       		.byte	0x2
 2079 053e 18       		.byte	0x18
 2080 053f 8C000000 		.4byte	0x8c
 2081 0543 05       		.uleb128 0x5
 2082 0544 03       		.byte	0x3
 2083 0545 02000000 		.4byte	wiznetRxPointer
 2084 0549 00       		.byte	0
 2085              		.section	.debug_abbrev,"",%progbits
 2086              	.Ldebug_abbrev0:
 2087 0000 01       		.uleb128 0x1
 2088 0001 11       		.uleb128 0x11
 2089 0002 01       		.byte	0x1
 2090 0003 25       		.uleb128 0x25
 2091 0004 0E       		.uleb128 0xe
 2092 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 43


 2093 0006 0B       		.uleb128 0xb
 2094 0007 03       		.uleb128 0x3
 2095 0008 0E       		.uleb128 0xe
 2096 0009 1B       		.uleb128 0x1b
 2097 000a 0E       		.uleb128 0xe
 2098 000b 55       		.uleb128 0x55
 2099 000c 17       		.uleb128 0x17
 2100 000d 11       		.uleb128 0x11
 2101 000e 01       		.uleb128 0x1
 2102 000f 10       		.uleb128 0x10
 2103 0010 17       		.uleb128 0x17
 2104 0011 00       		.byte	0
 2105 0012 00       		.byte	0
 2106 0013 02       		.uleb128 0x2
 2107 0014 24       		.uleb128 0x24
 2108 0015 00       		.byte	0
 2109 0016 0B       		.uleb128 0xb
 2110 0017 0B       		.uleb128 0xb
 2111 0018 3E       		.uleb128 0x3e
 2112 0019 0B       		.uleb128 0xb
 2113 001a 03       		.uleb128 0x3
 2114 001b 0E       		.uleb128 0xe
 2115 001c 00       		.byte	0
 2116 001d 00       		.byte	0
 2117 001e 03       		.uleb128 0x3
 2118 001f 16       		.uleb128 0x16
 2119 0020 00       		.byte	0
 2120 0021 03       		.uleb128 0x3
 2121 0022 0E       		.uleb128 0xe
 2122 0023 3A       		.uleb128 0x3a
 2123 0024 0B       		.uleb128 0xb
 2124 0025 3B       		.uleb128 0x3b
 2125 0026 0B       		.uleb128 0xb
 2126 0027 49       		.uleb128 0x49
 2127 0028 13       		.uleb128 0x13
 2128 0029 00       		.byte	0
 2129 002a 00       		.byte	0
 2130 002b 04       		.uleb128 0x4
 2131 002c 24       		.uleb128 0x24
 2132 002d 00       		.byte	0
 2133 002e 0B       		.uleb128 0xb
 2134 002f 0B       		.uleb128 0xb
 2135 0030 3E       		.uleb128 0x3e
 2136 0031 0B       		.uleb128 0xb
 2137 0032 03       		.uleb128 0x3
 2138 0033 08       		.uleb128 0x8
 2139 0034 00       		.byte	0
 2140 0035 00       		.byte	0
 2141 0036 05       		.uleb128 0x5
 2142 0037 0F       		.uleb128 0xf
 2143 0038 00       		.byte	0
 2144 0039 0B       		.uleb128 0xb
 2145 003a 0B       		.uleb128 0xb
 2146 003b 49       		.uleb128 0x49
 2147 003c 13       		.uleb128 0x13
 2148 003d 00       		.byte	0
 2149 003e 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 44


 2150 003f 06       		.uleb128 0x6
 2151 0040 26       		.uleb128 0x26
 2152 0041 00       		.byte	0
 2153 0042 49       		.uleb128 0x49
 2154 0043 13       		.uleb128 0x13
 2155 0044 00       		.byte	0
 2156 0045 00       		.byte	0
 2157 0046 07       		.uleb128 0x7
 2158 0047 2E       		.uleb128 0x2e
 2159 0048 01       		.byte	0x1
 2160 0049 03       		.uleb128 0x3
 2161 004a 0E       		.uleb128 0xe
 2162 004b 3A       		.uleb128 0x3a
 2163 004c 0B       		.uleb128 0xb
 2164 004d 3B       		.uleb128 0x3b
 2165 004e 0B       		.uleb128 0xb
 2166 004f 27       		.uleb128 0x27
 2167 0050 19       		.uleb128 0x19
 2168 0051 49       		.uleb128 0x49
 2169 0052 13       		.uleb128 0x13
 2170 0053 11       		.uleb128 0x11
 2171 0054 01       		.uleb128 0x1
 2172 0055 12       		.uleb128 0x12
 2173 0056 06       		.uleb128 0x6
 2174 0057 40       		.uleb128 0x40
 2175 0058 18       		.uleb128 0x18
 2176 0059 9642     		.uleb128 0x2116
 2177 005b 19       		.uleb128 0x19
 2178 005c 01       		.uleb128 0x1
 2179 005d 13       		.uleb128 0x13
 2180 005e 00       		.byte	0
 2181 005f 00       		.byte	0
 2182 0060 08       		.uleb128 0x8
 2183 0061 05       		.uleb128 0x5
 2184 0062 00       		.byte	0
 2185 0063 03       		.uleb128 0x3
 2186 0064 0E       		.uleb128 0xe
 2187 0065 3A       		.uleb128 0x3a
 2188 0066 0B       		.uleb128 0xb
 2189 0067 3B       		.uleb128 0x3b
 2190 0068 0B       		.uleb128 0xb
 2191 0069 49       		.uleb128 0x49
 2192 006a 13       		.uleb128 0x13
 2193 006b 02       		.uleb128 0x2
 2194 006c 18       		.uleb128 0x18
 2195 006d 00       		.byte	0
 2196 006e 00       		.byte	0
 2197 006f 09       		.uleb128 0x9
 2198 0070 2E       		.uleb128 0x2e
 2199 0071 01       		.byte	0x1
 2200 0072 3F       		.uleb128 0x3f
 2201 0073 19       		.uleb128 0x19
 2202 0074 03       		.uleb128 0x3
 2203 0075 0E       		.uleb128 0xe
 2204 0076 3A       		.uleb128 0x3a
 2205 0077 0B       		.uleb128 0xb
 2206 0078 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 45


 2207 0079 0B       		.uleb128 0xb
 2208 007a 27       		.uleb128 0x27
 2209 007b 19       		.uleb128 0x19
 2210 007c 49       		.uleb128 0x49
 2211 007d 13       		.uleb128 0x13
 2212 007e 11       		.uleb128 0x11
 2213 007f 01       		.uleb128 0x1
 2214 0080 12       		.uleb128 0x12
 2215 0081 06       		.uleb128 0x6
 2216 0082 40       		.uleb128 0x40
 2217 0083 18       		.uleb128 0x18
 2218 0084 9642     		.uleb128 0x2116
 2219 0086 19       		.uleb128 0x19
 2220 0087 01       		.uleb128 0x1
 2221 0088 13       		.uleb128 0x13
 2222 0089 00       		.byte	0
 2223 008a 00       		.byte	0
 2224 008b 0A       		.uleb128 0xa
 2225 008c 34       		.uleb128 0x34
 2226 008d 00       		.byte	0
 2227 008e 03       		.uleb128 0x3
 2228 008f 0E       		.uleb128 0xe
 2229 0090 3A       		.uleb128 0x3a
 2230 0091 0B       		.uleb128 0xb
 2231 0092 3B       		.uleb128 0x3b
 2232 0093 0B       		.uleb128 0xb
 2233 0094 49       		.uleb128 0x49
 2234 0095 13       		.uleb128 0x13
 2235 0096 02       		.uleb128 0x2
 2236 0097 18       		.uleb128 0x18
 2237 0098 00       		.byte	0
 2238 0099 00       		.byte	0
 2239 009a 0B       		.uleb128 0xb
 2240 009b 0B       		.uleb128 0xb
 2241 009c 01       		.byte	0x1
 2242 009d 11       		.uleb128 0x11
 2243 009e 01       		.uleb128 0x1
 2244 009f 12       		.uleb128 0x12
 2245 00a0 06       		.uleb128 0x6
 2246 00a1 00       		.byte	0
 2247 00a2 00       		.byte	0
 2248 00a3 0C       		.uleb128 0xc
 2249 00a4 34       		.uleb128 0x34
 2250 00a5 00       		.byte	0
 2251 00a6 03       		.uleb128 0x3
 2252 00a7 08       		.uleb128 0x8
 2253 00a8 3A       		.uleb128 0x3a
 2254 00a9 0B       		.uleb128 0xb
 2255 00aa 3B       		.uleb128 0x3b
 2256 00ab 0B       		.uleb128 0xb
 2257 00ac 49       		.uleb128 0x49
 2258 00ad 13       		.uleb128 0x13
 2259 00ae 02       		.uleb128 0x2
 2260 00af 18       		.uleb128 0x18
 2261 00b0 00       		.byte	0
 2262 00b1 00       		.byte	0
 2263 00b2 0D       		.uleb128 0xd
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 46


 2264 00b3 01       		.uleb128 0x1
 2265 00b4 01       		.byte	0x1
 2266 00b5 49       		.uleb128 0x49
 2267 00b6 13       		.uleb128 0x13
 2268 00b7 01       		.uleb128 0x1
 2269 00b8 13       		.uleb128 0x13
 2270 00b9 00       		.byte	0
 2271 00ba 00       		.byte	0
 2272 00bb 0E       		.uleb128 0xe
 2273 00bc 21       		.uleb128 0x21
 2274 00bd 00       		.byte	0
 2275 00be 49       		.uleb128 0x49
 2276 00bf 13       		.uleb128 0x13
 2277 00c0 2F       		.uleb128 0x2f
 2278 00c1 0B       		.uleb128 0xb
 2279 00c2 00       		.byte	0
 2280 00c3 00       		.byte	0
 2281 00c4 0F       		.uleb128 0xf
 2282 00c5 2E       		.uleb128 0x2e
 2283 00c6 00       		.byte	0
 2284 00c7 3F       		.uleb128 0x3f
 2285 00c8 19       		.uleb128 0x19
 2286 00c9 03       		.uleb128 0x3
 2287 00ca 0E       		.uleb128 0xe
 2288 00cb 3A       		.uleb128 0x3a
 2289 00cc 0B       		.uleb128 0xb
 2290 00cd 3B       		.uleb128 0x3b
 2291 00ce 0B       		.uleb128 0xb
 2292 00cf 27       		.uleb128 0x27
 2293 00d0 19       		.uleb128 0x19
 2294 00d1 11       		.uleb128 0x11
 2295 00d2 01       		.uleb128 0x1
 2296 00d3 12       		.uleb128 0x12
 2297 00d4 06       		.uleb128 0x6
 2298 00d5 40       		.uleb128 0x40
 2299 00d6 18       		.uleb128 0x18
 2300 00d7 9642     		.uleb128 0x2116
 2301 00d9 19       		.uleb128 0x19
 2302 00da 00       		.byte	0
 2303 00db 00       		.byte	0
 2304 00dc 10       		.uleb128 0x10
 2305 00dd 2E       		.uleb128 0x2e
 2306 00de 01       		.byte	0x1
 2307 00df 3F       		.uleb128 0x3f
 2308 00e0 19       		.uleb128 0x19
 2309 00e1 03       		.uleb128 0x3
 2310 00e2 0E       		.uleb128 0xe
 2311 00e3 3A       		.uleb128 0x3a
 2312 00e4 0B       		.uleb128 0xb
 2313 00e5 3B       		.uleb128 0x3b
 2314 00e6 0B       		.uleb128 0xb
 2315 00e7 27       		.uleb128 0x27
 2316 00e8 19       		.uleb128 0x19
 2317 00e9 11       		.uleb128 0x11
 2318 00ea 01       		.uleb128 0x1
 2319 00eb 12       		.uleb128 0x12
 2320 00ec 06       		.uleb128 0x6
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 47


 2321 00ed 40       		.uleb128 0x40
 2322 00ee 18       		.uleb128 0x18
 2323 00ef 9642     		.uleb128 0x2116
 2324 00f1 19       		.uleb128 0x19
 2325 00f2 01       		.uleb128 0x1
 2326 00f3 13       		.uleb128 0x13
 2327 00f4 00       		.byte	0
 2328 00f5 00       		.byte	0
 2329 00f6 11       		.uleb128 0x11
 2330 00f7 34       		.uleb128 0x34
 2331 00f8 00       		.byte	0
 2332 00f9 03       		.uleb128 0x3
 2333 00fa 0E       		.uleb128 0xe
 2334 00fb 3A       		.uleb128 0x3a
 2335 00fc 0B       		.uleb128 0xb
 2336 00fd 3B       		.uleb128 0x3b
 2337 00fe 0B       		.uleb128 0xb
 2338 00ff 49       		.uleb128 0x49
 2339 0100 13       		.uleb128 0x13
 2340 0101 00       		.byte	0
 2341 0102 00       		.byte	0
 2342 0103 12       		.uleb128 0x12
 2343 0104 05       		.uleb128 0x5
 2344 0105 00       		.byte	0
 2345 0106 03       		.uleb128 0x3
 2346 0107 08       		.uleb128 0x8
 2347 0108 3A       		.uleb128 0x3a
 2348 0109 0B       		.uleb128 0xb
 2349 010a 3B       		.uleb128 0x3b
 2350 010b 0B       		.uleb128 0xb
 2351 010c 49       		.uleb128 0x49
 2352 010d 13       		.uleb128 0x13
 2353 010e 02       		.uleb128 0x2
 2354 010f 18       		.uleb128 0x18
 2355 0110 00       		.byte	0
 2356 0111 00       		.byte	0
 2357 0112 13       		.uleb128 0x13
 2358 0113 2E       		.uleb128 0x2e
 2359 0114 01       		.byte	0x1
 2360 0115 3F       		.uleb128 0x3f
 2361 0116 19       		.uleb128 0x19
 2362 0117 03       		.uleb128 0x3
 2363 0118 0E       		.uleb128 0xe
 2364 0119 3A       		.uleb128 0x3a
 2365 011a 0B       		.uleb128 0xb
 2366 011b 3B       		.uleb128 0x3b
 2367 011c 0B       		.uleb128 0xb
 2368 011d 27       		.uleb128 0x27
 2369 011e 19       		.uleb128 0x19
 2370 011f 49       		.uleb128 0x49
 2371 0120 13       		.uleb128 0x13
 2372 0121 3C       		.uleb128 0x3c
 2373 0122 19       		.uleb128 0x19
 2374 0123 01       		.uleb128 0x1
 2375 0124 13       		.uleb128 0x13
 2376 0125 00       		.byte	0
 2377 0126 00       		.byte	0
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 48


 2378 0127 14       		.uleb128 0x14
 2379 0128 05       		.uleb128 0x5
 2380 0129 00       		.byte	0
 2381 012a 49       		.uleb128 0x49
 2382 012b 13       		.uleb128 0x13
 2383 012c 00       		.byte	0
 2384 012d 00       		.byte	0
 2385 012e 15       		.uleb128 0x15
 2386 012f 18       		.uleb128 0x18
 2387 0130 00       		.byte	0
 2388 0131 00       		.byte	0
 2389 0132 00       		.byte	0
 2390 0133 16       		.uleb128 0x16
 2391 0134 0B       		.uleb128 0xb
 2392 0135 01       		.byte	0x1
 2393 0136 11       		.uleb128 0x11
 2394 0137 01       		.uleb128 0x1
 2395 0138 12       		.uleb128 0x12
 2396 0139 06       		.uleb128 0x6
 2397 013a 01       		.uleb128 0x1
 2398 013b 13       		.uleb128 0x13
 2399 013c 00       		.byte	0
 2400 013d 00       		.byte	0
 2401 013e 17       		.uleb128 0x17
 2402 013f 2E       		.uleb128 0x2e
 2403 0140 01       		.byte	0x1
 2404 0141 3F       		.uleb128 0x3f
 2405 0142 19       		.uleb128 0x19
 2406 0143 03       		.uleb128 0x3
 2407 0144 0E       		.uleb128 0xe
 2408 0145 3A       		.uleb128 0x3a
 2409 0146 0B       		.uleb128 0xb
 2410 0147 3B       		.uleb128 0x3b
 2411 0148 05       		.uleb128 0x5
 2412 0149 27       		.uleb128 0x27
 2413 014a 19       		.uleb128 0x19
 2414 014b 11       		.uleb128 0x11
 2415 014c 01       		.uleb128 0x1
 2416 014d 12       		.uleb128 0x12
 2417 014e 06       		.uleb128 0x6
 2418 014f 40       		.uleb128 0x40
 2419 0150 18       		.uleb128 0x18
 2420 0151 9642     		.uleb128 0x2116
 2421 0153 19       		.uleb128 0x19
 2422 0154 01       		.uleb128 0x1
 2423 0155 13       		.uleb128 0x13
 2424 0156 00       		.byte	0
 2425 0157 00       		.byte	0
 2426 0158 18       		.uleb128 0x18
 2427 0159 05       		.uleb128 0x5
 2428 015a 00       		.byte	0
 2429 015b 03       		.uleb128 0x3
 2430 015c 0E       		.uleb128 0xe
 2431 015d 3A       		.uleb128 0x3a
 2432 015e 0B       		.uleb128 0xb
 2433 015f 3B       		.uleb128 0x3b
 2434 0160 05       		.uleb128 0x5
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 49


 2435 0161 49       		.uleb128 0x49
 2436 0162 13       		.uleb128 0x13
 2437 0163 02       		.uleb128 0x2
 2438 0164 18       		.uleb128 0x18
 2439 0165 00       		.byte	0
 2440 0166 00       		.byte	0
 2441 0167 19       		.uleb128 0x19
 2442 0168 05       		.uleb128 0x5
 2443 0169 00       		.byte	0
 2444 016a 03       		.uleb128 0x3
 2445 016b 08       		.uleb128 0x8
 2446 016c 3A       		.uleb128 0x3a
 2447 016d 0B       		.uleb128 0xb
 2448 016e 3B       		.uleb128 0x3b
 2449 016f 05       		.uleb128 0x5
 2450 0170 49       		.uleb128 0x49
 2451 0171 13       		.uleb128 0x13
 2452 0172 02       		.uleb128 0x2
 2453 0173 18       		.uleb128 0x18
 2454 0174 00       		.byte	0
 2455 0175 00       		.byte	0
 2456 0176 1A       		.uleb128 0x1a
 2457 0177 34       		.uleb128 0x34
 2458 0178 00       		.byte	0
 2459 0179 03       		.uleb128 0x3
 2460 017a 08       		.uleb128 0x8
 2461 017b 3A       		.uleb128 0x3a
 2462 017c 0B       		.uleb128 0xb
 2463 017d 3B       		.uleb128 0x3b
 2464 017e 05       		.uleb128 0x5
 2465 017f 49       		.uleb128 0x49
 2466 0180 13       		.uleb128 0x13
 2467 0181 02       		.uleb128 0x2
 2468 0182 18       		.uleb128 0x18
 2469 0183 00       		.byte	0
 2470 0184 00       		.byte	0
 2471 0185 00       		.byte	0
 2472              		.section	.debug_aranges,"",%progbits
 2473 0000 9C000000 		.4byte	0x9c
 2474 0004 0200     		.2byte	0x2
 2475 0006 00000000 		.4byte	.Ldebug_info0
 2476 000a 04       		.byte	0x4
 2477 000b 00       		.byte	0
 2478 000c 0000     		.2byte	0
 2479 000e 0000     		.2byte	0
 2480 0010 00000000 		.4byte	.LFB33
 2481 0014 34000000 		.4byte	.LFE33-.LFB33
 2482 0018 00000000 		.4byte	.LFB34
 2483 001c 74010000 		.4byte	.LFE34-.LFB34
 2484 0020 00000000 		.4byte	.LFB35
 2485 0024 12000000 		.4byte	.LFE35-.LFB35
 2486 0028 00000000 		.4byte	.LFB36
 2487 002c 12000000 		.4byte	.LFE36-.LFB36
 2488 0030 00000000 		.4byte	.LFB37
 2489 0034 34000000 		.4byte	.LFE37-.LFB37
 2490 0038 00000000 		.4byte	.LFB38
 2491 003c 34000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 50


 2492 0040 00000000 		.4byte	.LFB39
 2493 0044 26000000 		.4byte	.LFE39-.LFB39
 2494 0048 00000000 		.4byte	.LFB40
 2495 004c 3E000000 		.4byte	.LFE40-.LFB40
 2496 0050 00000000 		.4byte	.LFB41
 2497 0054 58000000 		.4byte	.LFE41-.LFB41
 2498 0058 00000000 		.4byte	.LFB42
 2499 005c 44000000 		.4byte	.LFE42-.LFB42
 2500 0060 00000000 		.4byte	.LFB43
 2501 0064 2C010000 		.4byte	.LFE43-.LFB43
 2502 0068 00000000 		.4byte	.LFB44
 2503 006c 60000000 		.4byte	.LFE44-.LFB44
 2504 0070 00000000 		.4byte	.LFB45
 2505 0074 72000000 		.4byte	.LFE45-.LFB45
 2506 0078 00000000 		.4byte	.LFB46
 2507 007c 92000000 		.4byte	.LFE46-.LFB46
 2508 0080 00000000 		.4byte	.LFB47
 2509 0084 64000000 		.4byte	.LFE47-.LFB47
 2510 0088 00000000 		.4byte	.LFB48
 2511 008c 80000000 		.4byte	.LFE48-.LFB48
 2512 0090 00000000 		.4byte	.LFB49
 2513 0094 8C000000 		.4byte	.LFE49-.LFB49
 2514 0098 00000000 		.4byte	0
 2515 009c 00000000 		.4byte	0
 2516              		.section	.debug_ranges,"",%progbits
 2517              	.Ldebug_ranges0:
 2518 0000 00000000 		.4byte	.LFB33
 2519 0004 34000000 		.4byte	.LFE33
 2520 0008 00000000 		.4byte	.LFB34
 2521 000c 74010000 		.4byte	.LFE34
 2522 0010 00000000 		.4byte	.LFB35
 2523 0014 12000000 		.4byte	.LFE35
 2524 0018 00000000 		.4byte	.LFB36
 2525 001c 12000000 		.4byte	.LFE36
 2526 0020 00000000 		.4byte	.LFB37
 2527 0024 34000000 		.4byte	.LFE37
 2528 0028 00000000 		.4byte	.LFB38
 2529 002c 34000000 		.4byte	.LFE38
 2530 0030 00000000 		.4byte	.LFB39
 2531 0034 26000000 		.4byte	.LFE39
 2532 0038 00000000 		.4byte	.LFB40
 2533 003c 3E000000 		.4byte	.LFE40
 2534 0040 00000000 		.4byte	.LFB41
 2535 0044 58000000 		.4byte	.LFE41
 2536 0048 00000000 		.4byte	.LFB42
 2537 004c 44000000 		.4byte	.LFE42
 2538 0050 00000000 		.4byte	.LFB43
 2539 0054 2C010000 		.4byte	.LFE43
 2540 0058 00000000 		.4byte	.LFB44
 2541 005c 60000000 		.4byte	.LFE44
 2542 0060 00000000 		.4byte	.LFB45
 2543 0064 72000000 		.4byte	.LFE45
 2544 0068 00000000 		.4byte	.LFB46
 2545 006c 92000000 		.4byte	.LFE46
 2546 0070 00000000 		.4byte	.LFB47
 2547 0074 64000000 		.4byte	.LFE47
 2548 0078 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 51


 2549 007c 80000000 		.4byte	.LFE48
 2550 0080 00000000 		.4byte	.LFB49
 2551 0084 8C000000 		.4byte	.LFE49
 2552 0088 00000000 		.4byte	0
 2553 008c 00000000 		.4byte	0
 2554              		.section	.debug_line,"",%progbits
 2555              	.Ldebug_line0:
 2556 0000 70030000 		.section	.debug_str,"MS",%progbits,1
 2556      02006201 
 2556      00000201 
 2556      FB0E0D00 
 2556      01010101 
 2557              	.LASF58:
 2558 0000 7072696E 		.ascii	"printf\000"
 2558      746600
 2559              	.LASF34:
 2560 0007 77697A6E 		.ascii	"wiznetReadUdpFrame\000"
 2560      65745265 
 2560      61645564 
 2560      70467261 
 2560      6D6500
 2561              	.LASF55:
 2562 001a 433A5C55 		.ascii	"C:\\Users\\Samuel\\Documents\\GitHub\\Arm\\arm_cont"
 2562      73657273 
 2562      5C53616D 
 2562      75656C5C 
 2562      446F6375 
 2563 0047 726F6C6C 		.ascii	"roller_v2\\arm_controller_v2.1.cydsn\000"
 2563      65725F76 
 2563      325C6172 
 2563      6D5F636F 
 2563      6E74726F 
 2564              	.LASF42:
 2565 006b 626C6B53 		.ascii	"blkSel\000"
 2565      656C00
 2566              	.LASF37:
 2567 0072 77697A6E 		.ascii	"wiznetPrintRegisters\000"
 2567      65745072 
 2567      696E7452 
 2567      65676973 
 2567      74657273 
 2568              	.LASF3:
 2569 0087 5F5F7569 		.ascii	"__uint8_t\000"
 2569      6E74385F 
 2569      7400
 2570              	.LASF51:
 2571 0091 77697A6E 		.ascii	"wiznetTxPointer\000"
 2571      65745478 
 2571      506F696E 
 2571      74657200 
 2572              	.LASF9:
 2573 00a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2573      206C6F6E 
 2573      6720756E 
 2573      7369676E 
 2573      65642069 
 2574              	.LASF25:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 52


 2575 00b8 77697A6E 		.ascii	"wiznetOpen\000"
 2575      65744F70 
 2575      656E00
 2576              	.LASF45:
 2577 00c3 73726341 		.ascii	"srcArray\000"
 2577      72726179 
 2577      00
 2578              	.LASF8:
 2579 00cc 6C6F6E67 		.ascii	"long long int\000"
 2579      206C6F6E 
 2579      6720696E 
 2579      7400
 2580              	.LASF0:
 2581 00da 7369676E 		.ascii	"signed char\000"
 2581      65642063 
 2581      68617200 
 2582              	.LASF28:
 2583 00e6 77697A6E 		.ascii	"wiznetClearInterrupts\000"
 2583      6574436C 
 2583      65617249 
 2583      6E746572 
 2583      72757074 
 2584              	.LASF6:
 2585 00fc 6C6F6E67 		.ascii	"long int\000"
 2585      20696E74 
 2585      00
 2586              	.LASF43:
 2587 0105 77697A6E 		.ascii	"wiznetWrite16b\000"
 2587      65745772 
 2587      69746531 
 2587      366200
 2588              	.LASF13:
 2589 0114 75696E74 		.ascii	"uint8\000"
 2589      3800
 2590              	.LASF12:
 2591 011a 75696E74 		.ascii	"uint16_t\000"
 2591      31365F74 
 2591      00
 2592              	.LASF15:
 2593 0123 646F7562 		.ascii	"double\000"
 2593      6C6500
 2594              	.LASF23:
 2595 012a 75647043 		.ascii	"udpConfig\000"
 2595      6F6E6669 
 2595      6700
 2596              	.LASF24:
 2597 0134 77697A6E 		.ascii	"wiznetOldMacAddr\000"
 2597      65744F6C 
 2597      644D6163 
 2597      41646472 
 2597      00
 2598              	.LASF31:
 2599 0145 636F6D6D 		.ascii	"commonInt\000"
 2599      6F6E496E 
 2599      7400
 2600              	.LASF39:
 2601 014f 72656164 		.ascii	"readArray\000"
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 53


 2601      41727261 
 2601      7900
 2602              	.LASF35:
 2603 0159 61727261 		.ascii	"array\000"
 2603      7900
 2604              	.LASF10:
 2605 015f 756E7369 		.ascii	"unsigned int\000"
 2605      676E6564 
 2605      20696E74 
 2605      00
 2606              	.LASF21:
 2607 016c 64737455 		.ascii	"dstUdpPort\000"
 2607      6470506F 
 2607      727400
 2608              	.LASF7:
 2609 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 2609      20756E73 
 2609      69676E65 
 2609      6420696E 
 2609      7400
 2610              	.LASF57:
 2611 0189 72656376 		.ascii	"recvSize\000"
 2611      53697A65 
 2611      00
 2612              	.LASF29:
 2613 0192 77697A6E 		.ascii	"wiznetReceive\000"
 2613      65745265 
 2613      63656976 
 2613      6500
 2614              	.LASF18:
 2615 01a0 64617461 		.ascii	"data\000"
 2615      00
 2616              	.LASF5:
 2617 01a5 73686F72 		.ascii	"short unsigned int\000"
 2617      7420756E 
 2617      7369676E 
 2617      65642069 
 2617      6E7400
 2618              	.LASF40:
 2619 01b8 77697A6E 		.ascii	"wiznetWrite8b\000"
 2619      65745772 
 2619      69746538 
 2619      6200
 2620              	.LASF2:
 2621 01c6 73686F72 		.ascii	"short int\000"
 2621      7420696E 
 2621      7400
 2622              	.LASF50:
 2623 01d0 64737441 		.ascii	"dstArray\000"
 2623      72726179 
 2623      00
 2624              	.LASF41:
 2625 01d9 72656741 		.ascii	"regAddr\000"
 2625      64647200 
 2626              	.LASF20:
 2627 01e1 64737449 		.ascii	"dstIpAddr\000"
 2627      70416464 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 54


 2627      7200
 2628              	.LASF17:
 2629 01eb 73697A65 		.ascii	"sizetype\000"
 2629      74797065 
 2629      00
 2630              	.LASF38:
 2631 01f4 626C6B53 		.ascii	"blkSelect\000"
 2631      656C6563 
 2631      7400
 2632              	.LASF14:
 2633 01fe 666C6F61 		.ascii	"float\000"
 2633      7400
 2634              	.LASF1:
 2635 0204 756E7369 		.ascii	"unsigned char\000"
 2635      676E6564 
 2635      20636861 
 2635      7200
 2636              	.LASF53:
 2637 0212 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2637      4320342E 
 2637      382E3420 
 2637      32303134 
 2637      30353236 
 2638 0245 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2638      20726576 
 2638      6973696F 
 2638      6E203231 
 2638      31333538 
 2639 0278 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections\000"
 2639      74643D67 
 2639      6E753939 
 2639      202D6666 
 2639      756E6374 
 2640              	.LASF33:
 2641 0299 77697A6E 		.ascii	"wiznetInit\000"
 2641      6574496E 
 2641      697400
 2642              	.LASF49:
 2643 02a4 77697A6E 		.ascii	"wiznetReadArray\000"
 2643      65745265 
 2643      61644172 
 2643      72617900 
 2644              	.LASF54:
 2645 02b4 2E5C7769 		.ascii	".\\wiznet5500.c\000"
 2645      7A6E6574 
 2645      35353030 
 2645      2E6300
 2646              	.LASF32:
 2647 02c3 736F636B 		.ascii	"socketInt\000"
 2647      6574496E 
 2647      7400
 2648              	.LASF16:
 2649 02cd 63686172 		.ascii	"char\000"
 2649      00
 2650              	.LASF44:
 2651 02d2 77697A6E 		.ascii	"wiznetWriteArray\000"
 2651      65745772 
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 55


 2651      69746541 
 2651      72726179 
 2651      00
 2652              	.LASF4:
 2653 02e3 5F5F7569 		.ascii	"__uint16_t\000"
 2653      6E743136 
 2653      5F7400
 2654              	.LASF52:
 2655 02ee 77697A6E 		.ascii	"wiznetRxPointer\000"
 2655      65745278 
 2655      506F696E 
 2655      74657200 
 2656              	.LASF46:
 2657 02fe 77697A6E 		.ascii	"wiznetRead8b\000"
 2657      65745265 
 2657      61643862 
 2657      00
 2658              	.LASF30:
 2659 030b 77697A6E 		.ascii	"wiznetConfigInterrupts\000"
 2659      6574436F 
 2659      6E666967 
 2659      496E7465 
 2659      72727570 
 2660              	.LASF27:
 2661 0322 77697A6E 		.ascii	"wiznetSend\000"
 2661      65745365 
 2661      6E6400
 2662              	.LASF19:
 2663 032d 6F776E49 		.ascii	"ownIpAddr\000"
 2663      70416464 
 2663      7200
 2664              	.LASF36:
 2665 0337 77697A6E 		.ascii	"wiznetWriteUdpFrame\000"
 2665      65745772 
 2665      69746555 
 2665      64704672 
 2665      616D6500 
 2666              	.LASF11:
 2667 034b 75696E74 		.ascii	"uint8_t\000"
 2667      385F7400 
 2668              	.LASF48:
 2669 0353 77697A6E 		.ascii	"wiznetRead16b\000"
 2669      65745265 
 2669      61643136 
 2669      6200
 2670              	.LASF22:
 2671 0361 636D6441 		.ascii	"cmdArray\000"
 2671      72726179 
 2671      00
 2672              	.LASF26:
 2673 036a 77697A6E 		.ascii	"wiznetClose\000"
 2673      6574436C 
 2673      6F736500 
 2674              	.LASF47:
 2675 0376 72657375 		.ascii	"result\000"
 2675      6C7400
 2676              	.LASF56:
ARM GAS  C:\Users\Samuel\AppData\Local\Temp\ccSIQwzY.s 			page 56


 2677 037d 7472616E 		.ascii	"transferSPI\000"
 2677      73666572 
 2677      53504900 
 2678              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
